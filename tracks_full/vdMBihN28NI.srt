1
00:00:00,000 --> 00:00:00,498

2
00:00:00,498 --> 00:01:06,732
[MUSIC PLAYING]

3
00:01:06,732 --> 00:01:09,050
PETE LEPAGE: Well, hello
everybody, and welcome to

4
00:01:09,050 --> 00:01:13,440
another edition of Chrome
Apps Office Hours.

5
00:01:13,440 --> 00:01:13,880
We've got--

6
00:01:13,880 --> 00:01:16,640
joining us today, we've
got Joe Marini.

7
00:01:16,640 --> 00:01:18,640
Joe, do you want to introduce
yourself?

8
00:01:18,640 --> 00:01:18,910
JOE MARINI: Sure.

9
00:01:18,910 --> 00:01:19,250
Thanks, Pete.

10
00:01:19,250 --> 00:01:20,240
I am Joe Marini.

11
00:01:20,240 --> 00:01:23,440
I'm a developer here on the
Chrome team and I work on

12
00:01:23,440 --> 00:01:24,360
Chrome Apps.

13
00:01:24,360 --> 00:01:26,550
PETE LEPAGE: Sweet, and
I'm Pete LePage.

14
00:01:26,550 --> 00:01:29,090
So today we're going to be
talking about the new Alarms

15
00:01:29,090 --> 00:01:33,270
API, which allows you to create
specific events that

16
00:01:33,270 --> 00:01:34,920
fire at specific--

17
00:01:34,920 --> 00:01:37,470
or create events that fire
at specific times

18
00:01:37,470 --> 00:01:40,150
or on regular intervals.

19
00:01:40,150 --> 00:01:43,580
With any kind of native or
installed app, one of the

20
00:01:43,580 --> 00:01:47,100
things you might want to do is
have regular events that go

21
00:01:47,100 --> 00:01:50,040
pull for data, or maybe you're
writing something like an

22
00:01:50,040 --> 00:01:54,370
alarm clock, and you want to
have the application notify

23
00:01:54,370 --> 00:01:57,770
the user of a specific thing
that happened, or that it's

24
00:01:57,770 --> 00:02:00,220
time to get up and it's
time to do something.

25
00:02:00,220 --> 00:02:02,970
So with the Alarms API,
you can actually

26
00:02:02,970 --> 00:02:03,960
go in and do that.

27
00:02:03,960 --> 00:02:07,050
You can much more easily say,
hey, even though my

28
00:02:07,050 --> 00:02:10,449
application is not running right
now, I want to go and

29
00:02:10,449 --> 00:02:12,550
fire a specific event
and have something

30
00:02:12,550 --> 00:02:14,610
happen with that event.

31
00:02:14,610 --> 00:02:17,840
So it's a pretty cool API,
pretty useful to use and it's

32
00:02:17,840 --> 00:02:19,590
really, really simple.

33
00:02:19,590 --> 00:02:21,980
Normally, our shows run
about 30 minutes.

34
00:02:21,980 --> 00:02:25,000
I think today we may actually
even finish up in about 15

35
00:02:25,000 --> 00:02:27,035
minutes because this is
a really simple API.

36
00:02:27,035 --> 00:02:29,830

37
00:02:29,830 --> 00:02:36,950
Why don't we go ahead and jump
in, and we'll take a look at

38
00:02:36,950 --> 00:02:38,350
how the API works.

39
00:02:38,350 --> 00:02:41,330
So let me just open these guys
up here so that we can get

40
00:02:41,330 --> 00:02:45,250
this going, and we'll
have a look here.

41
00:02:45,250 --> 00:02:49,890
So there's a relatively easy
way of creating an alarm.

42
00:02:49,890 --> 00:02:53,830
It's chrome.alarms.create and
you give it a name, which is a

43
00:02:53,830 --> 00:02:58,240
string, and an alarm info,
which is an object.

44
00:02:58,240 --> 00:02:59,640
So the string can be anything.

45
00:02:59,640 --> 00:03:02,690
You just use that to identify
what the alarm is, and then

46
00:03:02,690 --> 00:03:05,250
the alarm info has the
details about how

47
00:03:05,250 --> 00:03:06,720
the alarm gets fired.

48
00:03:06,720 --> 00:03:10,670
So there's a couple of things
that you could put in here.

49
00:03:10,670 --> 00:03:13,250
So first thing you could
have is when.

50
00:03:13,250 --> 00:03:16,650
So that's a specific time you
want the alarm to fire.

51
00:03:16,650 --> 00:03:23,050
So if you want it to fire at
say, now plus 30 minutes,

52
00:03:23,050 --> 00:03:31,690
you'd say, date.now times 60
seconds times 1,000 times 30.

53
00:03:31,690 --> 00:03:34,600
So that gives you the 30 minutes
because it gives that

54
00:03:34,600 --> 00:03:37,850
time n number of milliseconds
past the [? epoch. ?]

55
00:03:37,850 --> 00:03:40,900
The other option is you can say
delay in minutes, which

56
00:03:40,900 --> 00:03:44,630
provides the, hey, I want to
fire in 30 minutes or I want

57
00:03:44,630 --> 00:03:46,900
to fire in 45 minutes.

58
00:03:46,900 --> 00:03:50,710
So that's just a double if you
want a specific, hey, just

59
00:03:50,710 --> 00:03:53,510
hang out for a certain amount
of time and then

60
00:03:53,510 --> 00:03:55,180
fire this guy off.

61
00:03:55,180 --> 00:03:58,010
You can use either
delay in minutes.

62
00:03:58,010 --> 00:04:01,920
And then finally, period in
minutes is another one that

63
00:04:01,920 --> 00:04:05,710
says, hey, I want you to refire
this event every so

64
00:04:05,710 --> 00:04:10,490
often, so however many minutes
you want it to refire in.

65
00:04:10,490 --> 00:04:14,830
Now, all three of those are
optional, but realistically,

66
00:04:14,830 --> 00:04:18,720
you need at least one of them
provided, so you need either

67
00:04:18,720 --> 00:04:23,500
to provide the when or the
delay or the period.

68
00:04:23,500 --> 00:04:26,690
You could also do two of them,
so that you could say when

69
00:04:26,690 --> 00:04:30,050
plus period or delay in
minutes plus period.

70
00:04:30,050 --> 00:04:33,360
So you could say, hey, I want
you to fire this event in 30

71
00:04:33,360 --> 00:04:36,720
minutes and then wait 30 minutes
and fire it again and

72
00:04:36,720 --> 00:04:38,210
fire it again and
fire it again.

73
00:04:38,210 --> 00:04:41,340
So that way you can have that
recurring, hey, go check to

74
00:04:41,340 --> 00:04:45,090
see if there's any new data or
maybe you want to go and do

75
00:04:45,090 --> 00:04:47,710
something else with that.

76
00:04:47,710 --> 00:04:50,510
So like I said, they're all
optional, but you should fire

77
00:04:50,510 --> 00:04:51,790
at least one.

78
00:04:51,790 --> 00:04:56,620
If you don't apply anything,
the alarm just fires right

79
00:04:56,620 --> 00:05:00,990
away, which is kind
of pointless.

80
00:05:00,990 --> 00:05:04,040
And then, of course, you need
to listen for the event.

81
00:05:04,040 --> 00:05:11,190
With the Alarms API, it fires an
event when the alarm fires.

82
00:05:11,190 --> 00:05:14,750
That was repeating myself just
a little bit, but that's OK.

83
00:05:14,750 --> 00:05:18,800
And so you just say
chrome.alarms.onAlarm.addevent

84
00:05:18,800 --> 00:05:20,730
and then the function name
that you want to do.

85
00:05:20,730 --> 00:05:22,630
And of course, you can do an
inline function, and you'll

86
00:05:22,630 --> 00:05:25,300
see that in a sec when we
take a look at the demo.

87
00:05:25,300 --> 00:05:29,510
And it passes one parameter,
the alarms parameter.

88
00:05:29,510 --> 00:05:34,080
And in the alarms parameter, it
gives back the effectively,

89
00:05:34,080 --> 00:05:35,880
the alarm info that
you provided.

90
00:05:35,880 --> 00:05:39,200
So how often you want it
to fire as well as

91
00:05:39,200 --> 00:05:42,290
the name of the alarm.

92
00:05:42,290 --> 00:05:43,030
So that's it.

93
00:05:43,030 --> 00:05:45,730
It's pretty simple.

94
00:05:45,730 --> 00:05:48,720
Joe, is there anything you
want to add to that?

95
00:05:48,720 --> 00:05:50,270
JOE MARINI: Yeah, just a
couple of quick notes.

96
00:05:50,270 --> 00:05:54,020
First, we should point out
that there's actually no

97
00:05:54,020 --> 00:05:57,430
strict guarantee that the alarm
will fire exactly when

98
00:05:57,430 --> 00:05:58,130
you scheduled it to.

99
00:05:58,130 --> 00:05:58,470
PETE LEPAGE: Good point.

100
00:05:58,470 --> 00:06:00,910
JOE MARINI: Sometimes, due to
performance reasons, if

101
00:06:00,910 --> 00:06:02,850
there's a lot of alarms
scheduled, for example, we may

102
00:06:02,850 --> 00:06:06,800
delay the alarm some arbitrary
small amount of time so that

103
00:06:06,800 --> 00:06:10,722
all the alarm events don't
pile up in the system.

104
00:06:10,722 --> 00:06:13,060
The other really cool thing I
love about this API, is that

105
00:06:13,060 --> 00:06:15,700
it works even when your
app is not running.

106
00:06:15,700 --> 00:06:19,340
You skip an alarm, and then the
user closes your app, and

107
00:06:19,340 --> 00:06:22,750
the alarm comes along and your
app will actually be woken up

108
00:06:22,750 --> 00:06:25,730
and told that the alarm fired.

109
00:06:25,730 --> 00:06:29,360
In past programming paradigms,
sometimes developers would try

110
00:06:29,360 --> 00:06:31,990
to find a way to keep their app
running all the time so

111
00:06:31,990 --> 00:06:34,340
they could do some kind of
polling or whatever.

112
00:06:34,340 --> 00:06:36,420
You're using the Alarms API
and some others we have

113
00:06:36,420 --> 00:06:38,540
available as well, it makes
it so you don't

114
00:06:38,540 --> 00:06:39,420
have to do that anymore.

115
00:06:39,420 --> 00:06:43,400
You can just schedule a periodic
event that says,

116
00:06:43,400 --> 00:06:45,355
regardless of whether my app is
running or not, I need to

117
00:06:45,355 --> 00:06:46,570
know when this thing fires.

118
00:06:46,570 --> 00:06:48,680
And this is a really great
utility for doing that.

119
00:06:48,680 --> 00:06:49,220
PETE LEPAGE: Exactly.

120
00:06:49,220 --> 00:06:50,380
Yeah, that's a good point.

121
00:06:50,380 --> 00:06:52,910
In the past, you might have done
things like set interval

122
00:06:52,910 --> 00:06:56,910
or set timeout to
go and update.

123
00:06:56,910 --> 00:07:01,080
That works, and it's functional,
but it's a lot of

124
00:07:01,080 --> 00:07:03,380
code and it's just more
work than it's worth.

125
00:07:03,380 --> 00:07:03,840
With this--

126
00:07:03,840 --> 00:07:06,350
JOE MARINI: And once again, it
doesn't work when your apps

127
00:07:06,350 --> 00:07:07,090
not running.

128
00:07:07,090 --> 00:07:10,070
If your app gets terminated for
some reason or whatever,

129
00:07:10,070 --> 00:07:12,590
that code just-- the minute it
goes away, your code goes

130
00:07:12,590 --> 00:07:15,470
away, so Chrome Alarms API
helps solve that problem.

131
00:07:15,470 --> 00:07:16,530
PETE LEPAGE: Exactly.

132
00:07:16,530 --> 00:07:20,520
So I'm going to come out of my
slides here, and let's just

133
00:07:20,520 --> 00:07:23,510
have a look at a demo
that I've got here.

134
00:07:23,510 --> 00:07:26,250
So we'll take a look at the code
first because I think the

135
00:07:26,250 --> 00:07:27,940
code is most interesting.

136
00:07:27,940 --> 00:07:30,140
So there's a couple of things
that I want to point out

137
00:07:30,140 --> 00:07:34,260
within the code, so within the
manifest file, you need to ask

138
00:07:34,260 --> 00:07:36,110
for the alarms permission.

139
00:07:36,110 --> 00:07:38,280
You need to just say, hey, look,
I want to be able to

140
00:07:38,280 --> 00:07:39,380
fire alarms.

141
00:07:39,380 --> 00:07:44,520
So relatively simple permission
ask here, so I just

142
00:07:44,520 --> 00:07:46,450
said alarms.

143
00:07:46,450 --> 00:07:50,940
And then, the way I design this
app, I wanted the alarms

144
00:07:50,940 --> 00:07:53,670
to be able to be handled
whenever

145
00:07:53,670 --> 00:07:55,090
the app wasn't running.

146
00:07:55,090 --> 00:07:57,920
And this was something that, as
Joe just mentioned, if you

147
00:07:57,920 --> 00:08:00,950
wanted the alarms to be handled
when the app is not

148
00:08:00,950 --> 00:08:04,860
running, you need to put the
event listener into the main

149
00:08:04,860 --> 00:08:08,190
JavaScript files, so into the
main JS, into the place where

150
00:08:08,190 --> 00:08:10,410
you're listening for
all of the events.

151
00:08:10,410 --> 00:08:15,470
So you can see here, I've got
my chrome.alarms.onAlarm dot

152
00:08:15,470 --> 00:08:17,050
add event listener.

153
00:08:17,050 --> 00:08:19,620
And I'm just doing it as an
inline function, so I say,

154
00:08:19,620 --> 00:08:22,800
function alarm, looking
for that alarm.

155
00:08:22,800 --> 00:08:25,230
And I'm just going to do a
console log just because that

156
00:08:25,230 --> 00:08:27,285
way I can see what's
happening.

157
00:08:27,285 --> 00:08:30,290
And in this particular case, I'm
just going to throw up an

158
00:08:30,290 --> 00:08:33,100
old style WebKit notification.

159
00:08:33,100 --> 00:08:35,610
Really, the better way to do
this-- and I threw this

160
00:08:35,610 --> 00:08:38,669
together in about five minutes
earlier today--

161
00:08:38,669 --> 00:08:41,190
but the better way to do this
would have been to use one of

162
00:08:41,190 --> 00:08:45,750
the new notification APIs, which
we talked about last

163
00:08:45,750 --> 00:08:48,330
week, or maybe, I guess,
it was the week before.

164
00:08:48,330 --> 00:08:53,530
One of the cool things about
that is that you can use those

165
00:08:53,530 --> 00:08:56,590
really easily, and they just
came out of experimental, so

166
00:08:56,590 --> 00:09:01,090
you can use those without
the experimental flag.

167
00:09:01,090 --> 00:09:03,910
So then finally, we've got--

168
00:09:03,910 --> 00:09:07,490
we show our notification,
so create notification.

169
00:09:07,490 --> 00:09:11,630
And I'm just using the alarm
name because I just wanted

170
00:09:11,630 --> 00:09:12,400
something simple.

171
00:09:12,400 --> 00:09:15,040
And for the body of the message,
I'm just going to

172
00:09:15,040 --> 00:09:17,830
stringify the object so that
we can see what's going on,

173
00:09:17,830 --> 00:09:20,140
and then we show it.

174
00:09:20,140 --> 00:09:21,840
Within the actual app--

175
00:09:21,840 --> 00:09:24,580
if we have a look at the HTML
for a sec, you can see it's

176
00:09:24,580 --> 00:09:25,520
pretty simple.

177
00:09:25,520 --> 00:09:30,810
I've just got a form where I
take in the name for the

178
00:09:30,810 --> 00:09:34,410
event, a time, and
an add alarm.

179
00:09:34,410 --> 00:09:39,950
So that within the actual
application code, I've got the

180
00:09:39,950 --> 00:09:43,840
add for time, where I go and get
the date and time, or add

181
00:09:43,840 --> 00:09:47,870
for delay so that I can say,
hey, I want this to fire in x

182
00:09:47,870 --> 00:09:49,030
many minutes.

183
00:09:49,030 --> 00:09:54,310
So let's take a quick look, and
I'm going to set this guy

184
00:09:54,310 --> 00:09:58,290
for delay for two minutes
and add alarm.

185
00:09:58,290 --> 00:10:00,550
So you notice that the time
went away, so we've

186
00:10:00,550 --> 00:10:01,640
got this guy going.

187
00:10:01,640 --> 00:10:05,210
So in about two minutes, up in
this upper right hand corner

188
00:10:05,210 --> 00:10:07,020
that you'll see,
I think it's--

189
00:10:07,020 --> 00:10:09,160
yeah, right above my head,
right about there.

190
00:10:09,160 --> 00:10:12,540
We're going to see an alarm
notification that'll pop up.

191
00:10:12,540 --> 00:10:16,530
We could also use the specific
time so I want to

192
00:10:16,530 --> 00:10:19,870
set this for 12--

193
00:10:19,870 --> 00:10:20,450
whoops--

194
00:10:20,450 --> 00:10:23,530
for 12.

195
00:10:23,530 --> 00:10:29,970
Let's set this for 12:15
PM and add alarm.

196
00:10:29,970 --> 00:10:35,470
So I've added that, and I had
everything spit stuff out to

197
00:10:35,470 --> 00:10:38,280
the console so we could
see what's going on.

198
00:10:38,280 --> 00:10:40,620
So we can see that there are
alarms here that are

199
00:10:40,620 --> 00:10:42,150
available to us.

200
00:10:42,150 --> 00:10:44,800
So the first time when I click
it, you can see-- and let me

201
00:10:44,800 --> 00:10:47,850
just make this text a little bit
bigger-- you can see that

202
00:10:47,850 --> 00:10:51,200
we have all of our alarms,
which I just used

203
00:10:51,200 --> 00:10:55,480
chrome.alarms.getall, and
then printed the output.

204
00:10:55,480 --> 00:10:59,700
So we've got our delay one,
along with the scheduled time.

205
00:10:59,700 --> 00:11:05,400
And the second time we did it,
we've got for a specific time,

206
00:11:05,400 --> 00:11:09,200
and the time that it's
going to fire.

207
00:11:09,200 --> 00:11:11,810
So there's the scheduled time
and the name of it.

208
00:11:11,810 --> 00:11:13,940
Now, I think I see a bug
in my code here.

209
00:11:13,940 --> 00:11:17,010
I was playing with this a little
bit earlier, and this

210
00:11:17,010 --> 00:11:20,320
has to be a double, and this
happens to be a float.

211
00:11:20,320 --> 00:11:24,130
So we may end up having this guy
not quite work, so we'll

212
00:11:24,130 --> 00:11:25,120
see what happens in a sec.

213
00:11:25,120 --> 00:11:26,370
I think I know why.

214
00:11:26,370 --> 00:11:29,990

215
00:11:29,990 --> 00:11:34,150
So the other thing that I want
to have a look at, is if we

216
00:11:34,150 --> 00:11:38,620
inspect the background page
here, you can see that no

217
00:11:38,620 --> 00:11:39,780
events have been fired.

218
00:11:39,780 --> 00:11:42,530
When events get fired, we'll
have that guy fire off.

219
00:11:42,530 --> 00:11:48,610
So if we go back and have a
quick peek at my code--

220
00:11:48,610 --> 00:11:52,850
let's see, so we're doing
our delay in minutes.

221
00:11:52,850 --> 00:11:58,520
We're doing a parse int with
the for delay and that

222
00:11:58,520 --> 00:12:00,230
shouldn't be a--

223
00:12:00,230 --> 00:12:03,390
Alarm fired, but we didn't get
our notification popping up.

224
00:12:03,390 --> 00:12:08,280
So you can see that we got
our delay popping up, but

225
00:12:08,280 --> 00:12:11,490
actually, this is maybe not what
I was thinking it was.

226
00:12:11,490 --> 00:12:14,944

227
00:12:14,944 --> 00:12:18,861
Joe, do you see anything
with this?

228
00:12:18,861 --> 00:12:21,270
JOE MARINI: No, not right
off the bat, I don't.

229
00:12:21,270 --> 00:12:22,520
PETE LEPAGE: All right.

230
00:12:22,520 --> 00:12:25,560

231
00:12:25,560 --> 00:12:27,890
Well, we can see that the event
fired, so that's the

232
00:12:27,890 --> 00:12:28,840
important thing.

233
00:12:28,840 --> 00:12:30,170
JOE MARINI: That's the important
part, exactly.

234
00:12:30,170 --> 00:12:33,220
PETE LEPAGE: And the important
part here is that when the

235
00:12:33,220 --> 00:12:36,530
alarm fires, its firing off in
the main event so it's being

236
00:12:36,530 --> 00:12:37,840
handled in the main event.

237
00:12:37,840 --> 00:12:40,370
That means, like I said,
you can have

238
00:12:40,370 --> 00:12:41,580
these events fire off.

239
00:12:41,580 --> 00:12:43,060
You can go get new data.

240
00:12:43,060 --> 00:12:44,840
You can pop up notifications.

241
00:12:44,840 --> 00:12:49,160
You can do anything that you
need to do so that your users

242
00:12:49,160 --> 00:12:52,670
know what's going on, and that
your users know all the stuff

243
00:12:52,670 --> 00:12:54,630
that they need to know
about or that your

244
00:12:54,630 --> 00:12:56,220
app stays up to date.

245
00:12:56,220 --> 00:12:59,240
It's a really great way of
capturing data locally and

246
00:12:59,240 --> 00:13:02,260
catching stuff going on.

247
00:13:02,260 --> 00:13:04,072
So Joe, anything you'd
like to add?

248
00:13:04,072 --> 00:13:06,870
JOE MARINI: Well, of course, the
API gives you ways to see

249
00:13:06,870 --> 00:13:09,960
what alarms have been scheduled,
clear any specific

250
00:13:09,960 --> 00:13:12,260
alarms, clear all the alarms.

251
00:13:12,260 --> 00:13:14,380
It's a pretty full
featured API.

252
00:13:14,380 --> 00:13:15,190
PETE LEPAGE: Yeah.

253
00:13:15,190 --> 00:13:18,660
All right, so let's say pop over
to questions, and we can

254
00:13:18,660 --> 00:13:21,310
bring up their questions URL
because I know that we had a

255
00:13:21,310 --> 00:13:23,650
few questions already.

256
00:13:23,650 --> 00:13:27,700
And we'll take some
of your questions.

257
00:13:27,700 --> 00:13:31,530
So you can ask your questions,
the link is that way.

258
00:13:31,530 --> 00:13:32,270
There we go.

259
00:13:32,270 --> 00:13:34,940
The link is down that way if
you have questions that you

260
00:13:34,940 --> 00:13:37,390
want to ask about this.

261
00:13:37,390 --> 00:13:42,190
The first question we'll take,
can we use the API to remove

262
00:13:42,190 --> 00:13:45,080
cookies from other domains,
either time based or click

263
00:13:45,080 --> 00:13:46,760
based removals or anything
like that?

264
00:13:46,760 --> 00:13:49,480
And the answer to that is no.

265
00:13:49,480 --> 00:13:51,500
Joe, do you want to
collaborate on

266
00:13:51,500 --> 00:13:52,010
that a little bit?

267
00:13:52,010 --> 00:13:54,700
JOE MARINI: You have to remember
that one of the

268
00:13:54,700 --> 00:13:57,190
security models that we built
into Chrome Apps is that

269
00:13:57,190 --> 00:13:59,820
cookies are all isolated from
each other, so you can't just

270
00:13:59,820 --> 00:14:02,260
go poking into other cookies.

271
00:14:02,260 --> 00:14:04,920
So the short answer is no.

272
00:14:04,920 --> 00:14:06,770
There's an isolation
model in place.

273
00:14:06,770 --> 00:14:09,950
You've only got access to any
cookies that you've personally

274
00:14:09,950 --> 00:14:11,490
set and [INAUDIBLE].

275
00:14:11,490 --> 00:14:14,160
The whole cross domain thing
gets really hairy, really

276
00:14:14,160 --> 00:14:16,440
quickly, so for security
reasons, no.

277
00:14:16,440 --> 00:14:17,440
PETE LEPAGE: Exactly.

278
00:14:17,440 --> 00:14:20,280
So this is not something that
you're going to use for

279
00:14:20,280 --> 00:14:22,980
removing cookies or anything
like that for other places.

280
00:14:22,980 --> 00:14:25,550
You might use it if you want
to remove your own cookies,

281
00:14:25,550 --> 00:14:29,710
but that's about it.

282
00:14:29,710 --> 00:14:32,850
So the second question here,
are there any use cases for

283
00:14:32,850 --> 00:14:35,870
alarms that you feel have been
underutilized for developers

284
00:14:35,870 --> 00:14:39,090
or that you'd like
to see more of?

285
00:14:39,090 --> 00:14:41,340
To be honest, I don't think
we've seen many

286
00:14:41,340 --> 00:14:42,970
uses of this API yet.

287
00:14:42,970 --> 00:14:44,710
So--

288
00:14:44,710 --> 00:14:46,213
JOE MARINI: It's still
relatively new.

289
00:14:46,213 --> 00:14:49,340
I'm actually kind of excited to
see how it gets used, but I

290
00:14:49,340 --> 00:14:53,050
think there are some pretty
usual suspects use cases, but

291
00:14:53,050 --> 00:14:56,180
I'm actually kind of excited to
see what comes along that I

292
00:14:56,180 --> 00:14:57,020
hadn't thought of.

293
00:14:57,020 --> 00:14:58,960
PETE LEPAGE: Yeah.

294
00:14:58,960 --> 00:15:02,770
The main things that come to
mind for me are things like

295
00:15:02,770 --> 00:15:04,900
caching and storing data.

296
00:15:04,900 --> 00:15:10,610
So for example, a news app or
maybe a photos app, might want

297
00:15:10,610 --> 00:15:12,300
to store the stuff
that I'm going to

298
00:15:12,300 --> 00:15:13,570
look at every morning.

299
00:15:13,570 --> 00:15:18,010
So as I'm on my way into the
work or maybe I'm on the train

300
00:15:18,010 --> 00:15:21,700
or something like that, all of
the data that I need is always

301
00:15:21,700 --> 00:15:25,590
up to date so that I can be
like, great, perfect.

302
00:15:25,590 --> 00:15:27,830
And maybe that's something that
the user sets and the

303
00:15:27,830 --> 00:15:31,020
user says, hey, I want to update
this data every morning

304
00:15:31,020 --> 00:15:34,320
at this particular
time, or maybe--

305
00:15:34,320 --> 00:15:35,820
JOE MARINI: It also might be
useful to see how the data

306
00:15:35,820 --> 00:15:37,550
changes throughout the day.

307
00:15:37,550 --> 00:15:41,720
That same snapshot of data
across every hour or so.

308
00:15:41,720 --> 00:15:43,620
PETE LEPAGE: Exactly.

309
00:15:43,620 --> 00:15:47,780
The other thing that you could
use it for is listening for

310
00:15:47,780 --> 00:15:52,070
and updating data from the users
side up to the server.

311
00:15:52,070 --> 00:15:54,850
Because maybe it's something
that the user's

312
00:15:54,850 --> 00:15:55,930
storing stuff locally.

313
00:15:55,930 --> 00:15:58,950
Think something like Google
Docs, where as I'm typing and

314
00:15:58,950 --> 00:16:02,280
storing data locally, maybe I
want to save that up to the

315
00:16:02,280 --> 00:16:06,800
cloud and rather than push it
up every single keystroke or

316
00:16:06,800 --> 00:16:09,830
every bunch of keystrokes, you
can have an alarm fire for

317
00:16:09,830 --> 00:16:13,720
every three minutes or five
minutes or 20 minutes, so that

318
00:16:13,720 --> 00:16:16,400
all the data gets stored
up to the cloud.

319
00:16:16,400 --> 00:16:20,170
But again, pushing and pulling
data is, I think, one of the

320
00:16:20,170 --> 00:16:24,905
primary things that it's going
to get used for, but writing

321
00:16:24,905 --> 00:16:26,750
an alarm clock.

322
00:16:26,750 --> 00:16:29,910
Perfectly great example.

323
00:16:29,910 --> 00:16:33,230
JOE MARINI: Anything that
requires periodic code

324
00:16:33,230 --> 00:16:36,410
execution is a pretty
good use case.

325
00:16:36,410 --> 00:16:39,010
PETE LEPAGE: Exactly.

326
00:16:39,010 --> 00:16:44,250
So Gavin Good from Kingston
wants to know, how do you turn

327
00:16:44,250 --> 00:16:45,870
alarms on and off?

328
00:16:45,870 --> 00:16:50,090
So the way that you turn an
alarm on and off, from a

329
00:16:50,090 --> 00:16:53,300
developer point of view, is you
add the alarm, and then

330
00:16:53,300 --> 00:16:56,060
you can do a clear alarm.

331
00:16:56,060 --> 00:17:00,940
So if we have a look at the API
again, let me just pull

332
00:17:00,940 --> 00:17:03,330
that particular slide up.

333
00:17:03,330 --> 00:17:07,220
And let's see here, I think--

334
00:17:07,220 --> 00:17:08,400
Here we go, yeah.

335
00:17:08,400 --> 00:17:11,089
So you can see here on
this particular--

336
00:17:11,089 --> 00:17:13,190
there's a clear with
a clear name.

337
00:17:13,190 --> 00:17:16,150
So you could provide a name of
the alarm you want to clear,

338
00:17:16,150 --> 00:17:17,560
so that'll turn it off.

339
00:17:17,560 --> 00:17:20,240
And then you just then
add a new one.

340
00:17:20,240 --> 00:17:21,349
JOE MARINI: There's
also a clear all.

341
00:17:21,349 --> 00:17:22,210
You can also--

342
00:17:22,210 --> 00:17:23,819
There's a clear all that will
clear all of them out.

343
00:17:23,819 --> 00:17:24,770
PETE LEPAGE: Exactly.

344
00:17:24,770 --> 00:17:28,470
As a user, you can't turn
them off, but from a

345
00:17:28,470 --> 00:17:29,560
developer you could.

346
00:17:29,560 --> 00:17:33,890
So if you want to be a good
developer, it's probably a

347
00:17:33,890 --> 00:17:37,330
smart idea to allow the user
some way of turning those off

348
00:17:37,330 --> 00:17:40,450
if it's not a core piece of
functionality for your

349
00:17:40,450 --> 00:17:41,780
application.

350
00:17:41,780 --> 00:17:45,000
So if it's maybe just popping
up an alert when there's new

351
00:17:45,000 --> 00:17:49,020
email or something like that,
then, yeah, that's something

352
00:17:49,020 --> 00:17:51,060
you want to give a choice to.

353
00:17:51,060 --> 00:17:54,340
Or maybe you want to allow the
user to choose how often they

354
00:17:54,340 --> 00:17:55,490
want to poll.

355
00:17:55,490 --> 00:17:57,720
So instead of saying, hey, we're
going to poll every 30

356
00:17:57,720 --> 00:18:02,450
seconds or 90 seconds
or minute, you can

357
00:18:02,450 --> 00:18:05,130
definitely do that.

358
00:18:05,130 --> 00:18:06,520
All right.

359
00:18:06,520 --> 00:18:09,430
Let's see, are there any
other questions before

360
00:18:09,430 --> 00:18:11,160
we wrap up for today?

361
00:18:11,160 --> 00:18:13,850
I think that looks like
all the questions.

362
00:18:13,850 --> 00:18:17,160
So Joe, thanks for joining
me this morning and--

363
00:18:17,160 --> 00:18:17,762
JOE MARINI: Thanks
for having me.

364
00:18:17,762 --> 00:18:18,450
I appreciate it.

365
00:18:18,450 --> 00:18:20,260
PETE LEPAGE: Thanks to everybody
for turning it.

366
00:18:20,260 --> 00:18:22,960
We actually are going to
be back again tomorrow.

367
00:18:22,960 --> 00:18:26,830
We have a special edition of
our Chrome Apps, and we're

368
00:18:26,830 --> 00:18:30,040
actually going to be moving our
show to Wednesdays now,

369
00:18:30,040 --> 00:18:31,880
for a whole bunch of reasons.

370
00:18:31,880 --> 00:18:36,240
So we hope you'll join us
starting tomorrow, and we look

371
00:18:36,240 --> 00:18:37,370
forward to seeing you.

372
00:18:37,370 --> 00:18:40,040
All right, well, thanks
everybody.

373
00:18:40,040 --> 00:18:41,290
JOE MARINI: Thanks, everyone.

374
00:18:41,290 --> 00:19:25,548

