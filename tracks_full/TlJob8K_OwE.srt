1
00:00:00,000 --> 00:00:08,700

2
00:00:08,700 --> 00:00:12,770
PAUL IRISH: Hi, and welcome to
Blink Questions Answered.

3
00:00:12,770 --> 00:00:14,980
Over the past day we've
collected hundreds of

4
00:00:14,980 --> 00:00:17,800
questions and votes from
you, getting your

5
00:00:17,800 --> 00:00:19,620
questions about Blink.

6
00:00:19,620 --> 00:00:21,100
And today we're going to be
answering all the top

7
00:00:21,100 --> 00:00:23,590
questions with this panel.

8
00:00:23,590 --> 00:00:25,650
So as a matter of
introduction, my

9
00:00:25,650 --> 00:00:26,530
name is Paul Irish.

10
00:00:26,530 --> 00:00:28,810
And I'm a developer advocate
on the Chrome team.

11
00:00:28,810 --> 00:00:32,729
And we have a whole host of
other really smart folks to

12
00:00:32,729 --> 00:00:33,330
answer these questions.

13
00:00:33,330 --> 00:00:35,310
So if you can introduce.

14
00:00:35,310 --> 00:00:36,460
DARIN FISHER: Hi, I'm
Darin Fisher.

15
00:00:36,460 --> 00:00:40,610
I'm engineering lead for the
Chrome web platform team.

16
00:00:40,610 --> 00:00:41,870
ALEX KOMOROSKE: I'm
Alex Komoroske.

17
00:00:41,870 --> 00:00:45,290
I'm a product manager on the
Chrome web platform team.

18
00:00:45,290 --> 00:00:45,970
ERIC SEIDEL: My name
is Eric Seidel.

19
00:00:45,970 --> 00:00:49,510
I'm a long time WebKit
contributor, and now a member

20
00:00:49,510 --> 00:00:51,630
of the Blink team.

21
00:00:51,630 --> 00:00:51,930
PAUL IRISH: Great.

22
00:00:51,930 --> 00:00:56,460
So we're just going to go
through from the top questions

23
00:00:56,460 --> 00:00:59,610
that were submitted and voted
up by everyone, and get some

24
00:00:59,610 --> 00:01:01,770
answers to some of the things
that everyone's wondering

25
00:01:01,770 --> 00:01:05,650
about with the new Blink
announcement.

26
00:01:05,650 --> 00:01:08,860
The first one that we have
is from Peter Kasting.

27
00:01:08,860 --> 00:01:10,120
And it's a three-parter.

28
00:01:10,120 --> 00:01:12,360
But I'll read it
out right now.

29
00:01:12,360 --> 00:01:15,130
What will be the relationship
between the WebKit and Blink

30
00:01:15,130 --> 00:01:16,600
code bases going forward?

31
00:01:16,600 --> 00:01:18,960
Will the Chromium port be
removed from WebKit?

32
00:01:18,960 --> 00:01:22,190
Is there any policy or tooling
to ensure that changes, either

33
00:01:22,190 --> 00:01:24,540
bug fixes and features,
in one code base

34
00:01:24,540 --> 00:01:27,550
migrate to the other?

35
00:01:27,550 --> 00:01:28,110
ERIC SEIDEL: I'll take that.

36
00:01:28,110 --> 00:01:30,590
There's no real formal
relationship

37
00:01:30,590 --> 00:01:31,490
between the two teams.

38
00:01:31,490 --> 00:01:35,350
I expect that they'll be
sharing ideas and some

39
00:01:35,350 --> 00:01:38,890
patches, maybe more so
in the beginning.

40
00:01:38,890 --> 00:01:41,160
In the beginning it'll be
easier to share patches.

41
00:01:41,160 --> 00:01:44,020
Over time I expect that the two
code bases will diverge,

42
00:01:44,020 --> 00:01:49,190
and will become not as easy
to share patches.

43
00:01:49,190 --> 00:01:52,400
As far as the removal of
Chromium port from WebKit,

44
00:01:52,400 --> 00:01:55,060
that's really up to the WebKit
project to figure out what

45
00:01:55,060 --> 00:01:56,310
makes sense for them.

46
00:01:56,310 --> 00:02:02,550

47
00:02:02,550 --> 00:02:04,660
It'll be interesting to
see how it evolves.

48
00:02:04,660 --> 00:02:06,960
I think there's people on both
sides who care passionately

49
00:02:06,960 --> 00:02:09,270
about the web platform,
and the web platform

50
00:02:09,270 --> 00:02:12,980
implementations that are
in WebKit and in Blink.

51
00:02:12,980 --> 00:02:16,961
And people will be motivated
to share ideas.

52
00:02:16,961 --> 00:02:19,380
ALEX KOMOROSKE: I should point
out, too, that we already work

53
00:02:19,380 --> 00:02:21,500
with other browser
vendors as well.

54
00:02:21,500 --> 00:02:24,980
Standards, activities, and
informal discussions, and

55
00:02:24,980 --> 00:02:26,920
filing bugs, and commenting
on their bug databases.

56
00:02:26,920 --> 00:02:28,200
And I imagine this will
be no different.

57
00:02:28,200 --> 00:02:30,740

58
00:02:30,740 --> 00:02:31,680
PAUL IRISH: Great.

59
00:02:31,680 --> 00:02:33,840
The next question is
about availability.

60
00:02:33,840 --> 00:02:36,650
A lot of people were
curious about this.

61
00:02:36,650 --> 00:02:40,250
So we got a question from Mihai
in Bucharest, and from a

62
00:02:40,250 --> 00:02:42,260
number of other people.

63
00:02:42,260 --> 00:02:44,920
When will Blink ship
on Canary?

64
00:02:44,920 --> 00:02:47,070
When will it be available
in stable?

65
00:02:47,070 --> 00:02:49,870
How far along in development
is it?

66
00:02:49,870 --> 00:02:51,960
ALEX KOMOROSKE: One thing that I
want to emphasize is that at

67
00:02:51,960 --> 00:02:54,180
the very beginning there's
really nothing

68
00:02:54,180 --> 00:02:55,230
different from WebKit.

69
00:02:55,230 --> 00:02:57,550
It's over time that they will
evolve in different

70
00:02:57,550 --> 00:02:58,840
directions.

71
00:02:58,840 --> 00:03:01,740
Technically, today's canary
will be using Bink.

72
00:03:01,740 --> 00:03:03,540
But in reality there's going
to be no difference for web

73
00:03:03,540 --> 00:03:05,060
developers, nothing that
you can even see.

74
00:03:05,060 --> 00:03:07,162
The user agent, for example,
will remain the same for the

75
00:03:07,162 --> 00:03:08,240
time being.

76
00:03:08,240 --> 00:03:10,540
PAUL IRISH: If you want,
you can test out

77
00:03:10,540 --> 00:03:12,730
today's canary build.

78
00:03:12,730 --> 00:03:14,200
Blink is in it.

79
00:03:14,200 --> 00:03:17,205
But really it's basically
the exact same

80
00:03:17,205 --> 00:03:18,850
as yesterday's canary.

81
00:03:18,850 --> 00:03:21,574
So you won't have any big
changes to deal with.

82
00:03:21,574 --> 00:03:24,570

83
00:03:24,570 --> 00:03:25,770
We'll move forward.

84
00:03:25,770 --> 00:03:28,280
What is the plan for
transitioning the WebKit

85
00:03:28,280 --> 00:03:32,060
integrated in Android
to Blink look like?

86
00:03:32,060 --> 00:03:37,310
So what's the story for the
Chrome on Android and the

87
00:03:37,310 --> 00:03:41,580
stock Android browser?

88
00:03:41,580 --> 00:03:43,600
DARIN FISHER: I think the story
is very similar to the

89
00:03:43,600 --> 00:03:45,980
previous question.

90
00:03:45,980 --> 00:03:49,650
Chrome, going forward will be
using Blink instead of WebKit.

91
00:03:49,650 --> 00:03:52,010
That means Chrome,
on all platforms,

92
00:03:52,010 --> 00:03:55,190
will be using Blink.

93
00:03:55,190 --> 00:03:59,230
The second part about that, the
Android browser, that has

94
00:03:59,230 --> 00:04:01,940
to do with the product
cycle for Chrome,

95
00:04:01,940 --> 00:04:04,300
and Chrome on Android.

96
00:04:04,300 --> 00:04:06,970
As far as this team is focused
on, we're just trying to make

97
00:04:06,970 --> 00:04:10,710
sure that Blink runs really
great, and is a great web

98
00:04:10,710 --> 00:04:13,010
rendering engine for Chrome, on
all platforms where Chrome

99
00:04:13,010 --> 00:04:14,590
can be found.

100
00:04:14,590 --> 00:04:18,920
PAUL IRISH: I should point out
that Chrome and Android will

101
00:04:18,920 --> 00:04:23,280
essentially have Blink
as of version 28.

102
00:04:23,280 --> 00:04:25,910
This is the same for
Chrome on desktop.

103
00:04:25,910 --> 00:04:29,320
So 28 is the first
Chrome release.

104
00:04:29,320 --> 00:04:31,060
It's in its canary right now.

105
00:04:31,060 --> 00:04:34,040
And it'll be in stable in
about 10-ish weeks.

106
00:04:34,040 --> 00:04:36,690
Hopefully, we'll see.

107
00:04:36,690 --> 00:04:37,730
DARIN FISHER: I'm not
sure when they'll be

108
00:04:37,730 --> 00:04:41,400
pushing the next beta.

109
00:04:41,400 --> 00:04:43,950
PAUL IRISH: There's a Chrome on
Android beta via the Play

110
00:04:43,950 --> 00:04:46,370
store they can take a look at.

111
00:04:46,370 --> 00:04:48,640
Not exactly sure when
it'll be there.

112
00:04:48,640 --> 00:04:51,730
Again, don't expect
any big changes.

113
00:04:51,730 --> 00:04:53,670
It's the same code base,
for the most.

114
00:04:53,670 --> 00:04:59,750

115
00:04:59,750 --> 00:05:03,330
In some of the documentation
that came out yesterday, there

116
00:05:03,330 --> 00:05:05,980
was a point around some of the
architectural changes that

117
00:05:05,980 --> 00:05:07,330
we're looking at.

118
00:05:07,330 --> 00:05:11,500
So one of them was we said, we'd
like to exploring larger

119
00:05:11,500 --> 00:05:14,440
ideas, like moving the entire
DOM into JavaScript.

120
00:05:14,440 --> 00:05:16,640
This has the potential to make
JavaScript DOM access

121
00:05:16,640 --> 00:05:18,010
dramatically faster.

122
00:05:18,010 --> 00:05:20,180
Is there anything that we
can elaborate on on

123
00:05:20,180 --> 00:05:21,340
this kind of idea?

124
00:05:21,340 --> 00:05:22,780
ERIC SEIDEL: I'm happy
to take that.

125
00:05:22,780 --> 00:05:25,420
So one of things to understand
is the Document Object Model,

126
00:05:25,420 --> 00:05:28,140
the DOM is implemented in the
part we call WebCore,

127
00:05:28,140 --> 00:05:29,560
which is all C++.

128
00:05:29,560 --> 00:05:32,670
And when you, in your JavaScript
page, access the

129
00:05:32,670 --> 00:05:36,750
DOM, your code has to leave the
JavaScript virtual machine

130
00:05:36,750 --> 00:05:37,890
and enter into WebCore.

131
00:05:37,890 --> 00:05:39,180
There's a cost of that.

132
00:05:39,180 --> 00:05:41,530
And although it's pretty
fast today, we'd like

133
00:05:41,530 --> 00:05:42,510
it to be way faster.

134
00:05:42,510 --> 00:05:45,080
And the way to make it way
faster is for your code to not

135
00:05:45,080 --> 00:05:47,700
ever have to leave the
JavaScript virtual machine,

136
00:05:47,700 --> 00:05:49,320
but instead be able to access
the DOM directly.

137
00:05:49,320 --> 00:05:52,960
And to do that we'd have to move
the DOM into JavaScript.

138
00:05:52,960 --> 00:05:56,380
And this is one of the many
crazy ideas that were

139
00:05:56,380 --> 00:05:58,450
exploring in the future
of Blink.

140
00:05:58,450 --> 00:06:00,240
DARIN FISHER: Crazy, because
it's not exactly

141
00:06:00,240 --> 00:06:02,400
an automatic win.

142
00:06:02,400 --> 00:06:05,220
There's pros and cons
to any such change.

143
00:06:05,220 --> 00:06:07,580
And we're going to explore that,
and see what kind of

144
00:06:07,580 --> 00:06:11,920
benefits we can derive and what
opportunities can be had

145
00:06:11,920 --> 00:06:14,060
from such a crazy idea that.

146
00:06:14,060 --> 00:06:15,320
ALEX KOMOROSKE: There
are a lot of ideas

147
00:06:15,320 --> 00:06:17,150
on the project page.

148
00:06:17,150 --> 00:06:19,720
We're just collecting a wish
list of things we want to look

149
00:06:19,720 --> 00:06:21,930
into and investigate
that now we can.

150
00:06:21,930 --> 00:06:24,800
Because we can change
architectural boundaries if

151
00:06:24,800 --> 00:06:27,860
necessary, and really
dream big.

152
00:06:27,860 --> 00:06:30,920
I think we're all really excited
try all these crazy

153
00:06:30,920 --> 00:06:33,480
ideas, and see which
ones work.

154
00:06:33,480 --> 00:06:35,400
PAUL IRISH: Another question
that we had--

155
00:06:35,400 --> 00:06:37,310
this is from Greg again--
something

156
00:06:37,310 --> 00:06:39,670
that was in the Docs.

157
00:06:39,670 --> 00:06:42,970
This was around removing
things.

158
00:06:42,970 --> 00:06:46,210
We had a note and there around
removing obscure parts of the

159
00:06:46,210 --> 00:06:49,450
DOM, and making backwards
incompatible changes to

160
00:06:49,450 --> 00:06:52,340
obscure parts that benefit
performance or remove

161
00:06:52,340 --> 00:06:53,710
complexity.

162
00:06:53,710 --> 00:06:57,460
What can we share around this?

163
00:06:57,460 --> 00:06:58,840
ERIC SEIDEL: I'm happy
to take that as well.

164
00:06:58,840 --> 00:07:02,130
This actually a larger trend in
the web platform right now.

165
00:07:02,130 --> 00:07:06,210
If you look at HTML5, HTML5 did
a lot of work to try to

166
00:07:06,210 --> 00:07:09,450
remove some of the old crufty
bits that were perhaps speced

167
00:07:09,450 --> 00:07:12,930
in HTML2 or 3, but haven't
been used in 20 years.

168
00:07:12,930 --> 00:07:17,840
A good example of this is the
isindex tag, which was an idea

169
00:07:17,840 --> 00:07:20,490
long ago, and has now been
replaced by a much simpler

170
00:07:20,490 --> 00:07:22,390
implementation in HTML5.

171
00:07:22,390 --> 00:07:24,560
And the same thing is true of
these things called entity

172
00:07:24,560 --> 00:07:27,340
reference nodes, which exists
technical in the DOM, but

173
00:07:27,340 --> 00:07:28,390
nobody's ever used.

174
00:07:28,390 --> 00:07:31,290
So we've been removing these
out of WebKit and out of

175
00:07:31,290 --> 00:07:35,261
Blink, as the specs have moved
forward to also remove them.

176
00:07:35,261 --> 00:07:37,610
DARIN FISHER: But we plan to
do so very carefully, to

177
00:07:37,610 --> 00:07:40,130
ensure that we are not breaking
or torturing web

178
00:07:40,130 --> 00:07:41,780
developers along the way.

179
00:07:41,780 --> 00:07:44,810
The idea is to identify the low
hanging fruit, and clean

180
00:07:44,810 --> 00:07:47,980
up the platform, if we can.

181
00:07:47,980 --> 00:07:51,730
And hopefully in a way that
moves a platform forward in a

182
00:07:51,730 --> 00:07:52,460
very positive way.

183
00:07:52,460 --> 00:07:55,730
Because over time, if you just
keep accumulating features,

184
00:07:55,730 --> 00:07:57,630
the platform suffers.

185
00:07:57,630 --> 00:07:59,340
ALEX KOMOROSKE: We've been
investigating looking at, for

186
00:07:59,340 --> 00:08:03,450
example, across the web with the
search index, and seeing

187
00:08:03,450 --> 00:08:05,510
where these different features
are being used.

188
00:08:05,510 --> 00:08:06,790
We published a few
of those results.

189
00:08:06,790 --> 00:08:07,800
We're looking into that more.

190
00:08:07,800 --> 00:08:10,530
Because that helps give us a
better lens into what features

191
00:08:10,530 --> 00:08:13,380
are actually being used, and how
much of a risk there is in

192
00:08:13,380 --> 00:08:14,110
removing them.

193
00:08:14,110 --> 00:08:16,930
Certain features, like isindex,
no one's using that.

194
00:08:16,930 --> 00:08:18,980
But other ones, it
helps figure out

195
00:08:18,980 --> 00:08:20,320
which ones you can--

196
00:08:20,320 --> 00:08:20,980
[INAUDIBLE]

197
00:08:20,980 --> 00:08:21,400
responsibly.

198
00:08:21,400 --> 00:08:23,760
DARIN FISHER: Sometimes we have
to do some work to help

199
00:08:23,760 --> 00:08:24,360
people migrate.

200
00:08:24,360 --> 00:08:26,540
We have some evangelism
work, and so on.

201
00:08:26,540 --> 00:08:29,490
Because there can be some people
stuck on an old way of

202
00:08:29,490 --> 00:08:30,080
doing something.

203
00:08:30,080 --> 00:08:34,049
And there's a new way that
would be better.

204
00:08:34,049 --> 00:08:36,750
PAUL IRISH: Some of that, taking
a look at the real

205
00:08:36,750 --> 00:08:41,390
world usage of CSS, whether
the prefix to prefix DOM

206
00:08:41,390 --> 00:08:45,420
things, we've looked into this
as a way to identify how we

207
00:08:45,420 --> 00:08:48,240
can responsibly deprecate
things like prefixed CSS

208
00:08:48,240 --> 00:08:50,010
properties as well.

209
00:08:50,010 --> 00:08:52,550
ALEX KOMOROSKE: We announced
yesterday that going forward

210
00:08:52,550 --> 00:08:54,680
we'll have a policy of no vendor
prefixes, which is

211
00:08:54,680 --> 00:08:57,290
similar to what Mozilla
is doing, and the

212
00:08:57,290 --> 00:08:59,020
policy they've adopted.

213
00:08:59,020 --> 00:09:00,870
There are a lot of legacy
prefixes for

214
00:09:00,870 --> 00:09:02,720
stuff that we've inherited.

215
00:09:02,720 --> 00:09:05,160
And over time, on a case
by case basis, we'll be

216
00:09:05,160 --> 00:09:08,670
investigating which of these
we can just deprecate the

217
00:09:08,670 --> 00:09:11,140
prefix version, because the
non-prefixed version works.

218
00:09:11,140 --> 00:09:12,420
Which ones are nonstandard?

219
00:09:12,420 --> 00:09:13,820
Should those just be
fully deprecated?

220
00:09:13,820 --> 00:09:15,330
Should they be standardized?

221
00:09:15,330 --> 00:09:17,320
And really on a case by case
basis trying to work

222
00:09:17,320 --> 00:09:18,230
through this list.

223
00:09:18,230 --> 00:09:20,570
Ultimately, sometime in the
future, getting to a point

224
00:09:20,570 --> 00:09:22,220
where hopefully there
are no prefixes.

225
00:09:22,220 --> 00:09:24,590
That'll take us some
time to get to.

226
00:09:24,590 --> 00:09:28,160
We have to do it responsibly
so we don't break stuff.

227
00:09:28,160 --> 00:09:31,040
PAUL IRISH: Next question is,
what will prevent the same

228
00:09:31,040 --> 00:09:33,060
collaborative development
difficulties that hampered

229
00:09:33,060 --> 00:09:36,590
WebKit emerging in Blink as it
gains more contributors, and

230
00:09:36,590 --> 00:09:38,880
is ported to more platforms?

231
00:09:38,880 --> 00:09:41,070
DARIN FISHER: The key comment
here is porting.

232
00:09:41,070 --> 00:09:48,090
And actually Blink will be built
on a virtual platform,

233
00:09:48,090 --> 00:09:50,710
if you will, that doesn't
require a lot of porting

234
00:09:50,710 --> 00:09:52,380
effort to bring it
to new platforms.

235
00:09:52,380 --> 00:09:54,400
You can see already that Chrome
runs on variety of

236
00:09:54,400 --> 00:09:58,240
devices, from desktop down
to embedded systems.

237
00:09:58,240 --> 00:10:03,030
And the point is that not a
lot of work is required to

238
00:10:03,030 --> 00:10:06,350
move that code base across
these different systems.

239
00:10:06,350 --> 00:10:09,830
This is all true because
Chromium's sandboxed,

240
00:10:09,830 --> 00:10:15,370
multi-process architecture
forced us to take away

241
00:10:15,370 --> 00:10:18,820
OS-specific integration
from the web platform

242
00:10:18,820 --> 00:10:20,130
implementation, from WebKit.

243
00:10:20,130 --> 00:10:23,160
So we, over the course of
time, developed this

244
00:10:23,160 --> 00:10:24,960
abstraction layer, this virtual
platform on which

245
00:10:24,960 --> 00:10:26,170
WebKit's built.

246
00:10:26,170 --> 00:10:28,790
And going forward with Blink,
that's the only platform that

247
00:10:28,790 --> 00:10:32,220
will support Blink, which means
that it will be very

248
00:10:32,220 --> 00:10:33,980
portable code base.

249
00:10:33,980 --> 00:10:36,820
We've already seen people
having plenty of success

250
00:10:36,820 --> 00:10:40,630
taking Chromium's content
layer, which is the

251
00:10:40,630 --> 00:10:43,230
multi-process embedding
layers, that it

252
00:10:43,230 --> 00:10:45,170
will enclose Blink.

253
00:10:45,170 --> 00:10:47,530
And they've taken that to many
other platforms, and used it

254
00:10:47,530 --> 00:10:49,710
in many different sorts of
applications, all without

255
00:10:49,710 --> 00:10:56,770
having to substantially fork
or add code to Chromium.

256
00:10:56,770 --> 00:10:59,800
We're really excited about the
prospects of allowing a lot of

257
00:10:59,800 --> 00:11:02,680
people to participate on Blink,
and make use of it in

258
00:11:02,680 --> 00:11:05,780
new ways, without having to
torture the code base with a

259
00:11:05,780 --> 00:11:09,910
lot of ifdefs or variations.

260
00:11:09,910 --> 00:11:12,145
ALEX KOMOROSKE: Paul, you had a
post a few weeks ago that I

261
00:11:12,145 --> 00:11:13,090
thought was amazing.

262
00:11:13,090 --> 00:11:14,990
I learned a lot from that
post, actually.

263
00:11:14,990 --> 00:11:18,170
And you talked about how there
are different layers in WebKit

264
00:11:18,170 --> 00:11:18,590
supporting them all.

265
00:11:18,590 --> 00:11:21,580
You have to bring a lot of
things to the table, every

266
00:11:21,580 --> 00:11:22,940
platform you want to run on.

267
00:11:22,940 --> 00:11:26,450
And with Blink, in with the
content layer, you get all

268
00:11:26,450 --> 00:11:28,070
this stuff just more easily.

269
00:11:28,070 --> 00:11:29,710
We don't have to implement
a special version.

270
00:11:29,710 --> 00:11:31,370
DARIN FISHER: You get a
cross-platform implementation

271
00:11:31,370 --> 00:11:32,520
of these things.

272
00:11:32,520 --> 00:11:34,730
It isn't like it's
an atomic unit.

273
00:11:34,730 --> 00:11:36,060
There is some modularity
to it.

274
00:11:36,060 --> 00:11:39,020
It allows people to subtract
modules that they don't want

275
00:11:39,020 --> 00:11:40,775
to bring with them
to the platform.

276
00:11:40,775 --> 00:11:47,430
But we strive in the Chromium
to modularize, as opposed to

277
00:11:47,430 --> 00:11:52,290
using preprocessor directives
to hack up the code base.

278
00:11:52,290 --> 00:11:56,580

279
00:11:56,580 --> 00:11:59,370
PAUL IRISH: Say, for instance,
V8 and Skia-- do those come

280
00:11:59,370 --> 00:12:01,410
along with the content
layer of Chromium?

281
00:12:01,410 --> 00:12:01,860
DARIN FISHER: That's right.

282
00:12:01,860 --> 00:12:05,420
V8 and Skia are implied
by this system.

283
00:12:05,420 --> 00:12:08,827
So Blink will depend on Skia
for its graphics and V8 for

284
00:12:08,827 --> 00:12:10,760
its JavaScript engine.

285
00:12:10,760 --> 00:12:12,780
ALEX KOMOROSKE: And actually
that coupling allows us to

286
00:12:12,780 --> 00:12:16,460
potentially change those
architectural layers, they way

287
00:12:16,460 --> 00:12:18,450
those interact, and
optimize those.

288
00:12:18,450 --> 00:12:19,910
DARIN FISHER: This is a really
important point.

289
00:12:19,910 --> 00:12:23,210
I think both the Skia team and
V8 are both pretty excited

290
00:12:23,210 --> 00:12:26,080
about the opportunity to improve
the integration of

291
00:12:26,080 --> 00:12:28,640
those libraries with the
rendering engine.

292
00:12:28,640 --> 00:12:32,950
That's going to mean changes
in those interfaces.

293
00:12:32,950 --> 00:12:34,210
PAUL IRISH: Great.

294
00:12:34,210 --> 00:12:36,420
Moving on to the next question,
will the changes

295
00:12:36,420 --> 00:12:40,100
from Blink be contributed back
to the WebKit project.

296
00:12:40,100 --> 00:12:41,680
ERIC SEIDEL: They're
separate projects.

297
00:12:41,680 --> 00:12:46,090
Definitely when we forked WebKit
from KHTML, we saw a

298
00:12:46,090 --> 00:12:49,050
lot of changes that got moved
back and forth between the

299
00:12:49,050 --> 00:12:49,550
code bases.

300
00:12:49,550 --> 00:12:51,460
Because they began
so similarly.

301
00:12:51,460 --> 00:12:54,840
And I would predict that similar
effects will happen

302
00:12:54,840 --> 00:12:56,210
with Blink.

303
00:12:56,210 --> 00:12:57,620
But they are separate
projects.

304
00:12:57,620 --> 00:12:59,090
They are separate code bases.

305
00:12:59,090 --> 00:13:02,500
And we don't have any
plans, currently,

306
00:13:02,500 --> 00:13:04,730
to be moving patches.

307
00:13:04,730 --> 00:13:06,110
ALEX KOMOROSKE: But they're
both open source.

308
00:13:06,110 --> 00:13:06,600
ERIC SEIDEL: They're
both open source.

309
00:13:06,600 --> 00:13:08,360
And anybody can do that.

310
00:13:08,360 --> 00:13:10,320
ALEX KOMOROSKE: Over time, as
they evolve in different

311
00:13:10,320 --> 00:13:12,290
directions, that will get
harder and harder to do.

312
00:13:12,290 --> 00:13:14,380
But in the beginning especially,
hopefully it won't

313
00:13:14,380 --> 00:13:17,820
be too hard for sharing
back and forth.

314
00:13:17,820 --> 00:13:20,210
DARIN FISHER: I think those
watching the change logs and

315
00:13:20,210 --> 00:13:24,800
will see probably see some
Googlers contributing some

316
00:13:24,800 --> 00:13:27,880
changes to WebKit, certainly
in the near term.

317
00:13:27,880 --> 00:13:29,610
I think over time that will
probably diminish.

318
00:13:29,610 --> 00:13:33,180

319
00:13:33,180 --> 00:13:35,920
PAUL IRISH: The next question,
Google said problems living

320
00:13:35,920 --> 00:13:38,560
with the WebKit2 multi-process
model was a prime reason to

321
00:13:38,560 --> 00:13:39,420
create Blink.

322
00:13:39,420 --> 00:13:42,080
But Apple engineers say they
asked to integrate Chromium's

323
00:13:42,080 --> 00:13:44,640
multi-process into WebKit prior
to creating WebKit2 and

324
00:13:44,640 --> 00:13:46,210
were refused.

325
00:13:46,210 --> 00:13:47,460
What gives?

326
00:13:47,460 --> 00:13:50,020

327
00:13:50,020 --> 00:13:53,290
DARIN FISHER: It's true that
Apple, shortly after launching

328
00:13:53,290 --> 00:13:57,290
Chrome, Apple expressed interest
in our multi-process

329
00:13:57,290 --> 00:13:59,140
layer that we had developed.

330
00:13:59,140 --> 00:14:01,390
I think it's important to
understand that that code

331
00:14:01,390 --> 00:14:04,760
base, the multi-process
layer was fairly

332
00:14:04,760 --> 00:14:05,740
mature at that point.

333
00:14:05,740 --> 00:14:07,030
We had launched Chrome.

334
00:14:07,030 --> 00:14:12,840
We had developed a system that
was very coupled into Chrome's

335
00:14:12,840 --> 00:14:16,300
system, it's way
of doing stuff.

336
00:14:16,300 --> 00:14:19,640
It leveraged libraries that
WebKit didn't use, and so on.

337
00:14:19,640 --> 00:14:24,920
And so for us we viewed that
opportunity to work with Apple

338
00:14:24,920 --> 00:14:28,220
on the multi-process code as--
actually that sounded quite

339
00:14:28,220 --> 00:14:29,380
exciting to us.

340
00:14:29,380 --> 00:14:34,890
However, we saw that as a
mountain of work, a large,

341
00:14:34,890 --> 00:14:37,010
technically challenging
engineering project for us.

342
00:14:37,010 --> 00:14:40,670

343
00:14:40,670 --> 00:14:44,510
Perhaps it's a matter of the
timelines not being favorable.

344
00:14:44,510 --> 00:14:47,570
But we just didn't see a path
forward that allowed us to

345
00:14:47,570 --> 00:14:48,896
contribute that code
to WebKit.

346
00:14:48,896 --> 00:14:51,550

347
00:14:51,550 --> 00:14:54,540
ALEX KOMOROSKE: But overall I
think what the teams ended up

348
00:14:54,540 --> 00:14:57,650
doing was collaborating really
effectively within WebCore.

349
00:14:57,650 --> 00:15:00,430
DARIN FISHER: We focused on
where we can maximize the

350
00:15:00,430 --> 00:15:02,590
benefits of working together
with Apple.

351
00:15:02,590 --> 00:15:04,300
And that was sharing WebCore.

352
00:15:04,300 --> 00:15:06,950
The parts that is a very
sensitive part of the code

353
00:15:06,950 --> 00:15:10,380
base, where HTML is parsed,
where the DOM is constructed,

354
00:15:10,380 --> 00:15:14,725
where CSS is used to render that
DOM into the web pages as

355
00:15:14,725 --> 00:15:15,340
we know it.

356
00:15:15,340 --> 00:15:18,930
That part of the web, there was
so much value in sharing

357
00:15:18,930 --> 00:15:25,050
that code that we did our best
to streamline or our way of

358
00:15:25,050 --> 00:15:28,190
using WebKit, so that we could
get as many developers focused

359
00:15:28,190 --> 00:15:30,600
on WebCore as possible, and
working with Apple.

360
00:15:30,600 --> 00:15:34,220
And I think it's been
very successful.

361
00:15:34,220 --> 00:15:37,720
Going forward, I think, as we
hinted to, there's some

362
00:15:37,720 --> 00:15:44,020
significant changes that we want
to make that we feel will

363
00:15:44,020 --> 00:15:52,120
affect the shape of WebCore in
ways that the WebCore project,

364
00:15:52,120 --> 00:15:53,640
WebKit, might not be
ready to receive.

365
00:15:53,640 --> 00:15:58,760
So we don't want to keep
on constraints.

366
00:15:58,760 --> 00:16:01,900
That's what these us to
where we are today.

367
00:16:01,900 --> 00:16:03,660
Do you guys have anything
to add?

368
00:16:03,660 --> 00:16:06,060
ERIC SEIDEL: The reality is
they're just very different

369
00:16:06,060 --> 00:16:09,300
architectures to serve
very different needs.

370
00:16:09,300 --> 00:16:13,890
And the question of whether
WebKit could have adopted our

371
00:16:13,890 --> 00:16:18,600
model, or whether we would
adopt their model are

372
00:16:18,600 --> 00:16:20,800
questions comparing different
timelines.

373
00:16:20,800 --> 00:16:21,760
One was five years ago.

374
00:16:21,760 --> 00:16:24,080
One was a year or two ago.

375
00:16:24,080 --> 00:16:25,470
So they're almost
incomparable.

376
00:16:25,470 --> 00:16:27,590
But the reality is they're very
different architectures,

377
00:16:27,590 --> 00:16:31,130
very different answers
to similar questions.

378
00:16:31,130 --> 00:16:33,000
And we chose different paths.

379
00:16:33,000 --> 00:16:35,520
And we successfully collaborated
in the WebKit

380
00:16:35,520 --> 00:16:37,130
project for the last
five years.

381
00:16:37,130 --> 00:16:38,250
And it's been great.

382
00:16:38,250 --> 00:16:39,750
And I think we'll continue
to collaborate

383
00:16:39,750 --> 00:16:41,730
with the WebKit project.

384
00:16:41,730 --> 00:16:42,980
But we've chosen different
paths.

385
00:16:42,980 --> 00:16:46,970

386
00:16:46,970 --> 00:16:49,490
PAUL IRISH: Is there anything
that we can say around

387
00:16:49,490 --> 00:16:52,800
Android's web view
implementation and its

388
00:16:52,800 --> 00:16:55,050
adopting Blink?

389
00:16:55,050 --> 00:16:57,380
DARIN FISHER: Those following
along in the Chromium project

390
00:16:57,380 --> 00:17:01,230
can see that there's been
development of Android web

391
00:17:01,230 --> 00:17:04,160
view API on top of Chrome.

392
00:17:04,160 --> 00:17:06,079
In the fullness of time, when
that comes to Android, then

393
00:17:06,079 --> 00:17:08,740
Blink will come to Android.

394
00:17:08,740 --> 00:17:09,700
I'm excited about that.

395
00:17:09,700 --> 00:17:14,109
I think it's great from our
point of view of our team to

396
00:17:14,109 --> 00:17:18,630
help enable the use of web view
to be based on Chrome.

397
00:17:18,630 --> 00:17:20,560
So that we can help
make it better.

398
00:17:20,560 --> 00:17:22,260
And have it be based on
Blink means we can

399
00:17:22,260 --> 00:17:23,500
help make it be better.

400
00:17:23,500 --> 00:17:25,980
I'm excited about that.

401
00:17:25,980 --> 00:17:28,240
PAUL IRISH: Absolutely.

402
00:17:28,240 --> 00:17:32,200
Will Blink be able to support
multiple scripting languages?

403
00:17:32,200 --> 00:17:36,300

404
00:17:36,300 --> 00:17:39,220
DARIN FISHER: Sorry, I think
our plan going forward--

405
00:17:39,220 --> 00:17:41,145
I think this is a reference
to Dart, perhaps?

406
00:17:41,145 --> 00:17:42,395
The Dart VM.

407
00:17:42,395 --> 00:17:45,540

408
00:17:45,540 --> 00:17:49,190
It's important to understand
that even today, you can go

409
00:17:49,190 --> 00:17:51,720
and get Dartium, which is
a build of Chromium,

410
00:17:51,720 --> 00:17:53,200
uses the Dart VM.

411
00:17:53,200 --> 00:17:56,260
And the engineers working on
that project have developed a

412
00:17:56,260 --> 00:18:00,680
patch that allowed them to add
the Dart VM to WebKit in a way

413
00:18:00,680 --> 00:18:03,650
that wasn't terribly disruptive
to WebKit.

414
00:18:03,650 --> 00:18:07,230
The reason why Dart VM is not
in Chromium today doesn't

415
00:18:07,230 --> 00:18:11,400
really have to do with whether
or not WebKit supports or

416
00:18:11,400 --> 00:18:12,970
Blink supports multiple VMs.

417
00:18:12,970 --> 00:18:15,410
It has a lot more to do with
the timeline for the Dart

418
00:18:15,410 --> 00:18:18,900
itself, and getting to the point
where we feel like we

419
00:18:18,900 --> 00:18:20,830
can make a long term-- or should
make a long term--

420
00:18:20,830 --> 00:18:23,040
commitment to the Dart VM.

421
00:18:23,040 --> 00:18:25,060
ALEX KOMOROSKE: We have very
strong principles, with Blink

422
00:18:25,060 --> 00:18:27,950
especially, about compatibility
risk, and making

423
00:18:27,950 --> 00:18:31,250
sure that we responsibly
ship new features.

424
00:18:31,250 --> 00:18:33,400
These are things that we are
going to hold all features up

425
00:18:33,400 --> 00:18:35,980
to as we decide whether
or not to ship them.

426
00:18:35,980 --> 00:18:37,890
DARIN FISHER: I think somebody
made a really good point.

427
00:18:37,890 --> 00:18:38,780
I forget who it was.

428
00:18:38,780 --> 00:18:40,780
Maybe one of the other engineers
on our team.

429
00:18:40,780 --> 00:18:42,570
He said, whatever we do,
whatever we put in Blink, it's

430
00:18:42,570 --> 00:18:44,010
got to fit on here.

431
00:18:44,010 --> 00:18:46,590
And so we can't just put
everything in there just

432
00:18:46,590 --> 00:18:48,580
because it seems like
a good idea.

433
00:18:48,580 --> 00:18:49,540
We have to validate that.

434
00:18:49,540 --> 00:18:52,290
And be confident that we can
stick with that decision, make

435
00:18:52,290 --> 00:18:53,820
a long term commitment.

436
00:18:53,820 --> 00:18:55,970
And build this platform
responsibly.

437
00:18:55,970 --> 00:18:57,220
We don't want to have--

438
00:18:57,220 --> 00:18:59,810

439
00:18:59,810 --> 00:19:01,630
this relates to our
whole strategy

440
00:19:01,630 --> 00:19:02,720
around deprecating APIs.

441
00:19:02,720 --> 00:19:04,360
We don't want to be in a
situation where we have to

442
00:19:04,360 --> 00:19:05,660
deprecate API.

443
00:19:05,660 --> 00:19:08,390
So we don't want to add multiple
different ways of

444
00:19:08,390 --> 00:19:09,730
doing the same thing.

445
00:19:09,730 --> 00:19:12,650
I think the web platform is
famous for having multiple

446
00:19:12,650 --> 00:19:14,500
solutions to the same problem.

447
00:19:14,500 --> 00:19:17,940
And we see that as a problem.

448
00:19:17,940 --> 00:19:19,380
We have to be responsible
to not create

449
00:19:19,380 --> 00:19:20,630
more of those problems.

450
00:19:20,630 --> 00:19:24,470

451
00:19:24,470 --> 00:19:25,960
PAUL IRISH: This is a question
from spiffytech.

452
00:19:25,960 --> 00:19:28,830
How does the Chromium team
expect this will affect the

453
00:19:28,830 --> 00:19:32,870
myriad of other browsers that
have adopted WebKit.

454
00:19:32,870 --> 00:19:35,650
ALEX KOMOROSKE: I should say,
too, one thing to start off.

455
00:19:35,650 --> 00:19:37,950
We fundamentally believe that
having multiple rendering

456
00:19:37,950 --> 00:19:40,240
engines will help spur
innovation, and is ultimately

457
00:19:40,240 --> 00:19:42,010
good for the long-term
health of the web.

458
00:19:42,010 --> 00:19:44,500
And so in that respect, I
think it's actually very

459
00:19:44,500 --> 00:19:47,330
healthy for the whole
ecosystem.

460
00:19:47,330 --> 00:19:50,080
So just to get started
with that.

461
00:19:50,080 --> 00:19:51,700
DARIN FISHER: As a team, we're
really focused on web

462
00:19:51,700 --> 00:19:59,920
standards, and sharing tasks,
and helping this ecosystem of

463
00:19:59,920 --> 00:20:03,740
browsers all agree on what the
web platform should be.

464
00:20:03,740 --> 00:20:04,520
But having multiple

465
00:20:04,520 --> 00:20:07,400
implementations is really valuable.

466
00:20:07,400 --> 00:20:12,770
Without that, developers are
stuck maybe with the quirks of

467
00:20:12,770 --> 00:20:14,140
a particular engine.

468
00:20:14,140 --> 00:20:17,330
And that's not healthy
for the platform.

469
00:20:17,330 --> 00:20:21,413
It's not great for developers,
as far as we can tell.

470
00:20:21,413 --> 00:20:23,570
ERIC SEIDEL: I hope, if anything
it just gives other

471
00:20:23,570 --> 00:20:27,170
browsers choice.

472
00:20:27,170 --> 00:20:30,040
Embedding WebKit is not
comparable, really, to

473
00:20:30,040 --> 00:20:30,630
embedding Blink.

474
00:20:30,630 --> 00:20:34,220
Because Blink requires the
Chromium content layer.

475
00:20:34,220 --> 00:20:36,290
So you would embed the Chromium
content layer if you

476
00:20:36,290 --> 00:20:39,040
wanted to embed Blink.

477
00:20:39,040 --> 00:20:40,650
But it just gives you choice.

478
00:20:40,650 --> 00:20:44,285

479
00:20:44,285 --> 00:20:46,740
PAUL IRISH: I think
we covered this.

480
00:20:46,740 --> 00:20:50,740
Does this mean that Google stops
contributions to WebKit?

481
00:20:50,740 --> 00:20:54,050
ERIC SEIDEL: Google contributed
WebKit before

482
00:20:54,050 --> 00:20:54,770
Chrome was announced.

483
00:20:54,770 --> 00:20:57,620
And I expect that Google will
continue to contribute after.

484
00:20:57,620 --> 00:21:01,880
DARIN FISHER: I think is
important to say that, as

485
00:21:01,880 --> 00:21:03,680
Google, we're not telling
people they shouldn't

486
00:21:03,680 --> 00:21:04,500
contribute to WebKit.

487
00:21:04,500 --> 00:21:10,940
We're just telling them that,
feel free to focus on Blink.

488
00:21:10,940 --> 00:21:13,650
ERIC SEIDEL: Chromium is
going to ship Blink.

489
00:21:13,650 --> 00:21:18,610
And so the Chromium team
is focused on Blink.

490
00:21:18,610 --> 00:21:20,780
But that doesn't mean that other
parts of Google, or even

491
00:21:20,780 --> 00:21:21,950
parts of the Blink team--

492
00:21:21,950 --> 00:21:24,600
some of us are long time
WebKit contributors.

493
00:21:24,600 --> 00:21:26,560
I plan to post patches
to WebKit.

494
00:21:26,560 --> 00:21:28,110
I expect other of my
colleagues do too.

495
00:21:28,110 --> 00:21:31,260

496
00:21:31,260 --> 00:21:33,060
PAUL IRISH: What open source
license will Blink have?

497
00:21:33,060 --> 00:21:35,790
Will it continue to support
the H.264 codec?

498
00:21:35,790 --> 00:21:37,650
DARIN FISHER: There's no
relicensing happening as part

499
00:21:37,650 --> 00:21:39,065
of this fork.

500
00:21:39,065 --> 00:21:40,770
PAUL IRISH: What's the--

501
00:21:40,770 --> 00:21:42,555
DARIN FISHER: It's a collage
of licenses.

502
00:21:42,555 --> 00:21:42,980
ALEX KOMOROSKE: A collage--
that's a good

503
00:21:42,980 --> 00:21:44,340
way of putting it.

504
00:21:44,340 --> 00:21:46,040
DARIN FISHER: The history of
WebKit is that it's absorbed

505
00:21:46,040 --> 00:21:47,560
code from a variety
of projects.

506
00:21:47,560 --> 00:21:49,070
I think a lot of it is BSD.

507
00:21:49,070 --> 00:21:51,810
ERIC SEIDEL: BSD and LGPL.

508
00:21:51,810 --> 00:21:54,230
DARIN FISHER: Will it continue
to support the H.264 codec?

509
00:21:54,230 --> 00:21:56,910
That's really more of
a Chrome question.

510
00:21:56,910 --> 00:22:00,960
ERIC SEIDEL: Blink doesn't know
what codecs even exist.

511
00:22:00,960 --> 00:22:03,840
It has a box in which
the video goes.

512
00:22:03,840 --> 00:22:06,990
And something outside of Blink
makes the video go there.

513
00:22:06,990 --> 00:22:08,810
So Blink doesn't care or know.

514
00:22:08,810 --> 00:22:11,620

515
00:22:11,620 --> 00:22:13,490
PAUL IRISH: We saw a lot of
questions about this.

516
00:22:13,490 --> 00:22:17,270
People are curious about
the user-agent string.

517
00:22:17,270 --> 00:22:20,990
Will we see a Blink keyword in
the user-agent string, like

518
00:22:20,990 --> 00:22:21,870
KHTML, like Gecko?

519
00:22:21,870 --> 00:22:24,010
DARIN FISHER: We have
no plans to change

520
00:22:24,010 --> 00:22:25,350
the user-agent string.

521
00:22:25,350 --> 00:22:29,830
And going forward, in fact,
there's a version number after

522
00:22:29,830 --> 00:22:32,430
Apple WebKit and Safari.

523
00:22:32,430 --> 00:22:35,800
At this point we have no plans
to change that number.

524
00:22:35,800 --> 00:22:37,830
What will change, going forward,
is just to the number

525
00:22:37,830 --> 00:22:39,620
after Chrome.

526
00:22:39,620 --> 00:22:44,070
We, of course, lament the
use-agent string profusely.

527
00:22:44,070 --> 00:22:47,590
But we also see that any changes
there have to be

528
00:22:47,590 --> 00:22:49,130
handled very, very carefully.

529
00:22:49,130 --> 00:22:52,740
Because, like it or not,
people do all kinds of

530
00:22:52,740 --> 00:22:55,390
interesting string compares
against it.

531
00:22:55,390 --> 00:22:56,820
ALEX KOMOROSKE: As you can tell
from looking at anyone's

532
00:22:56,820 --> 00:22:59,570
user-agent string,
they're crazy.

533
00:22:59,570 --> 00:23:02,070
I should say, too, this is the
kind of thing that ultimately,

534
00:23:02,070 --> 00:23:03,050
if we revisit this--

535
00:23:03,050 --> 00:23:05,310
I'm sure at some point we will--
will be doing it on

536
00:23:05,310 --> 00:23:07,810
blink-dev, the open
mailing list.

537
00:23:07,810 --> 00:23:09,588
And this will be definitely
discussion that we can take

538
00:23:09,588 --> 00:23:10,670
care of for you if
we come to it.

539
00:23:10,670 --> 00:23:13,010
DARIN FISHER: I think it was a
couple years ago that there

540
00:23:13,010 --> 00:23:17,860
was a successful effort to trim
out a few bits of the

541
00:23:17,860 --> 00:23:19,120
user-agent strings.

542
00:23:19,120 --> 00:23:21,970
Certainly be looking
for opportunities.

543
00:23:21,970 --> 00:23:25,450
I would love to see this
user-agent string be

544
00:23:25,450 --> 00:23:26,450
simplified radically.

545
00:23:26,450 --> 00:23:32,130
But it's hard to say when
or if that will happen.

546
00:23:32,130 --> 00:23:34,240
ERIC SEIDEL: Just don't
want to break the web.

547
00:23:34,240 --> 00:23:35,490
PAUL IRISH: Don't
break the web.

548
00:23:35,490 --> 00:23:37,770

549
00:23:37,770 --> 00:23:42,030
When we'll be able to test
the first version Blink?

550
00:23:42,030 --> 00:23:43,280
Again this is available--

551
00:23:43,280 --> 00:23:43,770
DARIN FISHER: Today.

552
00:23:43,770 --> 00:23:46,080
PAUL IRISH: Blink is available
in Chrome Canary as of today.

553
00:23:46,080 --> 00:23:47,680
DARIN FISHER: And you can
build it yourself.

554
00:23:47,680 --> 00:23:50,350
This question was asking about
Blink in Chromium as well.

555
00:23:50,350 --> 00:23:52,332
You can just build
it yourself.

556
00:23:52,332 --> 00:23:53,740
ERIC SEIDEL: We had some
tireless infrastructure

557
00:23:53,740 --> 00:23:56,610
engineers who stayed up all
night making that true.

558
00:23:56,610 --> 00:23:57,810
ALEX KOMOROSKE: I was watching
blink-dev this morning.

559
00:23:57,810 --> 00:24:00,100
I think people succeed in
building it, correct?

560
00:24:00,100 --> 00:24:01,240
ERIC SEIDEL: Yes.

561
00:24:01,240 --> 00:24:02,490
ALEX KOMOROSKE: So at this
point we're focusing--

562
00:24:02,490 --> 00:24:04,130
ERIC SEIDEL: We have taken
patches already.

563
00:24:04,130 --> 00:24:06,500
ALEX KOMOROSKE: Great.

564
00:24:06,500 --> 00:24:07,740
ERIC SEIDEL: Blink is up
and running today.

565
00:24:07,740 --> 00:24:08,620
You can build it today.

566
00:24:08,620 --> 00:24:12,900
And I believe the Chromium
canary tomorrow is likely to

567
00:24:12,900 --> 00:24:15,510
have Blink in it.

568
00:24:15,510 --> 00:24:22,550
PAUL IRISH: Another thing I
wanted to ask about this, a

569
00:24:22,550 --> 00:24:24,680
lot of people are used to
watching change that's coming

570
00:24:24,680 --> 00:24:26,600
on the WebKit side.

571
00:24:26,600 --> 00:24:29,420
To do the same in Blink,
we have a similar

572
00:24:29,420 --> 00:24:30,250
way of doing that.

573
00:24:30,250 --> 00:24:30,720
ERIC SEIDEL: We do have URLs.

574
00:24:30,720 --> 00:24:32,670
I don't know them off
the top of my head.

575
00:24:32,670 --> 00:24:33,040
ALEX KOMOROSKE: We do.

576
00:24:33,040 --> 00:24:35,950
And I think it's on
the project page.

577
00:24:35,950 --> 00:24:37,860
Our goal is for everyone to be
able to watch this, and watch

578
00:24:37,860 --> 00:24:40,350
all the discussions and
bugs, and everything.

579
00:24:40,350 --> 00:24:42,700
So if there is something where
it's hard to follow along, we

580
00:24:42,700 --> 00:24:44,050
want to make that easier
for people.

581
00:24:44,050 --> 00:24:45,295
ERIC SEIDEL: The easy way to
answer that is to join

582
00:24:45,295 --> 00:24:48,020
blink-dev@chromium.org,
or to join the

583
00:24:48,020 --> 00:24:51,200
#Blink channel on Freenode.

584
00:24:51,200 --> 00:24:55,100
We've also talked about having
an IRC-based commit bot, just

585
00:24:55,100 --> 00:24:57,640
like the WebKit project does,
where it tells you what the

586
00:24:57,640 --> 00:24:59,160
commits as they come in.

587
00:24:59,160 --> 00:25:01,260
But that's the way to answer
that question, is to join one

588
00:25:01,260 --> 00:25:03,500
of our mailing lists or IRC.

589
00:25:03,500 --> 00:25:04,920
PAUL IRISH: And all that
information is available on

590
00:25:04,920 --> 00:25:07,980
chromium.org/blink, where you
can see our current mailing

591
00:25:07,980 --> 00:25:11,590
lists, a link to where all the
change sets are coming in,

592
00:25:11,590 --> 00:25:13,570
where you can browse them,
and everything else.

593
00:25:13,570 --> 00:25:17,170
ALEX KOMOROSKE: One thing too,
watching the change sets takes

594
00:25:17,170 --> 00:25:18,990
a lot of effort for a lot
of web developers.

595
00:25:18,990 --> 00:25:22,390
And one thing that we're doing
is, especially recently, we're

596
00:25:22,390 --> 00:25:24,700
getting better at having
summary posts.

597
00:25:24,700 --> 00:25:28,610
And so we do that for every beta
release now for Chrome.

598
00:25:28,610 --> 00:25:31,290
Those summarize what things
we've enabled, which things

599
00:25:31,290 --> 00:25:35,450
are now behind a flag, which
prefixes we've deprecated.

600
00:25:35,450 --> 00:25:37,600
That's a great way for web
developers to follow along,

601
00:25:37,600 --> 00:25:40,190
where you don't have to be
reading every single commit

602
00:25:40,190 --> 00:25:41,000
that's going through.

603
00:25:41,000 --> 00:25:42,620
And chromestatus.com
is also great.

604
00:25:42,620 --> 00:25:43,670
We're going to be--

605
00:25:43,670 --> 00:25:45,730
Max and Eric were just
talking on blink-dev.

606
00:25:45,730 --> 00:25:47,560
They have plans to make that
into more of a full future

607
00:25:47,560 --> 00:25:49,500
dashboard which is
really cool.

608
00:25:49,500 --> 00:25:52,030
PAUL IRISH: Chromestatus.com
lists out all the various

609
00:25:52,030 --> 00:25:56,740
features of the platform that
are in discussion these days,

610
00:25:56,740 --> 00:26:00,040
lists out what their
implementation status is, and

611
00:26:00,040 --> 00:26:02,110
also what their standardization
status is

612
00:26:02,110 --> 00:26:03,610
across the browser ecosystem.

613
00:26:03,610 --> 00:26:04,270
ALEX KOMOROSKE: I
love watching.

614
00:26:04,270 --> 00:26:05,150
If you haven't looked at it,
you should look at it.

615
00:26:05,150 --> 00:26:08,740
It's really interesting
to get a snapshot.

616
00:26:08,740 --> 00:26:10,750
DARIN FISHER: We all had this
idea in our head of what it

617
00:26:10,750 --> 00:26:11,310
might look like.

618
00:26:11,310 --> 00:26:12,400
But to actually see it.

619
00:26:12,400 --> 00:26:14,200
ALEX KOMOROSKE: Oh wow,
it's very interesting.

620
00:26:14,200 --> 00:26:17,500
PAUL IRISH: It's a great
snapshot of the web ecosystem

621
00:26:17,500 --> 00:26:18,510
in one view.

622
00:26:18,510 --> 00:26:20,740
And we've already been getting
some great contributions from

623
00:26:20,740 --> 00:26:23,320
Adobe over the past two days.

624
00:26:23,320 --> 00:26:23,950
ALEX KOMOROSKE: And
others, as well.

625
00:26:23,950 --> 00:26:26,900
I think we got a few guys
from Mozilla also

626
00:26:26,900 --> 00:26:27,950
helped us as well.

627
00:26:27,950 --> 00:26:32,450
The goal is to have that be a
snapshot of the health, the

628
00:26:32,450 --> 00:26:33,940
state, of the web ecosystem.

629
00:26:33,940 --> 00:26:36,310
Specifically Chromium, but over
time it could be for the

630
00:26:36,310 --> 00:26:36,830
whole web ecosystem.

631
00:26:36,830 --> 00:26:38,670
I think that's cool.

632
00:26:38,670 --> 00:26:40,660
We'll see.

633
00:26:40,660 --> 00:26:42,050
PAUL IRISH: Next question.

634
00:26:42,050 --> 00:26:45,210
How will this impacts Dart
language's process?

635
00:26:45,210 --> 00:26:47,860
Can we expect a Dart
VM to be integrated

636
00:26:47,860 --> 00:26:49,180
into Chrome as a result?

637
00:26:49,180 --> 00:26:50,970
DARIN FISHER: I already
answered the question.

638
00:26:50,970 --> 00:26:56,850
But I think it doesn't really
impact Dart language at all.

639
00:26:56,850 --> 00:26:58,700
ERIC SEIDEL: Dart's a separate
open source project.

640
00:26:58,700 --> 00:27:00,490
I don't think changes
to our open source

641
00:27:00,490 --> 00:27:01,944
really affect them directly.

642
00:27:01,944 --> 00:27:04,810

643
00:27:04,810 --> 00:27:07,680
PAUL IRISH: When we get our
hands on Blink code?

644
00:27:07,680 --> 00:27:10,100
Again, today.

645
00:27:10,100 --> 00:27:11,210
Yesterday.

646
00:27:11,210 --> 00:27:13,500
We're good.

647
00:27:13,500 --> 00:27:16,250
Will this be a direct competitor
against Mozilla's

648
00:27:16,250 --> 00:27:17,150
new engine?

649
00:27:17,150 --> 00:27:20,450
Is co-working with Mozilla
out of the question?

650
00:27:20,450 --> 00:27:22,850
ERIC SEIDEL: The engine I
believe they mean is Servo,

651
00:27:22,850 --> 00:27:25,850
which although Brendan posted
about it yesterday, it's been

652
00:27:25,850 --> 00:27:27,470
in the public for a long time.

653
00:27:27,470 --> 00:27:28,770
ALEX KOMOROSKE: I remember
design docs

654
00:27:28,770 --> 00:27:30,670
about that a year ago.

655
00:27:30,670 --> 00:27:31,250
ERIC SEIDEL: I've been following
it for a while.

656
00:27:31,250 --> 00:27:33,150
It's very, very cool
what they're doing.

657
00:27:33,150 --> 00:27:34,650
ALEX KOMOROSKE: Really
cool ideas.

658
00:27:34,650 --> 00:27:37,720
ERIC SEIDEL: But I don't see
Blink as really a direct

659
00:27:37,720 --> 00:27:38,770
competitor.

660
00:27:38,770 --> 00:27:40,820
DARIN FISHER: Blink is an
iteration from WebKit.

661
00:27:40,820 --> 00:27:42,810
It's a fork of WebKit.

662
00:27:42,810 --> 00:27:45,120
Servo is a new rendering engine

663
00:27:45,120 --> 00:27:46,440
constructed from scratch.

664
00:27:46,440 --> 00:27:47,750
ERIC SEIDEL: According to
their docs, it's an

665
00:27:47,750 --> 00:27:48,610
experiment.

666
00:27:48,610 --> 00:27:51,040
The docs say that they may
not actually ever ship.

667
00:27:51,040 --> 00:27:55,980
So that's a very different kind
of project then Blink or

668
00:27:55,980 --> 00:27:57,850
WebKit, which is
really about--

669
00:27:57,850 --> 00:27:59,120
ALEX KOMOROSKE: A shipping
product.

670
00:27:59,120 --> 00:28:00,990
ERIC SEIDEL: Yeah, it's
about an iteration.

671
00:28:00,990 --> 00:28:03,120
One of WebKit's goals
was WebKit is

672
00:28:03,120 --> 00:28:04,540
not a science project.

673
00:28:04,540 --> 00:28:06,970
We're about shipping
a product today.

674
00:28:06,970 --> 00:28:10,150
And the reality is the world
and the web ecosystem need

675
00:28:10,150 --> 00:28:11,330
both kinds.

676
00:28:11,330 --> 00:28:13,990
We need exploratory
crazy new things.

677
00:28:13,990 --> 00:28:16,480
And we also need to ship
something today.

678
00:28:16,480 --> 00:28:17,680
And Blink is about
shipping today.

679
00:28:17,680 --> 00:28:19,460
ALEX KOMOROSKE: I think we're
really excited to see some of

680
00:28:19,460 --> 00:28:20,560
those ideas they're trying.

681
00:28:20,560 --> 00:28:23,020
Because we're trying to dream
big with our wish list of

682
00:28:23,020 --> 00:28:23,700
things to try.

683
00:28:23,700 --> 00:28:24,680
They're dreaming even bigger.

684
00:28:24,680 --> 00:28:26,150
Because they're building
a new one from scratch.

685
00:28:26,150 --> 00:28:27,030
ERIC SEIDEL: Which is amazing.

686
00:28:27,030 --> 00:28:28,090
ALEX KOMOROSKE: And so that
will be really cool to see

687
00:28:28,090 --> 00:28:30,820
which of those really big ideas
work, and which ones--

688
00:28:30,820 --> 00:28:32,500
DARIN FISHER: I'm sure there
will be a lot of idea sharing.

689
00:28:32,500 --> 00:28:33,340
ALEX KOMOROSKE: Absolutely.

690
00:28:33,340 --> 00:28:34,680
ERIC SEIDEL: And I can
see the Mozilla

691
00:28:34,680 --> 00:28:37,310
offices from my window.

692
00:28:37,310 --> 00:28:40,640
And we talk to Mozilla guys
with some frequency.

693
00:28:40,640 --> 00:28:46,480
And I think of them as very
cooperative, not competitors.

694
00:28:46,480 --> 00:28:49,430
DARIN FISHER: Do they know
you can see them?

695
00:28:49,430 --> 00:28:50,050
ERIC SEIDEL: I'm not sure.

696
00:28:50,050 --> 00:28:50,800
PAUL IRISH: The buildings are
right next to each other.

697
00:28:50,800 --> 00:28:52,210
ERIC SEIDEL: The buildings are
right next to each other.

698
00:28:52,210 --> 00:28:54,270
ALEX KOMOROSKE: Actually we
discussed this with some folks

699
00:28:54,270 --> 00:28:54,730
from Mozilla.

700
00:28:54,730 --> 00:28:57,165
They were visiting a few days
ago in the offices.

701
00:28:57,165 --> 00:28:59,012
We talked about the fact
that we could see them.

702
00:28:59,012 --> 00:29:01,670

703
00:29:01,670 --> 00:29:05,420
PAUL IRISH: So the question
is about vendor prefixes.

704
00:29:05,420 --> 00:29:07,830
When will the existing
vendor prefixes in

705
00:29:07,830 --> 00:29:08,710
Blink be phased out?

706
00:29:08,710 --> 00:29:10,415
ALEX KOMOROSKE: I think I
already touched on this as

707
00:29:10,415 --> 00:29:12,640
part of an earlier question.

708
00:29:12,640 --> 00:29:15,450
Again, going forward, no
new vendor prefixes.

709
00:29:15,450 --> 00:29:16,940
But course there are
a number of legacy

710
00:29:16,940 --> 00:29:17,930
ones that we've inherited.

711
00:29:17,930 --> 00:29:19,310
DARIN FISHER: It could
take a long time to--

712
00:29:19,310 --> 00:29:20,460
ALEX KOMOROSKE: It could
take a long time.

713
00:29:20,460 --> 00:29:21,450
Because we want to do
it responsibly.

714
00:29:21,450 --> 00:29:23,610
Want to figure out-- we don't
want to break the web.

715
00:29:23,610 --> 00:29:27,330
So some of them are, there's
been the un-prefixed version

716
00:29:27,330 --> 00:29:28,330
for years and years and years.

717
00:29:28,330 --> 00:29:30,090
And no one's using the
prefix version.

718
00:29:30,090 --> 00:29:31,570
Go ahead and take that out.

719
00:29:31,570 --> 00:29:33,640
Other ones are things that
were never standardized.

720
00:29:33,640 --> 00:29:35,740
And we want to either figure
out, should we

721
00:29:35,740 --> 00:29:36,790
just deprecate these?

722
00:29:36,790 --> 00:29:39,360
Or should we take these
to standardization?

723
00:29:39,360 --> 00:29:40,820
But it's going to be a
case by case basis.

724
00:29:40,820 --> 00:29:43,790
DARIN FISHER: I think this
really hits on the point.

725
00:29:43,790 --> 00:29:45,960
And the reason why we don't
want to do vendor prefixes

726
00:29:45,960 --> 00:29:48,550
anymore is because, vendor
prefix or not, when you add

727
00:29:48,550 --> 00:29:51,170
something to the platform
and you ship it, you can

728
00:29:51,170 --> 00:29:52,230
get stuck with it.

729
00:29:52,230 --> 00:29:53,980
And it becomes part
of the platform.

730
00:29:53,980 --> 00:29:58,000
And so adding vendor prefixes
just makes a big old mess.

731
00:29:58,000 --> 00:30:00,660
It doesn't actually seem
to add any value.

732
00:30:00,660 --> 00:30:03,410
ERIC SEIDEL: Standards bodies
have even discussed the idea

733
00:30:03,410 --> 00:30:07,310
of needing to standardize WebKit
prefixed features,

734
00:30:07,310 --> 00:30:08,970
which is crazy to me.

735
00:30:08,970 --> 00:30:11,210
But may need to happen
if we fail to be

736
00:30:11,210 --> 00:30:12,310
able to remove these.

737
00:30:12,310 --> 00:30:13,523
ALEX KOMOROSKE: It's crazy.

738
00:30:13,523 --> 00:30:14,630
Hopefully it doesn't
come to that.

739
00:30:14,630 --> 00:30:16,350
DARIN FISHER: So there will
be no Blink prefix.

740
00:30:16,350 --> 00:30:17,970
ERIC SEIDEL: There will
be no Blink prefix.

741
00:30:17,970 --> 00:30:20,900
The madness must stop.

742
00:30:20,900 --> 00:30:23,820
PAUL IRISH: I saw a request,
actually, that we would maybe

743
00:30:23,820 --> 00:30:27,110
support -blink
text-decoration-blink.

744
00:30:27,110 --> 00:30:30,080

745
00:30:30,080 --> 00:30:34,130
DARIN FISHER: I'm pretty sure
we will not be doing that.

746
00:30:34,130 --> 00:30:37,700
Maybe behind an enable
flag, just for fun.

747
00:30:37,700 --> 00:30:38,960
ALEX KOMOROSKE: Someone
was joking--

748
00:30:38,960 --> 00:30:40,500
I forget who it was--

749
00:30:40,500 --> 00:30:42,730
joking that with web components
actually someone

750
00:30:42,730 --> 00:30:45,770
could make an x-blink if they
really wanted to, their own

751
00:30:45,770 --> 00:30:48,690
version of it.

752
00:30:48,690 --> 00:30:50,610
We will not ship
the Blink tag.

753
00:30:50,610 --> 00:30:51,790
That's for sure.

754
00:30:51,790 --> 00:30:53,980
PAUL IRISH: I think that
can wrap it up for now.

755
00:30:53,980 --> 00:30:55,640
I appreciate everyone
for submitting

756
00:30:55,640 --> 00:30:57,760
questions, voting them up.

757
00:30:57,760 --> 00:30:59,440
Hope we answered a lot
of your questions.

758
00:30:59,440 --> 00:31:02,680
We'll be posting this video,
along with our

759
00:31:02,680 --> 00:31:04,020
content already out there.

760
00:31:04,020 --> 00:31:07,980
So if you haven't checked it
out, chromium.org/blink gives

761
00:31:07,980 --> 00:31:11,560
an overview of the entire
project, our policies towards

762
00:31:11,560 --> 00:31:13,290
adding features.

763
00:31:13,290 --> 00:31:15,630
And then the Developer FAQ
answers a lot of other

764
00:31:15,630 --> 00:31:18,170
questions that go along
with these ones.

765
00:31:18,170 --> 00:31:19,380
So I encourage you to
check that out.

766
00:31:19,380 --> 00:31:21,570
And I think that'll
wrap it up.

767
00:31:21,570 --> 00:31:22,120
DARIN FISHER: Thank you.

768
00:31:22,120 --> 00:31:23,530
PAUL IRISH: Thanks guys, very
much, for joining us.

769
00:31:23,530 --> 00:31:30,335

