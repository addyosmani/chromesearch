1
00:00:00,000 --> 00:00:07,080

2
00:00:07,080 --> 00:00:09,670
MALE SPEAKER: So we're here back
at Devoxx, and I'm here

3
00:00:09,670 --> 00:00:14,510
with Ilya Grigorik, who's here
talking about performance and

4
00:00:14,510 --> 00:00:16,960
Chrome dev tools, and
performance of front

5
00:00:16,960 --> 00:00:17,900
ends and web apps.

6
00:00:17,900 --> 00:00:18,460
So welcome.

7
00:00:18,460 --> 00:00:19,340
ILYA GRIGORIK: Thank you.

8
00:00:19,340 --> 00:00:20,780
MALE SPEAKER: You were
covering two things.

9
00:00:20,780 --> 00:00:24,110
First of all, in the university
session, how to

10
00:00:24,110 --> 00:00:25,990
make a website's performance.

11
00:00:25,990 --> 00:00:29,460
And performance is kind
of a black art, I

12
00:00:29,460 --> 00:00:31,510
think, to a lot of people.

13
00:00:31,510 --> 00:00:33,630
And browsers, at the
same time, are

14
00:00:33,630 --> 00:00:35,020
pretty complex things.

15
00:00:35,020 --> 00:00:36,770
They're almost like an OS.

16
00:00:36,770 --> 00:00:38,980
So should people try to
understand how it's built, or

17
00:00:38,980 --> 00:00:42,860
are there any low hanging fruits
or methodology to get

18
00:00:42,860 --> 00:00:43,840
your things to--

19
00:00:43,840 --> 00:00:46,360
ILYA GRIGORIK: So really,
it's both.

20
00:00:46,360 --> 00:00:48,860
You should always go for the low
hanging fruit, because, by

21
00:00:48,860 --> 00:00:51,170
definition, those are the
low hanging fruit.

22
00:00:51,170 --> 00:00:55,280
But I think in general, if you
want to build an application

23
00:00:55,280 --> 00:00:57,750
that is performant over the
long term, you need to

24
00:00:57,750 --> 00:01:01,110
understand how the mechanics of
your operating system work.

25
00:01:01,110 --> 00:01:03,570
And you mentioned that the
browsers are increasingly

26
00:01:03,570 --> 00:01:05,140
becoming like an operating
system.

27
00:01:05,140 --> 00:01:06,420
They absolutely are.

28
00:01:06,420 --> 00:01:09,690
You have networking, you have
graphics, you have everything

29
00:01:09,690 --> 00:01:10,670
in between.

30
00:01:10,670 --> 00:01:13,480
There's literally not a computer
science problem that

31
00:01:13,480 --> 00:01:16,410
we're not pushing boundaries
on in the modern browser.

32
00:01:16,410 --> 00:01:17,580
That's not there.

33
00:01:17,580 --> 00:01:21,020
So that was in large part what
the session was about.

34
00:01:21,020 --> 00:01:23,190
Of course, you can only fit so
much into three hours, but

35
00:01:23,190 --> 00:01:25,940
nonetheless it was like three
hours of here's how the

36
00:01:25,940 --> 00:01:27,300
browser works.

37
00:01:27,300 --> 00:01:29,340
MALE SPEAKER: And people can
find your slides online if

38
00:01:29,340 --> 00:01:30,560
they Google them, I'm sure.

39
00:01:30,560 --> 00:01:32,990
We'll have a link somewhere so
that people can find them.

40
00:01:32,990 --> 00:01:34,980
I think they're very useful,
even with us.

41
00:01:34,980 --> 00:01:36,340
And it will be on [INAUDIBLE]

42
00:01:36,340 --> 00:01:38,910
as well for people to watch.

43
00:01:38,910 --> 00:01:44,250
So how about things like page
speed or using CDNs or DNS

44
00:01:44,250 --> 00:01:47,220
lookups is an obvious thing
people don't always look into.

45
00:01:47,220 --> 00:01:48,220
These are all good things.

46
00:01:48,220 --> 00:01:49,580
ILYA GRIGORIK: So these are
all techniques, right?

47
00:01:49,580 --> 00:01:53,530
These are all one component
of a larger picture.

48
00:01:53,530 --> 00:01:56,500
So in the web performance
community, if you will, we

49
00:01:56,500 --> 00:01:58,440
kind of have this distinction,
which I don't think is

50
00:01:58,440 --> 00:02:00,960
actually necessarily even fair,
which is back end versus

51
00:02:00,960 --> 00:02:02,160
front end performance.

52
00:02:02,160 --> 00:02:04,750
Which is like, the stuff that
happens on your server, and

53
00:02:04,750 --> 00:02:07,170
then everything that
the browser does.

54
00:02:07,170 --> 00:02:09,539
Whereas I like to take kind of
like a holistic picture, and

55
00:02:09,539 --> 00:02:12,970
say, well, the lifetime of a
page or your app or what have

56
00:02:12,970 --> 00:02:15,690
you, needs to take into
account both.

57
00:02:15,690 --> 00:02:19,040
Because sometimes maybe your
app is blocked on DNS, and

58
00:02:19,040 --> 00:02:20,300
then the question is,
how do I find out?

59
00:02:20,300 --> 00:02:21,710
How do I measure it?

60
00:02:21,710 --> 00:02:24,080
I guess kind of the other meta
point that I like to make

61
00:02:24,080 --> 00:02:26,980
about performance is a lot
of people treat it

62
00:02:26,980 --> 00:02:29,460
as a technical metric.

63
00:02:29,460 --> 00:02:31,040
It should be a business
metric.

64
00:02:31,040 --> 00:02:32,750
Performance is a feature.

65
00:02:32,750 --> 00:02:35,050
There are products out there
where speed is a feature.

66
00:02:35,050 --> 00:02:35,910
Think of Google search.

67
00:02:35,910 --> 00:02:39,160
Speed is a feature, absolutely,
and you should

68
00:02:39,160 --> 00:02:40,525
design for it as such.

69
00:02:40,525 --> 00:02:43,110
So if you can connect speed
and performance to your

70
00:02:43,110 --> 00:02:44,970
business or bottom
line metrics--

71
00:02:44,970 --> 00:02:47,570
and in fact, I've shown a number
of case studies from

72
00:02:47,570 --> 00:02:50,200
other companies outside of
Google where they see a direct

73
00:02:50,200 --> 00:02:53,500
correlation between how fast
the page loads and my

74
00:02:53,500 --> 00:02:56,630
conversions, or bounce rates,
and everything like that.

75
00:02:56,630 --> 00:03:01,390
If you can show that to your
CEO, CFO, your team, even,

76
00:03:01,390 --> 00:03:05,680
that's a viable metric, as
opposed to just being like, on

77
00:03:05,680 --> 00:03:07,890
a weekend, I'm going to
spend my 20% time

78
00:03:07,890 --> 00:03:09,170
optimizing the page.

79
00:03:09,170 --> 00:03:11,270
MALE SPEAKER: Well, and it's
interesting to see how people

80
00:03:11,270 --> 00:03:13,980
actually start using Chrome
dev tools as more like

81
00:03:13,980 --> 00:03:16,590
development tools, not just the
afterthought, the tool you

82
00:03:16,590 --> 00:03:20,440
bring up to fix performance
after you've built it.

83
00:03:20,440 --> 00:03:24,200
So people are spending more time
in tools such as the ones

84
00:03:24,200 --> 00:03:24,930
provided in Chrome.

85
00:03:24,930 --> 00:03:26,170
ILYA GRIGORIK: Yeah.

86
00:03:26,170 --> 00:03:28,640
So that was kind of my second
talk, which is, the whole

87
00:03:28,640 --> 00:03:32,110
premise is the browser is
probably one of the most well

88
00:03:32,110 --> 00:03:35,460
instrumented platforms
that we have today.

89
00:03:35,460 --> 00:03:37,230
And you may just not
realize it yet.

90
00:03:37,230 --> 00:03:38,950
That was kind of the
tagline, right?

91
00:03:38,950 --> 00:03:41,100
And you can do all
kinds of stuff.

92
00:03:41,100 --> 00:03:43,870
You can do detail, network
debugging, look at the

93
00:03:43,870 --> 00:03:47,010
graphics pipeline, look at the
low level networking, and in

94
00:03:47,010 --> 00:03:48,090
fact, you have to.

95
00:03:48,090 --> 00:03:51,050
Once you actually get into the
weeds of what is the browser

96
00:03:51,050 --> 00:03:53,390
doing, that's what you
need to understand.

97
00:03:53,390 --> 00:03:54,010
MALE SPEAKER: OK.

98
00:03:54,010 --> 00:03:55,150
ILYA GRIGORIK: And
it is almost like

99
00:03:55,150 --> 00:03:57,240
an ID at this point.

100
00:03:57,240 --> 00:03:58,140
MALE SPEAKER: True, true.

101
00:03:58,140 --> 00:04:00,520
I see a lot of people, a lot of
developers actually using

102
00:04:00,520 --> 00:04:02,390
it as such.

103
00:04:02,390 --> 00:04:06,190
So you actually looked at the
Devoxx website as well.

104
00:04:06,190 --> 00:04:06,330
ILYA GRIGORIK: Yep.

105
00:04:06,330 --> 00:04:10,100
MALE SPEAKER: And you have a few
things to share with our

106
00:04:10,100 --> 00:04:12,010
friends organizing the
conference and

107
00:04:12,010 --> 00:04:13,220
running this website.

108
00:04:13,220 --> 00:04:17,339
What kind of things did you
find, and are they typical of

109
00:04:17,339 --> 00:04:18,250
things you find elsewhere?

110
00:04:18,250 --> 00:04:19,220
ILYA GRIGORIK: They were
actually typical, and I have

111
00:04:19,220 --> 00:04:22,140
to say, the Devoxx site actually
was pretty good, all

112
00:04:22,140 --> 00:04:22,840
things considered.

113
00:04:22,840 --> 00:04:24,790
So no complaints there.

114
00:04:24,790 --> 00:04:26,250
So some interesting takeaways.

115
00:04:26,250 --> 00:04:28,940
An average page on the internet
today is about one

116
00:04:28,940 --> 00:04:30,270
megabyte in size.

117
00:04:30,270 --> 00:04:31,240
One meg.

118
00:04:31,240 --> 00:04:33,480
I find this number surprising,
right, the first

119
00:04:33,480 --> 00:04:34,250
time I heard it.

120
00:04:34,250 --> 00:04:37,860
And it's composed of
over 80 requests.

121
00:04:37,860 --> 00:04:40,290
So one page, where there
is 80 resources--

122
00:04:40,290 --> 00:04:42,240
images, JavaScript, CSS--

123
00:04:42,240 --> 00:04:44,830
that need to come in to compose
the page, and we're

124
00:04:44,830 --> 00:04:48,680
connecting on average to over
30 servers to fetch all of

125
00:04:48,680 --> 00:04:49,720
that data, right?

126
00:04:49,720 --> 00:04:52,140
And of course, as users, we
expect all of this to happen

127
00:04:52,140 --> 00:04:52,610
instantaneously.

128
00:04:52,610 --> 00:04:55,650
It's like, yes, connect to 30
servers, compose all of this,

129
00:04:55,650 --> 00:04:57,900
and just instantly display it.

130
00:04:57,900 --> 00:05:02,200
I think for Devoxx, if memory
serves, it was more requests.

131
00:05:02,200 --> 00:05:05,120
It was like 140 requests.

132
00:05:05,120 --> 00:05:07,620
But nonetheless, it was
structured well, so it loaded

133
00:05:07,620 --> 00:05:08,870
pretty fast.

134
00:05:08,870 --> 00:05:10,030
So they did a good job.

135
00:05:10,030 --> 00:05:11,400
MALE SPEAKER: So somebody must
have been using Chrome tools.

136
00:05:11,400 --> 00:05:12,020
ILYA GRIGORIK: Yes.

137
00:05:12,020 --> 00:05:13,110
MALE SPEAKER: OK, cool.

138
00:05:13,110 --> 00:05:16,180
So you also covered something
about the difference between

139
00:05:16,180 --> 00:05:19,410
latency and bandwidth, and how
developers should look at it,

140
00:05:19,410 --> 00:05:21,200
how it's really important.

141
00:05:21,200 --> 00:05:21,680
ILYA GRIGORIK: Yeah.

142
00:05:21,680 --> 00:05:24,240
So this is a big aha moment, I
think, for a lot of people,

143
00:05:24,240 --> 00:05:28,670
where you turn on your TV, you
watch the commercials for your

144
00:05:28,670 --> 00:05:32,080
ISP, and it's like, get the
latest 4G, highest speed,

145
00:05:32,080 --> 00:05:34,070
whatever bandwidth connection,
right?

146
00:05:34,070 --> 00:05:38,420
And oftentimes, I think, we
think of speed and performance

147
00:05:38,420 --> 00:05:39,850
on the web as just bandwidth.

148
00:05:39,850 --> 00:05:42,920
Like, can I get a bigger pipe,
if you will, to my house?

149
00:05:42,920 --> 00:05:44,580
Because that'll solve
all problems.

150
00:05:44,580 --> 00:05:46,600
If we have bigger
pages, so what?

151
00:05:46,600 --> 00:05:48,590
We'll just get more bandwidth.

152
00:05:48,590 --> 00:05:51,750
The problem is, bandwidth
doesn't actually help after a

153
00:05:51,750 --> 00:05:53,940
certain point with
web browsing.

154
00:05:53,940 --> 00:05:56,660
So as we said, we have
80 requests.

155
00:05:56,660 --> 00:05:58,680
We have many parallel
connections.

156
00:05:58,680 --> 00:06:02,300
And if you kind of go into lower
levels of how TCP works,

157
00:06:02,300 --> 00:06:04,380
we don't actually use all the
bandwidth at the beginning of

158
00:06:04,380 --> 00:06:05,210
the TCP connection.

159
00:06:05,210 --> 00:06:07,620
So you're actually
bound by latency.

160
00:06:07,620 --> 00:06:09,790
And unfortunately, latency
is not changing.

161
00:06:09,790 --> 00:06:12,640
We have this annoying thing
called the speed of light, and

162
00:06:12,640 --> 00:06:13,960
it's like, we just
can't figure out

163
00:06:13,960 --> 00:06:15,320
how to go any faster.

164
00:06:15,320 --> 00:06:19,530
So because of that, we need to
pay attention to latency.

165
00:06:19,530 --> 00:06:21,270
This is-- you mentioned CDNs.

166
00:06:21,270 --> 00:06:24,100
The whole point of a CDN is to
get a server closer to the

167
00:06:24,100 --> 00:06:26,060
user, such that we
can terminate

168
00:06:26,060 --> 00:06:27,390
the connection faster.

169
00:06:27,390 --> 00:06:29,450
That is the prime point there.

170
00:06:29,450 --> 00:06:32,160
And just understanding why you
need that is very important.

171
00:06:32,160 --> 00:06:35,240
So if you're running a site
here in Europe, and your

172
00:06:35,240 --> 00:06:38,420
server is in the US, because
you're using some cloud

173
00:06:38,420 --> 00:06:41,430
provider, you're penalizing
all of your users by a

174
00:06:41,430 --> 00:06:44,855
significant margin-- like
150, 200 milliseconds.

175
00:06:44,855 --> 00:06:47,340
MALE SPEAKER: And eventually
you're not making as much

176
00:06:47,340 --> 00:06:47,980
money as you should be.

177
00:06:47,980 --> 00:06:50,290
ILYA GRIGORIK: Right, and in
all likelihood, your bounce

178
00:06:50,290 --> 00:06:52,920
rates are higher, and
other things.

179
00:06:52,920 --> 00:06:56,390
MALE SPEAKER: So speaking of all
of this, how much of that

180
00:06:56,390 --> 00:06:59,910
is going into innovation
and standards?

181
00:06:59,910 --> 00:07:02,750
I mean, I hear about HTTP2
maybe coming along.

182
00:07:02,750 --> 00:07:04,700
Can you say a word about that,
and how maybe that was

183
00:07:04,700 --> 00:07:05,860
inspired by [INAUDIBLE]

184
00:07:05,860 --> 00:07:06,120
Google?

185
00:07:06,120 --> 00:07:06,370
ILYA GRIGORIK: Yeah.

186
00:07:06,370 --> 00:07:09,480
So actually, one of the efforts
that we've been

187
00:07:09,480 --> 00:07:11,580
sponsoring at Google and working
very closely with is

188
00:07:11,580 --> 00:07:13,390
the W3C web performance group.

189
00:07:13,390 --> 00:07:15,860
So this is a group that was
started a couple years ago,

190
00:07:15,860 --> 00:07:18,120
and it has already created a
number of standards, like

191
00:07:18,120 --> 00:07:19,040
navigation timing.

192
00:07:19,040 --> 00:07:22,810
Navigation timing allows you
to get instrumentation data

193
00:07:22,810 --> 00:07:25,290
out of the browser for things
like, so how long did that DNS

194
00:07:25,290 --> 00:07:26,780
lookup take?

195
00:07:26,780 --> 00:07:30,470
You couldn't access this data
maybe even a year ago.

196
00:07:30,470 --> 00:07:33,170
So we have this now, and
you mentioned HTTP2.

197
00:07:33,170 --> 00:07:35,900
So that was also in some
part driven by SPDY.

198
00:07:35,900 --> 00:07:37,740
So this is a kind of
experimental protocol we

199
00:07:37,740 --> 00:07:42,280
deployed at Google, and it's
available in Chrome, Firefox

200
00:07:42,280 --> 00:07:45,160
and Opera now.

201
00:07:45,160 --> 00:07:46,390
MALE SPEAKER: Is it fair
to say that it's

202
00:07:46,390 --> 00:07:47,950
used in most services?

203
00:07:47,950 --> 00:07:51,930
So if you're using the Chrome
browser, and you access a

204
00:07:51,930 --> 00:07:52,800
Google service, it's
actually--

205
00:07:52,800 --> 00:07:53,080
ILYA GRIGORIK: Yep.

206
00:07:53,080 --> 00:07:55,810
So Google servers speak SPDY.

207
00:07:55,810 --> 00:07:57,060
Chrome speaks SPDY.

208
00:07:57,060 --> 00:07:59,410
So if you're accessing our
service-- if you're reading

209
00:07:59,410 --> 00:08:02,370
Gmail, or doing Google searches
via HTTPS, you're

210
00:08:02,370 --> 00:08:03,150
running over SPDY.

211
00:08:03,150 --> 00:08:04,630
You're not running over HTTP.

212
00:08:04,630 --> 00:08:06,170
Now, here's a caveat.

213
00:08:06,170 --> 00:08:08,780
SPDY is not a replacement
for HTTP.

214
00:08:08,780 --> 00:08:10,570
HTTP is still the same,
but we kind of

215
00:08:10,570 --> 00:08:12,060
changed one layer below--

216
00:08:12,060 --> 00:08:14,330
basically, how we send the
messages on the wire.

217
00:08:14,330 --> 00:08:16,960
And by virtue of changing that,
we can actually make the

218
00:08:16,960 --> 00:08:21,090
transport more efficient, so it
can push multiple resources

219
00:08:21,090 --> 00:08:22,470
over the same connection.

220
00:08:22,470 --> 00:08:27,590
So the HTTP 2.0 effort is
basically that, or at least,

221
00:08:27,590 --> 00:08:30,090
we have a charter now for that
working group-- the IETF

222
00:08:30,090 --> 00:08:33,470
working group-- which is going
to take SPDY version two of

223
00:08:33,470 --> 00:08:35,340
the protocol that we designed,
and use that

224
00:08:35,340 --> 00:08:36,490
as a starting point.

225
00:08:36,490 --> 00:08:39,490
So in the coming year or couple
of years, hopefully

226
00:08:39,490 --> 00:08:42,980
we'll standardize it and
release it as HTTP 2.0.

227
00:08:42,980 --> 00:08:43,320
MALE SPEAKER: OK.

228
00:08:43,320 --> 00:08:43,690
Great.

229
00:08:43,690 --> 00:08:45,150
That's exciting to hear.

230
00:08:45,150 --> 00:08:46,350
ILYA GRIGORIK: And the world
will be a better place.

231
00:08:46,350 --> 00:08:47,010
MALE SPEAKER: Of course.

232
00:08:47,010 --> 00:08:49,400
That's what we all aim for.

233
00:08:49,400 --> 00:08:51,630
Let me close with a
final question.

234
00:08:51,630 --> 00:08:54,240
What about mobile in
this whole picture?

235
00:08:54,240 --> 00:08:57,350
That's probably someplace
where performance is as

236
00:08:57,350 --> 00:08:59,890
important, if not more important
than desktops and

237
00:08:59,890 --> 00:09:00,840
typical browsers.

238
00:09:00,840 --> 00:09:03,880
You have also browsers there,
and tools are actually

239
00:09:03,880 --> 00:09:05,610
available to help
you with that.

240
00:09:05,610 --> 00:09:06,480
So what are we doing there?

241
00:09:06,480 --> 00:09:08,480
ILYA GRIGORIK: So everything we
just talked about applies

242
00:09:08,480 --> 00:09:11,270
to mobile, especially bandwidth
and latency.

243
00:09:11,270 --> 00:09:14,280
So of course we still have room
for improvement in terms

244
00:09:14,280 --> 00:09:15,550
of bandwidth and mobile.

245
00:09:15,550 --> 00:09:19,050
Having said that, latency is
much worse than desktop, for a

246
00:09:19,050 --> 00:09:21,270
number of reasons which we
won't get into here.

247
00:09:21,270 --> 00:09:24,450
But it only makes it more
important that we design with

248
00:09:24,450 --> 00:09:26,670
efficiency in mind, like
reusing connections,

249
00:09:26,670 --> 00:09:29,750
leveraging all of the caches,
and all the rest.

250
00:09:29,750 --> 00:09:30,990
We also are building--

251
00:09:30,990 --> 00:09:33,720
I think we are building, but
we still need a lot better

252
00:09:33,720 --> 00:09:34,610
tools for mobile.

253
00:09:34,610 --> 00:09:37,850
So for example, in Chrome, we
have remote debugging, and

254
00:09:37,850 --> 00:09:40,390
this is very important, not just
because you can connect

255
00:09:40,390 --> 00:09:42,950
to your phone and kind of pull
the data out of it, but you

256
00:09:42,950 --> 00:09:45,730
can actually simulate and use
the wireless network on your

257
00:09:45,730 --> 00:09:50,050
phone to feel how the page
looks, or how it downloads, if

258
00:09:50,050 --> 00:09:52,620
you will, or even
how it executes.

259
00:09:52,620 --> 00:09:55,140
We develop our mobile
apps on our desktop.

260
00:09:55,140 --> 00:09:57,940
We run it in an emulator, which
is still running on your

261
00:09:57,940 --> 00:10:01,730
beefy quad-core with whatever
graphics card.

262
00:10:01,730 --> 00:10:04,900
Then you put it on your little
phone, right, and it's still

263
00:10:04,900 --> 00:10:06,810
underpowered, comparatively
speaking.

264
00:10:06,810 --> 00:10:11,530
These things are getting very
good in terms of computing

265
00:10:11,530 --> 00:10:13,940
power and all the rest, but
nonetheless, orders of

266
00:10:13,940 --> 00:10:14,960
magnitude less.

267
00:10:14,960 --> 00:10:18,170
And then it just feels very
different, right?

268
00:10:18,170 --> 00:10:21,520
So with Chrome dev tools, you
can now use all the same

269
00:10:21,520 --> 00:10:24,180
tooling to debug on your phone,
which is awesome.

270
00:10:24,180 --> 00:10:26,390
I think we still have more room
for improvement, though.

271
00:10:26,390 --> 00:10:27,340
MALE SPEAKER: OK, great.

272
00:10:27,340 --> 00:10:29,600
So looking forward to those
improvements as well.

273
00:10:29,600 --> 00:10:30,870
Thanks for taking the time.

274
00:10:30,870 --> 00:10:32,120
ILYA GRIGORIK: Thank you.

275
00:10:32,120 --> 00:10:40,360

