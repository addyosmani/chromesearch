1
00:00:00,000 --> 00:00:04,910
[MUSIC PLAYING]

2
00:00:04,910 --> 00:00:14,730

3
00:00:14,730 --> 00:00:15,020
PAUL IRISH: Hello.

4
00:00:15,020 --> 00:00:18,660
Welcome to The Breakpoint,
Episode 2.

5
00:00:18,660 --> 00:00:21,250
We're going to be talking
about how to be more

6
00:00:21,250 --> 00:00:24,170
productive doing Web-Op
development.

7
00:00:24,170 --> 00:00:25,670
And today we got some
really good stuff.

8
00:00:25,670 --> 00:00:29,020
We're focusing on the Chrome
DevTools in this episode, and

9
00:00:29,020 --> 00:00:32,259
specifically we're going to show
off some of the abilities

10
00:00:32,259 --> 00:00:34,940
to debug your SASS
style sheets.

11
00:00:34,940 --> 00:00:38,310
So with me over in London
is Addy Osmani.

12
00:00:38,310 --> 00:00:40,900
And Addy's just going to get
right into it and show you

13
00:00:40,900 --> 00:00:45,340
kind of how SASS debugging works
inside Chrome DevTools.

14
00:00:45,340 --> 00:00:45,810
ADDY OSMANI: Awesome.

15
00:00:45,810 --> 00:00:47,800
So the first thing we're going
to look at today, as Paul was

16
00:00:47,800 --> 00:00:49,780
saying, are some brand new
features in the DevTools for

17
00:00:49,780 --> 00:00:51,530
people that love working
with SASS.

18
00:00:51,530 --> 00:00:53,165
So I'm going to go over
to my screen.

19
00:00:53,165 --> 00:00:57,830

20
00:00:57,830 --> 00:01:01,190
Now let's fire up
the DevTools.

21
00:01:01,190 --> 00:01:01,460
OK.

22
00:01:01,460 --> 00:01:04,000
So I've got a SASS project in
front of me at the moment.

23
00:01:04,000 --> 00:01:05,800
Now, the first thing you
probably want to do with this

24
00:01:05,800 --> 00:01:06,760
is start inspecting stuff.

25
00:01:06,760 --> 00:01:08,660
So we've got a header
at the moment.

26
00:01:08,660 --> 00:01:11,090
Let's inspect it.

27
00:01:11,090 --> 00:01:12,960
So I've got my header in
front of me right now.

28
00:01:12,960 --> 00:01:14,890
I can go and I can do
some awesome stuff.

29
00:01:14,890 --> 00:01:16,910
I can like bump up
the font size.

30
00:01:16,910 --> 00:01:18,750
It looks hot, it looks sexy.

31
00:01:18,750 --> 00:01:21,610
And what's even better is that
I can now go and click on

32
00:01:21,610 --> 00:01:27,830
style.css to see the original
file in the source view.

33
00:01:27,830 --> 00:01:31,540
Now this is great, except you
can see there's some line

34
00:01:31,540 --> 00:01:33,100
numbers here.

35
00:01:33,100 --> 00:01:37,090
It does show me my selector, but
because I'm using SASS--

36
00:01:37,090 --> 00:01:39,770
and this is actually the
compiled version of my style

37
00:01:39,770 --> 00:01:41,090
sheet file--

38
00:01:41,090 --> 00:01:43,530
any changes that I make in this
file are only going to be

39
00:01:43,530 --> 00:01:44,780
reflected in that.

40
00:01:44,780 --> 00:01:47,720
It's not going to be reflected
in the original SASS file.

41
00:01:47,720 --> 00:01:50,800
And whenever I go and I try
compiling my source files,

42
00:01:50,800 --> 00:01:52,950
these changes that I make to
this file are going to get

43
00:01:52,950 --> 00:01:53,860
overwritten.

44
00:01:53,860 --> 00:01:56,340
So what we do that's
better than this?

45
00:01:56,340 --> 00:01:58,830
Now, last week we showed you
that if you go to Chrome

46
00:01:58,830 --> 00:02:03,600
flags-- so let's do that very
quickly, so Chrome flags--

47
00:02:03,600 --> 00:02:05,870
you can actually enable
some experiments.

48
00:02:05,870 --> 00:02:09,850
So let's go to Developer
Tools.

49
00:02:09,850 --> 00:02:12,550
The first thing you want to do
is Enable Developer Tools

50
00:02:12,550 --> 00:02:14,630
Experiments.

51
00:02:14,630 --> 00:02:16,595
Now, normally you'll have to
refresh your browser after

52
00:02:16,595 --> 00:02:20,800
that, but once you do and you go
to the Settings tab, you'll

53
00:02:20,800 --> 00:02:23,110
see that there's an Experiments
tab there.

54
00:02:23,110 --> 00:02:25,710
Now, the option that we're
interested in is the one that

55
00:02:25,710 --> 00:02:27,540
says Support for SASS.

56
00:02:27,540 --> 00:02:29,150
So let's enable that.

57
00:02:29,150 --> 00:02:31,380
Now, after you've enabled
Support for SAAS, you're going

58
00:02:31,380 --> 00:02:35,420
to need to reload the DevTools
and refresh the page.

59
00:02:35,420 --> 00:02:40,010
So we're going to do
that very quickly.

60
00:02:40,010 --> 00:02:41,750
And let's open up the
DevTools once again.

61
00:02:41,750 --> 00:02:44,510

62
00:02:44,510 --> 00:02:49,610
Now if I go back to Elements
and we inspect our h1 once

63
00:02:49,610 --> 00:02:52,550
again, what you'll see is that
we've now got access

64
00:02:52,550 --> 00:02:54,300
to styles at SCSS.

65
00:02:54,300 --> 00:02:58,290
And if I click into this, I can
actually edit with syntax

66
00:02:58,290 --> 00:03:00,900
highlighting my original
SAAS file.

67
00:03:00,900 --> 00:03:01,600
Well, this is really cool.

68
00:03:01,600 --> 00:03:02,860
You've got the nesting.

69
00:03:02,860 --> 00:03:04,550
You can see all of your
beautiful SASS

70
00:03:04,550 --> 00:03:05,860
source, which is great.

71
00:03:05,860 --> 00:03:07,500
And I can make changes
to this.

72
00:03:07,500 --> 00:03:10,300
Now, before you actually make
changes, if you want them to

73
00:03:10,300 --> 00:03:13,550
be visible in DevTools, you
need to go and save this.

74
00:03:13,550 --> 00:03:18,440
So I'm just going to do Command
S to save this.

75
00:03:18,440 --> 00:03:21,900
Alternatively, you can right
click and do Save As and save

76
00:03:21,900 --> 00:03:24,900
it to the original location
that you were working in.

77
00:03:24,900 --> 00:03:27,310
And now I can just go and
make changes to this.

78
00:03:27,310 --> 00:03:29,190
So before I make changes, just
to let you know, so I'm

79
00:03:29,190 --> 00:03:32,490
currently running LiveReload
and SASS --watch in the

80
00:03:32,490 --> 00:03:33,040
background.

81
00:03:33,040 --> 00:03:35,300
So it's keeping an eye
on what I'm doing.

82
00:03:35,300 --> 00:03:37,580
And if I make a change--
so I've just

83
00:03:37,580 --> 00:03:38,870
bumped up the font size.

84
00:03:38,870 --> 00:03:40,770
Let's Command S to save that.

85
00:03:40,770 --> 00:03:44,180

86
00:03:44,180 --> 00:03:46,770
So what you've seen is it's
gone, and without me having to

87
00:03:46,770 --> 00:03:50,080
reload the page or anything,
it's compiled my SASS file.

88
00:03:50,080 --> 00:03:51,800
It's gone and it's reloaded
the page.

89
00:03:51,800 --> 00:03:54,225
So I'm actually seeing the
changes in real time of what

90
00:03:54,225 --> 00:03:55,740
I've done in my source file.

91
00:03:55,740 --> 00:03:56,950
And that's cool.

92
00:03:56,950 --> 00:03:57,750
Let's [INAUDIBLE]

93
00:03:57,750 --> 00:03:59,570
that back and save it.

94
00:03:59,570 --> 00:04:00,980
Now, there's a mixin.

95
00:04:00,980 --> 00:04:02,280
So what I'm actually going
to do, I want to make

96
00:04:02,280 --> 00:04:03,170
a change to a mixin.

97
00:04:03,170 --> 00:04:06,880
So we've got a text shadow on
HTML5 PLEASE at the moment,

98
00:04:06,880 --> 00:04:07,960
which is cool.

99
00:04:07,960 --> 00:04:11,360
Now, let's say that I started
editing and I wanted to make

100
00:04:11,360 --> 00:04:11,900
some changes.

101
00:04:11,900 --> 00:04:15,130
And maybe I went and did Command
Save without knowing

102
00:04:15,130 --> 00:04:16,790
that I made a mistake.

103
00:04:16,790 --> 00:04:20,410
Now, normally with your CSS
editing workflow, there's no

104
00:04:20,410 --> 00:04:23,670
sort of [INAUDIBLE] or error
message to tell you you've

105
00:04:23,670 --> 00:04:27,330
done something wrong, that
something's been messed up.

106
00:04:27,330 --> 00:04:28,860
But here, as you can see--
because I've got like

107
00:04:28,860 --> 00:04:30,350
LiveReload and all my other
tools running in the

108
00:04:30,350 --> 00:04:31,140
background--

109
00:04:31,140 --> 00:04:33,470
I get some nice error messages
that say, OK, well, there's

110
00:04:33,470 --> 00:04:35,110
some invalid CSS.

111
00:04:35,110 --> 00:04:38,060
And it'll tell you exactly what
you've been doing wrong.

112
00:04:38,060 --> 00:04:40,530
Now, in my case, I actually
want to replace this

113
00:04:40,530 --> 00:04:40,960
completely.

114
00:04:40,960 --> 00:04:43,900
So let's first dismiss this.

115
00:04:43,900 --> 00:04:47,740
Now, in my case, I actually
want to go and use a mixin

116
00:04:47,740 --> 00:04:49,250
that I previously defined.

117
00:04:49,250 --> 00:04:55,530
So I just added my mixin and I
do a Commend S once again, and

118
00:04:55,530 --> 00:04:57,110
there we go.

119
00:04:57,110 --> 00:04:57,720
PAUL IRISH: Nice.

120
00:04:57,720 --> 00:04:58,930
ADDY OSMANI: That's
hot, right?

121
00:04:58,930 --> 00:05:01,410
PAUL IRISH: That's
sharp, yeah.

122
00:05:01,410 --> 00:05:03,380
ADDY OSMANI: So that's
really cool.

123
00:05:03,380 --> 00:05:06,230
You've now gotten much better
support for SASS editing in

124
00:05:06,230 --> 00:05:07,670
the DevTools, and that
will help with

125
00:05:07,670 --> 00:05:08,950
your general workflow.

126
00:05:08,950 --> 00:05:11,740
But on top of that, you've also
got the ability to use

127
00:05:11,740 --> 00:05:13,310
all the other benefits
that the Sources

128
00:05:13,310 --> 00:05:14,170
panel still gives you.

129
00:05:14,170 --> 00:05:17,610
So if I went to, say, Local
Modifications--

130
00:05:17,610 --> 00:05:19,940
so we were showing you a little
bit of this last week.

131
00:05:19,940 --> 00:05:22,340
So if I go to Local
Modifications, I actually get

132
00:05:22,340 --> 00:05:23,950
complete editing history.

133
00:05:23,950 --> 00:05:27,550
So I can revert back to any
point in my editing workflow

134
00:05:27,550 --> 00:05:30,460
without having to go anywhere
outside the DevTools.

135
00:05:30,460 --> 00:05:34,930
And it feels so nice to
be able to do that.

136
00:05:34,930 --> 00:05:37,220
So, yeah, I think that's
it for the SASS

137
00:05:37,220 --> 00:05:38,650
portion of my demo.

138
00:05:38,650 --> 00:05:39,980
What did you think, Paul?

139
00:05:39,980 --> 00:05:41,000
PAUL IRISH: That's pretty hot.

140
00:05:41,000 --> 00:05:45,140
So I think it's cool because
typically you're in a

141
00:05:45,140 --> 00:05:47,440
situation where you're just
editing your SASS, and then

142
00:05:47,440 --> 00:05:49,390
you compile it down, and then
you'll make a change and

143
00:05:49,390 --> 00:05:52,680
you'll be like, well, somehow I
have to transport the change

144
00:05:52,680 --> 00:05:55,050
I just made in the DevTools back
to the original, like the

145
00:05:55,050 --> 00:05:55,880
way that I authored it.

146
00:05:55,880 --> 00:05:56,770
And it's a bit awkward.

147
00:05:56,770 --> 00:06:02,440
And here you can just develop
directly inside the tool and

148
00:06:02,440 --> 00:06:04,960
get your immediate feedback that
you want, but you don't

149
00:06:04,960 --> 00:06:08,640
have to be translating back and
forth between your SASS

150
00:06:08,640 --> 00:06:09,890
and your CSS.

151
00:06:09,890 --> 00:06:11,840
So that's really dope.

152
00:06:11,840 --> 00:06:13,820
I dig it.

153
00:06:13,820 --> 00:06:15,160
ADDY OSMANI: I like it.

154
00:06:15,160 --> 00:06:15,226
PAUL IRISH: Cool.

155
00:06:15,226 --> 00:06:15,590
All right.

156
00:06:15,590 --> 00:06:18,950
So now that we've got SASS under
control, we've got some

157
00:06:18,950 --> 00:06:19,720
more things to show you.

158
00:06:19,720 --> 00:06:22,130
First we're going to show you
some cool things in the Chrome

159
00:06:22,130 --> 00:06:24,660
DevTools Console.

160
00:06:24,660 --> 00:06:28,520
Then we're going to show you
skinning and customizing the

161
00:06:28,520 --> 00:06:31,400
theme and look of the Chrome
DevTools, some deeper

162
00:06:31,400 --> 00:06:37,280
inspection features inside
the DevTools, and some

163
00:06:37,280 --> 00:06:38,390
goodies at the end.

164
00:06:38,390 --> 00:06:41,940
But I'm going to show you some
good stuff in the Console.

165
00:06:41,940 --> 00:06:47,750
Now, the first thing is, if
you've ever worked on a page

166
00:06:47,750 --> 00:06:49,760
that, for instance, doesn't have
jQuery, doesn't have a

167
00:06:49,760 --> 00:06:52,300
dollar function to find, and you
open up the console, and

168
00:06:52,300 --> 00:06:57,850
then you type dollar, and you
start to pass in what normally

169
00:06:57,850 --> 00:07:01,390
you would be saying to jQuery,
and it works or it doesn't, or

170
00:07:01,390 --> 00:07:03,340
it returns an empty set, and
you're like, why is there a

171
00:07:03,340 --> 00:07:07,380
dollar available inside my
console when I don't have it

172
00:07:07,380 --> 00:07:09,720
on the page?--

173
00:07:09,720 --> 00:07:11,720
this is the command line API.

174
00:07:11,720 --> 00:07:16,100
So I'm going to show a little
bit of what's going on here.

175
00:07:16,100 --> 00:07:18,790
There was a good question on
Stack Overflow a bit ago about

176
00:07:18,790 --> 00:07:20,910
why there is a dollar and

177
00:07:20,910 --> 00:07:25,160
double-dollar inside the DevTools.

178
00:07:25,160 --> 00:07:27,590
So this actually comes
originally from Firebug.

179
00:07:27,590 --> 00:07:28,590
It's the command line API.

180
00:07:28,590 --> 00:07:31,970
These are all things that are
available within the context

181
00:07:31,970 --> 00:07:33,270
of the Console.

182
00:07:33,270 --> 00:07:40,950
So we have dollar, double
dollar, XPath, dollar-zero,

183
00:07:40,950 --> 00:07:42,240
which represents the
Yeoman you have

184
00:07:42,240 --> 00:07:45,050
selected, and even Inspect.

185
00:07:45,050 --> 00:07:49,350
You can pass an element into
Inspect, and it'll go over to

186
00:07:49,350 --> 00:07:51,600
the Elements panel, and you'll
be viewing that.

187
00:07:51,600 --> 00:07:54,000
So some really cool
stuff in here.

188
00:07:54,000 --> 00:07:58,420
But people have been curious
about why double-dollar is

189
00:07:58,420 --> 00:08:01,800
selector and why single-dollar
has been ID.

190
00:08:01,800 --> 00:08:06,820
And the funny situation is that
this is all about kind of

191
00:08:06,820 --> 00:08:08,980
JavaScript history.

192
00:08:08,980 --> 00:08:12,090
Double-dollar was originally
used by prototype.

193
00:08:12,090 --> 00:08:18,840
And it was used as a way to grab
all the selectors, but

194
00:08:18,840 --> 00:08:20,730
then jQuery was like,
you know, we'll just

195
00:08:20,730 --> 00:08:21,890
throw that on dollar.

196
00:08:21,890 --> 00:08:24,550
And so now there's been this
weird situation where the

197
00:08:24,550 --> 00:08:28,250
legacy of double-dollar has been
what's available inside

198
00:08:28,250 --> 00:08:33,049
Chrome DevTools and Firebug and
Opera Dragonfly, but at

199
00:08:33,049 --> 00:08:36,880
the same time everyone's used
to grabbing selectors, not

200
00:08:36,880 --> 00:08:39,080
IDs, with single-dollar.

201
00:08:39,080 --> 00:08:44,020
So Addy and I met up this summer
to work on some Chrome

202
00:08:44,020 --> 00:08:49,180
DevTool stuff, and we were like,
this comes up and now

203
00:08:49,180 --> 00:08:51,920
and again, and we were like,
we should probably change

204
00:08:51,920 --> 00:08:54,880
this, right?

205
00:08:54,880 --> 00:08:55,800
ADDY OSMANI: Yeah, right.

206
00:08:55,800 --> 00:09:01,540
PAUL IRISH: So we went in and
we talked to some of the

207
00:09:01,540 --> 00:09:05,440
developers behind Firebug and
the Firefox DevTools, and we

208
00:09:05,440 --> 00:09:08,250
talked to the Dragonfly
guys, and we're like,

209
00:09:08,250 --> 00:09:10,040
let's change this?

210
00:09:10,040 --> 00:09:12,040
I guess that's how it worked.

211
00:09:12,040 --> 00:09:13,440
ADDY OSMANI: Pretty much.

212
00:09:13,440 --> 00:09:17,150
PAUL IRISH: And so basically we
changed the definition of

213
00:09:17,150 --> 00:09:22,240
dollar inside the command line
API in these developer tools.

214
00:09:22,240 --> 00:09:26,650
So let's just show a little demo
of how this works now.

215
00:09:26,650 --> 00:09:30,680
So I'm going to ask for--

216
00:09:30,680 --> 00:09:32,700
this is the way that
it used to work.

217
00:09:32,700 --> 00:09:40,130
You'd pass in an ID to dollar,
and it would grab that element

218
00:09:40,130 --> 00:09:43,220
with that ID.

219
00:09:43,220 --> 00:09:43,880
ADDY OSMANI: But that
just feels a little

220
00:09:43,880 --> 00:09:44,590
bit awkward, right?

221
00:09:44,590 --> 00:09:46,880
Because you're used to using
jQuery these days with dollar

222
00:09:46,880 --> 00:09:50,230
sign, and maybe you want to be
able to stick other characters

223
00:09:50,230 --> 00:09:52,045
in front of it or use
classes and all that

224
00:09:52,045 --> 00:09:52,970
other stuff, right?

225
00:09:52,970 --> 00:09:53,750
PAUL IRISH: Right, yeah.

226
00:09:53,750 --> 00:09:57,640
So now what we did is we changed
it, but then we also

227
00:09:57,640 --> 00:10:00,190
made sure that there is a kind
of like a little catch so that

228
00:10:00,190 --> 00:10:03,220
you're not totally
confused when it

229
00:10:03,220 --> 00:10:03,980
doesn't return anything.

230
00:10:03,980 --> 00:10:08,010
So it lets you know that indeed
there is a fallback

231
00:10:08,010 --> 00:10:09,340
situation here.

232
00:10:09,340 --> 00:10:14,030
And so it'll recommend that you
throw in the pound, then

233
00:10:14,030 --> 00:10:14,790
you get that.

234
00:10:14,790 --> 00:10:17,190
So this works for everything.

235
00:10:17,190 --> 00:10:21,220
I could be passing it proper
selectors, and it will always

236
00:10:21,220 --> 00:10:23,350
return the first element
that matches.

237
00:10:23,350 --> 00:10:27,830
It basically works like
Query selector.

238
00:10:27,830 --> 00:10:31,230
So it's a breaking change.

239
00:10:31,230 --> 00:10:33,080
It's a little backwards
incompatible, but we think

240
00:10:33,080 --> 00:10:38,940
that it matches the common 2012
use of dollar and kind of

241
00:10:38,940 --> 00:10:40,500
fits expectations a
little bit better.

242
00:10:40,500 --> 00:10:43,780

243
00:10:43,780 --> 00:10:47,880
So I also wanted to show some
other good stuff in here.

244
00:10:47,880 --> 00:10:49,810
Another feature that was added
somewhat recently into the

245
00:10:49,810 --> 00:10:55,350
Chrome DevTools Console
is dollar-underscore.

246
00:10:55,350 --> 00:11:01,180
And so I believe this comes from
a Perl history, but it

247
00:11:01,180 --> 00:11:02,540
essentially refers to the

248
00:11:02,540 --> 00:11:04,840
previously evaluated statement.

249
00:11:04,840 --> 00:11:11,380
So I'm going to go and grab
hp logo, offset width.

250
00:11:11,380 --> 00:11:12,460
Cool.

251
00:11:12,460 --> 00:11:14,960
And now I'm going to add
a little bit of WebKit

252
00:11:14,960 --> 00:11:19,500
transition for fun, because
we're going to

253
00:11:19,500 --> 00:11:22,400
do some good stuff.

254
00:11:22,400 --> 00:11:29,300
And now we're going to change
the width 500 plus

255
00:11:29,300 --> 00:11:32,430
dollar-underscore plus px.

256
00:11:32,430 --> 00:11:36,130
And so what this is going
to do is it's going

257
00:11:36,130 --> 00:11:38,970
to grab this 275--

258
00:11:38,970 --> 00:11:40,470
that was the value we
had right here--

259
00:11:40,470 --> 00:11:42,040
and use it in place here.

260
00:11:42,040 --> 00:11:46,570
So now I evaluate this.

261
00:11:46,570 --> 00:11:47,410
Yeah.

262
00:11:47,410 --> 00:11:49,200
ADDY OSMANI: Wow.

263
00:11:49,200 --> 00:11:51,690
That is so awesome.

264
00:11:51,690 --> 00:11:55,141
PAUL IRISH: Definitely against
branding guidelines, but it's

265
00:11:55,141 --> 00:11:56,380
cool, it's cool.

266
00:11:56,380 --> 00:11:57,510
ADDY OSMANI: You're going to
be getting a call from

267
00:11:57,510 --> 00:11:58,970
marketing any minute now.

268
00:11:58,970 --> 00:12:00,220
PAUL IRISH: Yup, yup.

269
00:12:00,220 --> 00:12:01,870

270
00:12:01,870 --> 00:12:02,310
All right.

271
00:12:02,310 --> 00:12:05,410
So let's bring that back down.

272
00:12:05,410 --> 00:12:06,310
Phew.

273
00:12:06,310 --> 00:12:06,650
OK.

274
00:12:06,650 --> 00:12:07,280
Cool.

275
00:12:07,280 --> 00:12:10,820
So dollar-underscore, a small
, little convenience thing,

276
00:12:10,820 --> 00:12:12,880
but I hope it comes in useful.

277
00:12:12,880 --> 00:12:16,000
I know that I am commonly like
referencing things up and

278
00:12:16,000 --> 00:12:19,120
down, so it should be good.

279
00:12:19,120 --> 00:12:22,820
Another thing that I wanted to
show real quick is the new

280
00:12:22,820 --> 00:12:25,180
object preview logging.

281
00:12:25,180 --> 00:12:29,010
So let's see.

282
00:12:29,010 --> 00:12:30,550
I think we have an object.

283
00:12:30,550 --> 00:12:32,280
I was scouting around for
an object earlier.

284
00:12:32,280 --> 00:12:32,490
Yeah.

285
00:12:32,490 --> 00:12:35,060
Here we go.

286
00:12:35,060 --> 00:12:39,490
So this is just some weird
object that's available on the

287
00:12:39,490 --> 00:12:41,440
Google homepage.

288
00:12:41,440 --> 00:12:42,290
Don't even know what it is.

289
00:12:42,290 --> 00:12:46,990
But normally if you had in
your application code

290
00:12:46,990 --> 00:12:50,920
something like console log, and
you did something like you

291
00:12:50,920 --> 00:12:53,990
were logging out this thing,
then you would get this little

292
00:12:53,990 --> 00:12:56,250
object's name, and you get the
triangle, and then you come

293
00:12:56,250 --> 00:12:58,400
over here and you click it.

294
00:12:58,400 --> 00:13:02,480
And that's OK, but we thought
that it would be nicer if you

295
00:13:02,480 --> 00:13:04,460
got a little preview
of what's going on.

296
00:13:04,460 --> 00:13:07,810
So now when you do this,
you do get a preview.

297
00:13:07,810 --> 00:13:10,990
So it kind of like takes a quick
snapshot of the values

298
00:13:10,990 --> 00:13:13,190
inside the object.

299
00:13:13,190 --> 00:13:14,930
And so you can see kind
of at a glance.

300
00:13:14,930 --> 00:13:17,800
So this becomes really useful,
especially when

301
00:13:17,800 --> 00:13:19,200
you have a big object.

302
00:13:19,200 --> 00:13:22,990
Let's grab window and
grab location.

303
00:13:22,990 --> 00:13:27,630
And you can see very quickly
from a console log what some

304
00:13:27,630 --> 00:13:31,950
of the properties on
this object are.

305
00:13:31,950 --> 00:13:37,430
There's also another part of
this, which is that previously

306
00:13:37,430 --> 00:13:39,390
the values here, when you logged
them out, they were

307
00:13:39,390 --> 00:13:40,750
lazy evaluated.

308
00:13:40,750 --> 00:13:46,380
So this ended up in a situation
where sometimes you

309
00:13:46,380 --> 00:13:50,750
could log an object, change it,
log it again, and when you

310
00:13:50,750 --> 00:13:53,420
went back to your console and
opened them back up, they

311
00:13:53,420 --> 00:13:57,590
would be the same, which
you wouldn't expect.

312
00:13:57,590 --> 00:13:59,550
So that essentially got fixed
with this change.

313
00:13:59,550 --> 00:14:02,790
So you get both the preview and
that preview is evaluated

314
00:14:02,790 --> 00:14:06,116
at log time instead of
at expansion time.

315
00:14:06,116 --> 00:14:07,570
Does that makes sense, Addy?

316
00:14:07,570 --> 00:14:07,990
ADDY OSMANI: Yeah.

317
00:14:07,990 --> 00:14:09,250
Yeah, it does.

318
00:14:09,250 --> 00:14:09,615
PAUL IRISH: OK.

319
00:14:09,615 --> 00:14:12,330
OK, good.

320
00:14:12,330 --> 00:14:12,530
OK.

321
00:14:12,530 --> 00:14:18,020
I think that's it for Console?

322
00:14:18,020 --> 00:14:19,330
Yeah.

323
00:14:19,330 --> 00:14:20,840
Do you want to show
a little bit?

324
00:14:20,840 --> 00:14:23,990
I know that you made this cool
post on Google+ a little bit

325
00:14:23,990 --> 00:14:29,460
ago about theming and skinning
your Chrome DevTools.

326
00:14:29,460 --> 00:14:30,170
ADDY OSMANI: Yeah.

327
00:14:30,170 --> 00:14:33,090
So I was really surprised
at how much

328
00:14:33,090 --> 00:14:34,220
people wanted this stuff.

329
00:14:34,220 --> 00:14:38,450
It was like that's crazy.

330
00:14:38,450 --> 00:14:40,660
We've got almost 1,000
shares on that.

331
00:14:40,660 --> 00:14:41,805
It's insane.

332
00:14:41,805 --> 00:14:44,440
So normally when you get a brand
new text editor, the

333
00:14:44,440 --> 00:14:47,190
first thing a lot of time you do
is you go and try to find a

334
00:14:47,190 --> 00:14:50,380
theme for it that you love,
because you're going to be

335
00:14:50,380 --> 00:14:51,770
spending a lot of time in
your editor and you

336
00:14:51,770 --> 00:14:54,050
want it to look great.

337
00:14:54,050 --> 00:14:57,540
Sometime, like probably about a
year ago, a great developer

338
00:14:57,540 --> 00:15:00,640
named Darcy Clarke figured out
that you can go and you can

339
00:15:00,640 --> 00:15:04,010
actually customise the look
of the Chrome DevTools.

340
00:15:04,010 --> 00:15:06,910
And I'm going to share my screen
for just a minute.

341
00:15:06,910 --> 00:15:12,510
So this is Darcy's blog post
I'm going to be showing.

342
00:15:12,510 --> 00:15:16,056
And he started this thread about
how you can go and you

343
00:15:16,056 --> 00:15:17,970
can customize this, regardless
of what your

344
00:15:17,970 --> 00:15:19,220
operating system is.

345
00:15:19,220 --> 00:15:21,510
And there are so many
people that were

346
00:15:21,510 --> 00:15:22,820
interested in this idea.

347
00:15:22,820 --> 00:15:23,620
PAUL IRISH: Yeah.

348
00:15:23,620 --> 00:15:26,100
ADDY OSMANI: So a year later,
I thought wouldn't it be

349
00:15:26,100 --> 00:15:28,830
interesting to see where
people took this.

350
00:15:28,830 --> 00:15:32,380
And so I put together this
post where I summarized a

351
00:15:32,380 --> 00:15:35,280
bunch of the different themes
that people had worked on.

352
00:15:35,280 --> 00:15:38,340
And it went crazy.

353
00:15:38,340 --> 00:15:41,860
And there's probably 20, 30
themes available for the

354
00:15:41,860 --> 00:15:44,540
DevTools these days.

355
00:15:44,540 --> 00:15:45,790
Let's take a look
at one of them.

356
00:15:45,790 --> 00:15:49,220

357
00:15:49,220 --> 00:15:51,520
So this is a thing
called MNML.

358
00:15:51,520 --> 00:15:54,000
PAUL IRISH: Ah-hum, hum.

359
00:15:54,000 --> 00:15:55,940
ADDY OSMANI: It's building
up, MNML, MNML,

360
00:15:55,940 --> 00:15:59,030
something like that.

361
00:15:59,030 --> 00:16:00,480
But it's really cool.

362
00:16:00,480 --> 00:16:02,950
You can actually customize
almost every single part of

363
00:16:02,950 --> 00:16:03,325
the DevTools--

364
00:16:03,325 --> 00:16:04,290
PAUL IRISH: That's hot.

365
00:16:04,290 --> 00:16:05,950
ADDY OSMANI: --to look like
whatever you want.

366
00:16:05,950 --> 00:16:08,430
There's some people who've like
gotten rid of the text

367
00:16:08,430 --> 00:16:09,220
next to the icons.

368
00:16:09,220 --> 00:16:11,560
And people have like bumped up
the size of the different

369
00:16:11,560 --> 00:16:12,120
parts to it.

370
00:16:12,120 --> 00:16:13,080
It's been really interesting.

371
00:16:13,080 --> 00:16:17,380
PAUL IRISH: I would probably
apply like a WebKit transition

372
00:16:17,380 --> 00:16:18,660
to a lot of things.

373
00:16:18,660 --> 00:16:19,140
ADDY OSMANI: Yeah.

374
00:16:19,140 --> 00:16:21,220
PAUL IRISH: And do some
3D transforms.

375
00:16:21,220 --> 00:16:23,950
So instead of like switching
panels, like when you go from

376
00:16:23,950 --> 00:16:26,150
Console to Elements, it
like does like a 3D,

377
00:16:26,150 --> 00:16:28,925
phowswish, or something.

378
00:16:28,925 --> 00:16:30,250
Let's put it out there.

379
00:16:30,250 --> 00:16:31,620
I think it would be awesome.

380
00:16:31,620 --> 00:16:33,720
ADDY OSMANI: What Paul is saying
is that right after

381
00:16:33,720 --> 00:16:36,846
this, you can expect motherf'n
Chrome DevTools to come out.

382
00:16:36,846 --> 00:16:37,760
PAUL IRISH: Ah.

383
00:16:37,760 --> 00:16:39,260
Everyday.

384
00:16:39,260 --> 00:16:41,560
ADDY OSMANI: That's
what he's saying.

385
00:16:41,560 --> 00:16:42,150
PAUL IRISH: Yeah.

386
00:16:42,150 --> 00:16:44,600
ADDY OSMANI: So on the back of
that post, there's this really

387
00:16:44,600 --> 00:16:48,240
cool guy named Pascal Kremp
that started working on a

388
00:16:48,240 --> 00:16:51,540
little gallery of DevTools
themes, which I thought was

389
00:16:51,540 --> 00:16:54,830
cool, because like as much as
this stuff is up on GitHub

390
00:16:54,830 --> 00:16:56,410
it's hard to find it.

391
00:16:56,410 --> 00:16:59,390
And you need previews, you need
information about what

392
00:16:59,390 --> 00:17:00,880
exactly it actually
customizes.

393
00:17:00,880 --> 00:17:04,480
And so he put together this
website called devthemez, so

394
00:17:04,480 --> 00:17:08,770
D-E-V-T-H-E-M-E-Z dot com.

395
00:17:08,770 --> 00:17:12,099
And it just came out like this
week, but there are already

396
00:17:12,099 --> 00:17:14,040
sort of theme authors that have
been sticking up their

397
00:17:14,040 --> 00:17:14,960
themes on this.

398
00:17:14,960 --> 00:17:17,760
And you can just like go into
any theme, take a preview of

399
00:17:17,760 --> 00:17:20,554
some screenshots of it, go grab
the source and just apply

400
00:17:20,554 --> 00:17:22,609
it to your DevTools.

401
00:17:22,609 --> 00:17:25,400
And I thought it was
just kind of cool.

402
00:17:25,400 --> 00:17:27,150
So, yeah, check it out.

403
00:17:27,150 --> 00:17:27,410
PAUL IRISH: Yeah.

404
00:17:27,410 --> 00:17:29,780
And I guess maybe we should
point out that the way that

405
00:17:29,780 --> 00:17:32,130
this works is that
you're applying--

406
00:17:32,130 --> 00:17:33,110
there's a bunch of CSS--

407
00:17:33,110 --> 00:17:36,440
into your Chrome's
user stylesheet.

408
00:17:36,440 --> 00:17:36,960
ADDY OSMANI: Yes.

409
00:17:36,960 --> 00:17:40,430
PAUL IRISH: And it's just scoped
within the DevTools.

410
00:17:40,430 --> 00:17:44,480
But it's just CSS that you're
applying in there.

411
00:17:44,480 --> 00:17:48,040
And so you can do anything
you want.

412
00:17:48,040 --> 00:17:53,090
You could probably use some of
those text shadows that we

413
00:17:53,090 --> 00:17:58,695
showed earlier to really give
some umph to your tools.

414
00:17:58,695 --> 00:18:01,750
ADDY OSMANI: Definitely.

415
00:18:01,750 --> 00:18:03,950
PAUL IRISH: OK.

416
00:18:03,950 --> 00:18:06,050
A little bit more inspection
stuff.

417
00:18:06,050 --> 00:18:08,560
So I'm going to show
a few things.

418
00:18:08,560 --> 00:18:13,540
So with Chrome DevTools now
there's new support for some

419
00:18:13,540 --> 00:18:14,870
kind of emerging--

420
00:18:14,870 --> 00:18:17,170
well, have-emerged features--

421
00:18:17,170 --> 00:18:20,300
so Shadow DOM, IndexedDB,
and FileSystem.

422
00:18:20,300 --> 00:18:23,910
So Shadow DOM is emerging.

423
00:18:23,910 --> 00:18:26,850
It's a fundamental part of the
new web components spec.

424
00:18:26,850 --> 00:18:29,650
And I'm really excited about,
wow, how it's going to affect

425
00:18:29,650 --> 00:18:31,460
Web-Op development.

426
00:18:31,460 --> 00:18:34,780
But, in fact, a lot of the
things that are already inside

427
00:18:34,780 --> 00:18:36,155
the Chrome Developer Tools--

428
00:18:36,155 --> 00:18:36,770
I'm sorry.

429
00:18:36,770 --> 00:18:39,410
That's already inside of Chrome
and WebKit are built

430
00:18:39,410 --> 00:18:40,460
with Shadow DOM.

431
00:18:40,460 --> 00:18:44,200
So this is a video element.

432
00:18:44,200 --> 00:18:46,730

433
00:18:46,730 --> 00:18:52,600
I have some funny transforms
around it, just for fun, but

434
00:18:52,600 --> 00:18:55,610
really we're just dealing with
a video element here.

435
00:18:55,610 --> 00:18:58,810
I'm going to Inspect this.

436
00:18:58,810 --> 00:19:00,610
Oh.

437
00:19:00,610 --> 00:19:02,540
Come on.

438
00:19:02,540 --> 00:19:06,730
I'm using a Command Shift C,
which is my favorite keyboard

439
00:19:06,730 --> 00:19:10,930
shortcut for just diving right
into inspect mode immediately.

440
00:19:10,930 --> 00:19:15,260
And if I open up the video
element, I do see my source

441
00:19:15,260 --> 00:19:17,760
elements here, but I also
see Shadow-root.

442
00:19:17,760 --> 00:19:21,390
And so this is pretty cool,
because we dive in through

443
00:19:21,390 --> 00:19:26,500
these divs, and now you'll see
we have a button, an input

444
00:19:26,500 --> 00:19:31,780
type range, a button range,
and so the actual UI--

445
00:19:31,780 --> 00:19:35,280
this is the controls that
ship inside Chrome

446
00:19:35,280 --> 00:19:36,960
for the video element--

447
00:19:36,960 --> 00:19:42,290
this is just built with actual
elements with form controls.

448
00:19:42,290 --> 00:19:48,610
The input type range actually
has Shadow DOM in it as well.

449
00:19:48,610 --> 00:19:50,360
So it's just made out of divs.

450
00:19:50,360 --> 00:19:58,530
So this is a Shadow DOM that
ships inside WebKit, but this

451
00:19:58,530 --> 00:20:01,070
is available for everything.

452
00:20:01,070 --> 00:20:04,030
You can turn it on the same way
that you saw Addy turn on

453
00:20:04,030 --> 00:20:05,567
the SASS experiment earlier.

454
00:20:05,567 --> 00:20:08,310

455
00:20:08,310 --> 00:20:09,330
Now, let's see.

456
00:20:09,330 --> 00:20:11,200
This is some IndexedDB.

457
00:20:11,200 --> 00:20:13,120
So this is a little demo

458
00:20:13,120 --> 00:20:16,440
application that uses IndexedDB.

459
00:20:16,440 --> 00:20:21,030
And typically up until now there
hasn't been a good way

460
00:20:21,030 --> 00:20:25,600
to see what's actually stored in
my IndexedDB inside Chrome.

461
00:20:25,600 --> 00:20:30,000
So, as you can imagine,
now there is.

462
00:20:30,000 --> 00:20:34,400
We dive into Resources, and
inside the application we just

463
00:20:34,400 --> 00:20:36,600
have a bunch of items.

464
00:20:36,600 --> 00:20:37,870
There are descriptions--

465
00:20:37,870 --> 00:20:41,310
some and in a cart, some
are in a wish list.

466
00:20:41,310 --> 00:20:48,390
And I'm going to add a tablet
into my wish list.

467
00:20:48,390 --> 00:20:50,040
Cool?

468
00:20:50,040 --> 00:20:53,910
And now when I come down
here, see my IndexedDB?

469
00:20:53,910 --> 00:20:59,980
These are my data stores, one
of them, and wish list.

470
00:20:59,980 --> 00:21:02,990
Here Is my tablet.

471
00:21:02,990 --> 00:21:04,660
So it's just all my objects
that I have

472
00:21:04,660 --> 00:21:07,220
stored inside my IndexedDB.

473
00:21:07,220 --> 00:21:09,550
And it's available
to peruse here.

474
00:21:09,550 --> 00:21:15,860
And I can also filter
right upside here.

475
00:21:15,860 --> 00:21:17,710
The last one is FileSystem.

476
00:21:17,710 --> 00:21:21,240
So the FileSystem API allows
you to save real files and

477
00:21:21,240 --> 00:21:24,200
folders to the actual disk.

478
00:21:24,200 --> 00:21:26,950
This is great for very large
files, but you can

479
00:21:26,950 --> 00:21:27,670
use it with a lot.

480
00:21:27,670 --> 00:21:29,720
So let's see.

481
00:21:29,720 --> 00:21:34,740
With this little app, I
can create new folder.

482
00:21:34,740 --> 00:21:37,090
Hello?

483
00:21:37,090 --> 00:21:40,920
Awesome File TXT.

484
00:21:40,920 --> 00:21:46,550
And while I'm at it, I'll also
drag in a JavaScript file.

485
00:21:46,550 --> 00:21:51,580
And so this is just adding files
into my local FileSystem

486
00:21:51,580 --> 00:21:55,110
store, this app.

487
00:21:55,110 --> 00:21:59,130
And now I come over into
Resources, and we can see

488
00:21:59,130 --> 00:22:02,430
what's actually stored here--
the folder that I made, the

489
00:22:02,430 --> 00:22:07,850
image, the file, and then the
JavaScript and HTML that I

490
00:22:07,850 --> 00:22:09,000
just dragged in.

491
00:22:09,000 --> 00:22:11,870
So you immediately see what,
in fact, is stored there.

492
00:22:11,870 --> 00:22:14,520

493
00:22:14,520 --> 00:22:15,180
ADDY OSMANI: That's
really slick.

494
00:22:15,180 --> 00:22:15,640
PAUL IRISH: Yeah.

495
00:22:15,640 --> 00:22:16,190
It's hot.

496
00:22:16,190 --> 00:22:19,040
So if you're using some of these
advanced features, we

497
00:22:19,040 --> 00:22:21,340
want to make sure that we have
good developer support for you

498
00:22:21,340 --> 00:22:24,580
to understand how this
is behaving.

499
00:22:24,580 --> 00:22:26,710
So check those out.

500
00:22:26,710 --> 00:22:28,980
Addy, should we mentioned a
little bit about what's going

501
00:22:28,980 --> 00:22:30,820
on with Yeoman these days?

502
00:22:30,820 --> 00:22:31,300
ADDY OSMANI: Yeah.

503
00:22:31,300 --> 00:22:31,590
Yeah.

504
00:22:31,590 --> 00:22:32,370
Why not?

505
00:22:32,370 --> 00:22:35,400
So Yeoman just shipped
a new version quite

506
00:22:35,400 --> 00:22:39,660
recently, 0.9.4, I believe.

507
00:22:39,660 --> 00:22:42,860
And we've got a lot of work
going on at the moment, trying

508
00:22:42,860 --> 00:22:45,882
to work on Yeoman 1.0 and the
direction in which you want

509
00:22:45,882 --> 00:22:47,870
the project to take.

510
00:22:47,870 --> 00:22:50,330
So some of the things that we're
trying to look at doing

511
00:22:50,330 --> 00:22:53,760
are upstreaming, some of the
different Yeoman tasks that

512
00:22:53,760 --> 00:22:57,110
you guys are used to using,
some Grunt, so the broader

513
00:22:57,110 --> 00:22:59,630
Grunt community can
start using those.

514
00:22:59,630 --> 00:23:02,520
And we're trying to see what we
can do about making some of

515
00:23:02,520 --> 00:23:05,030
our toolings, so things like
our scaffolding, better

516
00:23:05,030 --> 00:23:07,440
available to broader parts
of the community.

517
00:23:07,440 --> 00:23:09,510
So we're going to try making
sure that if you're a Grunt

518
00:23:09,510 --> 00:23:11,750
user, a Yeoman user, you
can use those tools

519
00:23:11,750 --> 00:23:13,240
more recently together.

520
00:23:13,240 --> 00:23:15,750
And we're going to have some
more news about that stuff

521
00:23:15,750 --> 00:23:18,490
coming up in a future show.

522
00:23:18,490 --> 00:23:19,740
PAUL IRISH: Nice.

523
00:23:19,740 --> 00:23:21,700

524
00:23:21,700 --> 00:23:24,400
Addy, let's do some questions?

525
00:23:24,400 --> 00:23:25,070
ADDY OSMANI: Questions?

526
00:23:25,070 --> 00:23:25,520
OK.

527
00:23:25,520 --> 00:23:27,640
PAUL IRISH: We've got some
good ones that came in.

528
00:23:27,640 --> 00:23:29,100
We'll take a few of them.

529
00:23:29,100 --> 00:23:33,290
So let's see.

530
00:23:33,290 --> 00:23:34,990
We haven't read through
this before, so we'll

531
00:23:34,990 --> 00:23:35,340
just see how it goes.

532
00:23:35,340 --> 00:23:36,890
ADDY OSMANI: No, we haven't.

533
00:23:36,890 --> 00:23:37,390
PAUL IRISH: All right.

534
00:23:37,390 --> 00:23:39,650
The latest version of
Safari ships with a

535
00:23:39,650 --> 00:23:41,350
forked version of DevTools.

536
00:23:41,350 --> 00:23:43,390
Does it mean that Apple is
no longer involved in the

537
00:23:43,390 --> 00:23:46,260
development of standard WebKit
inspectors in collaboration

538
00:23:46,260 --> 00:23:50,410
between Chrome-Safari teams
in this matter?

539
00:23:50,410 --> 00:23:54,700
So, the way that it works is
that Inspector has a lot of

540
00:23:54,700 --> 00:23:56,950
parts, and there's a back end
of Inspector that has the

541
00:23:56,950 --> 00:24:01,100
instrumentation inside of
a WebKit, and then there

542
00:24:01,100 --> 00:24:02,130
is the front end.

543
00:24:02,130 --> 00:24:07,660
So Chrome DevTools, the front
end of Chrome DevTools is

544
00:24:07,660 --> 00:24:08,680
actually upstreamed.

545
00:24:08,680 --> 00:24:14,600
100% of it is actually present
in the WebKit.

546
00:24:14,600 --> 00:24:17,280
And so that's what's there.

547
00:24:17,280 --> 00:24:22,010
And Safari 6 went in a new
direction as far as its UI,

548
00:24:22,010 --> 00:24:24,260
and I think it's pretty
cool to see.

549
00:24:24,260 --> 00:24:27,180
And so the instrumentation
is still shared in the

550
00:24:27,180 --> 00:24:29,490
background.

551
00:24:29,490 --> 00:24:30,540
And there's still plenty of

552
00:24:30,540 --> 00:24:32,540
collaboration between the teams.

553
00:24:32,540 --> 00:24:35,470
New features that are coming
up, both teams are very

554
00:24:35,470 --> 00:24:38,680
interested in making sure that
we can improve the developer

555
00:24:38,680 --> 00:24:40,260
experience.

556
00:24:40,260 --> 00:24:41,350
And so things are good.

557
00:24:41,350 --> 00:24:45,040
You can just check out the
WebKit bug tracker.

558
00:24:45,040 --> 00:24:48,830
All new features are tracked
there, and you can hop on and

559
00:24:48,830 --> 00:24:52,330
see both teams working on
the same kind of stuff.

560
00:24:52,330 --> 00:24:55,080
So, yes, it's good.

561
00:24:55,080 --> 00:24:56,690
ADDY OSMANI: Cool.

562
00:24:56,690 --> 00:24:57,230
PAUL IRISH: All right.

563
00:24:57,230 --> 00:24:58,480
Jaruk asks--

564
00:24:58,480 --> 00:25:00,840

565
00:25:00,840 --> 00:25:02,490
ADDY OSMANI: A lot of these
are from Jaruk.

566
00:25:02,490 --> 00:25:02,690
Sorry.

567
00:25:02,690 --> 00:25:03,060
Go ahead.

568
00:25:03,060 --> 00:25:04,170
PAUL IRISH: Jaruk asks
good questions.

569
00:25:04,170 --> 00:25:05,810
Yeah, that's good.

570
00:25:05,810 --> 00:25:08,240
Is it possible to observe in
real time which callbacks are

571
00:25:08,240 --> 00:25:11,100
fired by DOM events?

572
00:25:11,100 --> 00:25:13,510
I often forget to unsubscribe
from events that are no longer

573
00:25:13,510 --> 00:25:16,330
needed, which causes them to
accumulate and slow down my

574
00:25:16,330 --> 00:25:17,580
app with time.

575
00:25:17,580 --> 00:25:20,074

576
00:25:20,074 --> 00:25:20,553
[SIGH]

577
00:25:20,553 --> 00:25:21,803
OK.

578
00:25:21,803 --> 00:25:24,110

579
00:25:24,110 --> 00:25:25,310
Yes.

580
00:25:25,310 --> 00:25:26,650
Yes.

581
00:25:26,650 --> 00:25:27,810
Yes.

582
00:25:27,810 --> 00:25:28,030
OK.

583
00:25:28,030 --> 00:25:32,680
So there's a few ways on this.

584
00:25:32,680 --> 00:25:40,430
So if I look at Chrome
DevTools and

585
00:25:40,430 --> 00:25:43,126
see if we get some--

586
00:25:43,126 --> 00:25:44,480
Yeah, nice.

587
00:25:44,480 --> 00:25:45,730
OK.

588
00:25:45,730 --> 00:25:48,170

589
00:25:48,170 --> 00:25:50,650
This is the Chrome DevTools
of these Inspector

590
00:25:50,650 --> 00:25:52,730
questions that I have.

591
00:25:52,730 --> 00:25:55,470
And I'm selecting the body
element right now here.

592
00:25:55,470 --> 00:25:58,320
And we can see all event
listeners that are registered

593
00:25:58,320 --> 00:26:01,250
for this element.

594
00:26:01,250 --> 00:26:05,430
And we can click into them to
identify exactly where it's

595
00:26:05,430 --> 00:26:05,990
coming from.

596
00:26:05,990 --> 00:26:07,990
Like I have a Chrome extension
that's registering to click on

597
00:26:07,990 --> 00:26:17,200
the document and then this
minified file that is also

598
00:26:17,200 --> 00:26:18,270
digging into things.

599
00:26:18,270 --> 00:26:21,900
So you can definitely
see what's bound.

600
00:26:21,900 --> 00:26:25,560
And then if you want to go
a little bit deeper, for

601
00:26:25,560 --> 00:26:34,030
instance, you can break
when event listeners

602
00:26:34,030 --> 00:26:36,850
are about to be fired.

603
00:26:36,850 --> 00:26:41,480
So let's say that I want
to identify on click

604
00:26:41,480 --> 00:26:42,750
what's going on.

605
00:26:42,750 --> 00:26:45,400
So let's see if I can do this.

606
00:26:45,400 --> 00:26:47,610
Mouse, click.

607
00:26:47,610 --> 00:26:50,140

608
00:26:50,140 --> 00:26:50,930
Yeah.

609
00:26:50,930 --> 00:26:51,600
Nice.

610
00:26:51,600 --> 00:26:53,030
ADDY OSMANI: Nice.

611
00:26:53,030 --> 00:26:54,250
PAUL IRISH: Very cool.

612
00:26:54,250 --> 00:26:56,900
So now we're breaking and we're
actually breaking inside

613
00:26:56,900 --> 00:26:58,540
of my event handler.

614
00:26:58,540 --> 00:26:59,430
I'm going to [? predify ?]

615
00:26:59,430 --> 00:27:01,470
this.

616
00:27:01,470 --> 00:27:02,290
Hope it works.

617
00:27:02,290 --> 00:27:02,670
There we go.

618
00:27:02,670 --> 00:27:03,200
Cool.

619
00:27:03,200 --> 00:27:03,510
All right.

620
00:27:03,510 --> 00:27:08,000
So now we're actually broken
inside of the event handler

621
00:27:08,000 --> 00:27:11,610
for this click, and
if I can just--

622
00:27:11,610 --> 00:27:14,870
I can hit Play, and if there was
another event handler that

623
00:27:14,870 --> 00:27:18,370
was bound to click for this
action, I would now be broken

624
00:27:18,370 --> 00:27:19,550
inside of that.

625
00:27:19,550 --> 00:27:22,180
So those are basically your two
good ways to get an idea

626
00:27:22,180 --> 00:27:30,330
of what's still bound
for those elements.

627
00:27:30,330 --> 00:27:32,370
ADDY OSMANI: I'll also add that
if you're having trouble

628
00:27:32,370 --> 00:27:35,930
with sort of event listeners or
handlers that aren't being

629
00:27:35,930 --> 00:27:39,390
unsubscribe so you're unbound,
you can also use our profiling

630
00:27:39,390 --> 00:27:41,350
tools to find those pain points
in your application to

631
00:27:41,350 --> 00:27:43,990
figure out where particular
amounts of memory are being

632
00:27:43,990 --> 00:27:45,520
used and so on.

633
00:27:45,520 --> 00:27:47,770
And we're going to try getting
out some better documentation

634
00:27:47,770 --> 00:27:50,500
about that stuff soon.

635
00:27:50,500 --> 00:27:52,770
PAUL IRISH: All right.

636
00:27:52,770 --> 00:27:54,940
Can you share some plans for
DevTools related to a

637
00:27:54,940 --> 00:27:56,540
responsive design?

638
00:27:56,540 --> 00:27:57,190
ADDY OSMANI: Yeah.

639
00:27:57,190 --> 00:27:59,580
I don't mind showing something
about this.

640
00:27:59,580 --> 00:27:59,824
PAUL IRISH: All right.

641
00:27:59,824 --> 00:27:59,950
Go ahead.

642
00:27:59,950 --> 00:28:00,760
ADDY OSMANI: I'm going
to share my

643
00:28:00,760 --> 00:28:02,730
screen again very quickly.

644
00:28:02,730 --> 00:28:03,020
Right.

645
00:28:03,020 --> 00:28:06,020
So we briefly mentioned last
week the idea of--

646
00:28:06,020 --> 00:28:08,400
if you go see Overrides panel,
so again if you've got

647
00:28:08,400 --> 00:28:12,780
Experiments enabled, you get
all these options, but I do

648
00:28:12,780 --> 00:28:14,890
believe most of these are
available and stable as well.

649
00:28:14,890 --> 00:28:18,320
But if you go to the Settings
tog and you go to Overrides,

650
00:28:18,320 --> 00:28:20,750
you can override a bunch of
stuff that will help you with

651
00:28:20,750 --> 00:28:23,580
your responsive design workflow,
including things

652
00:28:23,580 --> 00:28:24,730
like device metrics.

653
00:28:24,730 --> 00:28:27,160
So if you wanted to go and
override your screen

654
00:28:27,160 --> 00:28:29,680
resolution, if you wanted
to override your device

655
00:28:29,680 --> 00:28:32,800
orientation, and so on, so you
can get a feel for the

656
00:28:32,800 --> 00:28:37,820
different breakpoints in your
media query design flow, these

657
00:28:37,820 --> 00:28:39,020
tools can help with that.

658
00:28:39,020 --> 00:28:40,730
And if you go back to the
first episode of The

659
00:28:40,730 --> 00:28:43,600
Breakpoint, we actually preview
some of this stuff.

660
00:28:43,600 --> 00:28:45,570
But, yeah, there are definitely
some tools in there

661
00:28:45,570 --> 00:28:47,540
that will help you with your
responsive design.

662
00:28:47,540 --> 00:28:49,180
Do we have anything
more planned for

663
00:28:49,180 --> 00:28:50,430
responsive design, Paul?

664
00:28:50,430 --> 00:28:53,820

665
00:28:53,820 --> 00:28:56,110
PAUL IRISH: That's a good
summary of things.

666
00:28:56,110 --> 00:29:01,690
I will also point out that
normally the Chrome window, if

667
00:29:01,690 --> 00:29:06,730
you're just resizing it for
funsies, it will max--

668
00:29:06,730 --> 00:29:09,340
its midwidth will
be 400 pixels.

669
00:29:09,340 --> 00:29:13,390
A lot of people want to
go down to below 360.

670
00:29:13,390 --> 00:29:19,230
So if you just dock your
DevTools to the right using

671
00:29:19,230 --> 00:29:21,450
the bottom-left icon--

672
00:29:21,450 --> 00:29:22,940
ADDY OSMANI: Actually, Paul,
do you mind if I show that,

673
00:29:22,940 --> 00:29:25,230
because we've been getting a
lot of questions on Stack

674
00:29:25,230 --> 00:29:28,430
Overflow and its pitter lately
about how you properly dock

675
00:29:28,430 --> 00:29:30,480
these days in Canary?

676
00:29:30,480 --> 00:29:32,790
So we changed this recently.

677
00:29:32,790 --> 00:29:36,110
So one thing you used to be able
to find was sort of how

678
00:29:36,110 --> 00:29:38,170
to dock-to-right in
the settings.

679
00:29:38,170 --> 00:29:40,620
But we've changed this
now to be an icon.

680
00:29:40,620 --> 00:29:42,245
So I'm not sure if you
guys can see it.

681
00:29:42,245 --> 00:29:44,980
I'll bump this up as
much as I can.

682
00:29:44,980 --> 00:29:48,950
So in the left-hand corner, in
the bottom left-hand corner of

683
00:29:48,950 --> 00:29:52,670
the DevTools, if you click and
hold on the Layout Manager

684
00:29:52,670 --> 00:30:00,510
icon, it'll change the positions
of this stuff.

685
00:30:00,510 --> 00:30:03,570
It's actually gone and it's
expanded in my case.

686
00:30:03,570 --> 00:30:03,750
Oops.

687
00:30:03,750 --> 00:30:06,310
PAUL IRISH: Oh-oh.

688
00:30:06,310 --> 00:30:07,390
ADDY OSMANI: There we go.

689
00:30:07,390 --> 00:30:07,900
PAUL IRISH: There you go.

690
00:30:07,900 --> 00:30:09,600
ADDY OSMANI: So click
and hold.

691
00:30:09,600 --> 00:30:11,920
So click and hold on that icon,
and you'll be able to

692
00:30:11,920 --> 00:30:14,710
dock-to-right once again.

693
00:30:14,710 --> 00:30:17,970
So, yup, it's slightly
different, but it still works.

694
00:30:17,970 --> 00:30:18,830
Just the same.

695
00:30:18,830 --> 00:30:19,690
PAUL IRISH: Yup.

696
00:30:19,690 --> 00:30:24,470
So another improvement that just
landed is it'll remember

697
00:30:24,470 --> 00:30:26,530
what your last date was, and so
you can just keep clicking

698
00:30:26,530 --> 00:30:29,990
it to toggle between bottom
and right, for instance.

699
00:30:29,990 --> 00:30:31,970
And we're also going to be--

700
00:30:31,970 --> 00:30:34,665
I think it landed like
yesterday-- is--

701
00:30:34,665 --> 00:30:35,030
ADDY OSMANI: Yeah.

702
00:30:35,030 --> 00:30:35,960
PAUL IRISH: --per
tab settings.

703
00:30:35,960 --> 00:30:39,040
So let's say in one application
you really want to

704
00:30:39,040 --> 00:30:42,810
see it, your DevTools, on the
bottom, and in the next tab

705
00:30:42,810 --> 00:30:45,560
over you really want it
positioned on the right, and

706
00:30:45,560 --> 00:30:48,190
now you can manage
that just fine.

707
00:30:48,190 --> 00:30:48,610
ADDY OSMANI: Yup.

708
00:30:48,610 --> 00:30:50,130
PAUL IRISH: But for responsive
design, what I was going to

709
00:30:50,130 --> 00:30:53,850
say was that when it is docked
to right, you can just change

710
00:30:53,850 --> 00:30:57,080
the split between your DevTools
and your page and

711
00:30:57,080 --> 00:31:00,230
just bring it all the way down
to like 100 pixels wide.

712
00:31:00,230 --> 00:31:03,360
So that helps a lot when you're
testing media queries,

713
00:31:03,360 --> 00:31:05,600
for instance.

714
00:31:05,600 --> 00:31:06,500
All right.

715
00:31:06,500 --> 00:31:08,890
We'll do one last question.

716
00:31:08,890 --> 00:31:10,890
This is also coming
in from Jaruk.

717
00:31:10,890 --> 00:31:17,310
And he asks why support for
SASS and not just agnostic

718
00:31:17,310 --> 00:31:22,630
[INAUDIBLE] processor support?

719
00:31:22,630 --> 00:31:28,450
So right now SASS was chosen
first, just to kind of like

720
00:31:28,450 --> 00:31:30,950
test things out, see that it
works, and also SASS already

721
00:31:30,950 --> 00:31:33,720
had two different debug modes
where it outputted both line

722
00:31:33,720 --> 00:31:36,600
numbers and a lot of debug
information, and Chrome

723
00:31:36,600 --> 00:31:37,940
DevTools supports
both of those.

724
00:31:37,940 --> 00:31:41,260
So you can compile SASS with
Enable Line Numbers, or I

725
00:31:41,260 --> 00:31:44,140
think it's called Enable Debug
Info, and Chrome DevTools is

726
00:31:44,140 --> 00:31:46,980
able to pick up the line number
mappings from that.

727
00:31:46,980 --> 00:31:51,360
In the future, we would like
to see SASS output a proper

728
00:31:51,360 --> 00:31:53,810
source map.

729
00:31:53,810 --> 00:31:56,790
And so it can use Source
Map Version 3.

730
00:31:56,790 --> 00:32:01,030
And that's like where things
will be going.

731
00:32:01,030 --> 00:32:04,580
If you had LESS or Stylus and
are able to generate a source

732
00:32:04,580 --> 00:32:09,910
map, then support for them
is really no problem.

733
00:32:09,910 --> 00:32:13,530
And source maps are totally
language agnostic.

734
00:32:13,530 --> 00:32:18,180
And so, yeah, I think that's
a summary there.

735
00:32:18,180 --> 00:32:21,500

736
00:32:21,500 --> 00:32:22,330
Oh.

737
00:32:22,330 --> 00:32:24,410
One more thing.

738
00:32:24,410 --> 00:32:28,080
So there's one last feature
inside Chrome DevTools that is

739
00:32:28,080 --> 00:32:28,710
pretty new.

740
00:32:28,710 --> 00:32:30,330
I wanted to show it.

741
00:32:30,330 --> 00:32:34,260
And this is Styled
Console Messages.

742
00:32:34,260 --> 00:32:36,535
ADDY OSMANI: Prepare to
have your mind blown.

743
00:32:36,535 --> 00:32:37,000
PAUL IRISH: Shosh.

744
00:32:37,000 --> 00:32:37,690
Wow.

745
00:32:37,690 --> 00:32:38,910
OK.

746
00:32:38,910 --> 00:32:44,850
Typically, your Console log,
it logs, it's good, but

747
00:32:44,850 --> 00:32:46,860
sometimes you want a little
bit more pizazz, and

748
00:32:46,860 --> 00:32:49,390
I don't blame you.

749
00:32:49,390 --> 00:32:52,200
So if we take a look at how this
works, if I just paste in

750
00:32:52,200 --> 00:32:55,720
these two guys, then--

751
00:32:55,720 --> 00:32:56,120
Yeah.

752
00:32:56,120 --> 00:32:57,816
Check that out.

753
00:32:57,816 --> 00:32:58,550
ADDY OSMANI: Wow.

754
00:32:58,550 --> 00:32:59,750
PAUL IRISH: Yeah.

755
00:32:59,750 --> 00:33:04,780
So Firebug has supported this
for a little bit of time.

756
00:33:04,780 --> 00:33:10,130
And so we do a percent C, and
then we take the last argument

757
00:33:10,130 --> 00:33:13,330
that's sent to log, and this
is just a bunch of CSS

758
00:33:13,330 --> 00:33:15,470
that we send over.

759
00:33:15,470 --> 00:33:17,790
And that just applies
into there.

760
00:33:17,790 --> 00:33:20,940
ADDY OSMANI: And I can include
any CSS that I want in there.

761
00:33:20,940 --> 00:33:21,670
PAUL IRISH: Yeah.

762
00:33:21,670 --> 00:33:22,710
There's no--

763
00:33:22,710 --> 00:33:24,550
I don't think there's
a blacklist or

764
00:33:24,550 --> 00:33:27,350
a white list, so--

765
00:33:27,350 --> 00:33:30,310
ADDY OSMANI: You can see where
we're going with this, right?

766
00:33:30,310 --> 00:33:30,430
PAUL IRISH: All right.

767
00:33:30,430 --> 00:33:32,050
So I'm going to bring up
one that I prepared

768
00:33:32,050 --> 00:33:34,560
a little bit ago.

769
00:33:34,560 --> 00:33:37,020
I have it over in my Snippets.

770
00:33:37,020 --> 00:33:40,270
And so let's take a short
little message.

771
00:33:40,270 --> 00:33:44,020
And instead of a background in
color, we're going to kind of

772
00:33:44,020 --> 00:33:48,140
turn it up a little bit, add a
bit more CSS, and now we're

773
00:33:48,140 --> 00:33:50,220
just going to use straight
up Console dot log.

774
00:33:50,220 --> 00:33:54,070
Now, to send this to the
Console, I can just click this

775
00:33:54,070 --> 00:33:57,725
Run icon down at the bottom.

776
00:33:57,725 --> 00:34:00,530
Ah, yeah.

777
00:34:00,530 --> 00:34:01,780
This is my Console.

778
00:34:01,780 --> 00:34:04,600

779
00:34:04,600 --> 00:34:05,590
It's pretty good looking.

780
00:34:05,590 --> 00:34:08,620
You can do anything
you want here.

781
00:34:08,620 --> 00:34:13,199
And I think it's really
important to

782
00:34:13,199 --> 00:34:16,000
communicate with pizazz.

783
00:34:16,000 --> 00:34:17,880
ADDY OSMANI: Gradients, with
gradients, is what he's

784
00:34:17,880 --> 00:34:19,880
saying, with as many gradients
as possible.

785
00:34:19,880 --> 00:34:21,170
PAUL IRISH: I like it.

786
00:34:21,170 --> 00:34:21,770
All right.

787
00:34:21,770 --> 00:34:25,179
I think that's it for this
episode of The Breakpoint.

788
00:34:25,179 --> 00:34:25,420
ADDY OSMANI: That's it.

789
00:34:25,420 --> 00:34:26,480
MODERATOR: We do have
some late-breaking

790
00:34:26,480 --> 00:34:27,810
questions on YouTube.

791
00:34:27,810 --> 00:34:28,130
PAUL IRISH: Oh, yeah?

792
00:34:28,130 --> 00:34:28,560
MODERATOR: Yeah.

793
00:34:28,560 --> 00:34:31,730
So what they want to know is
if you guys are allowing

794
00:34:31,730 --> 00:34:35,790
developers to use Yeoman
with existing apps like

795
00:34:35,790 --> 00:34:36,010
PAUL IRISH: Ah.

796
00:34:36,010 --> 00:34:36,810
Good question.

797
00:34:36,810 --> 00:34:37,070
Yup.

798
00:34:37,070 --> 00:34:40,480
So we play this a little bit.

799
00:34:40,480 --> 00:34:42,420
Addy, do you want
to tackle this?

800
00:34:42,420 --> 00:34:42,780
ADDY OSMANI: Sure.

801
00:34:42,780 --> 00:34:46,310
So we've had a lot of feedback
from developers in different

802
00:34:46,310 --> 00:34:49,840
communities, from PHP, from
Rails, from [INAUDIBLE], and

803
00:34:49,840 --> 00:34:52,380
everyone wants to be able to
use some sort of backend in

804
00:34:52,380 --> 00:34:54,030
Yeoman, because if you're
building a web app, you're

805
00:34:54,030 --> 00:34:55,949
going to have to have some sort
of backend that's for

806
00:34:55,949 --> 00:35:00,420
data search, right, or just
being a server side processor?

807
00:35:00,420 --> 00:35:03,300
Now, what we're going to be
doing in the coming months is

808
00:35:03,300 --> 00:35:05,610
trying to improve your workflow
so that's it's easier

809
00:35:05,610 --> 00:35:08,315
for you to hook into a different
backend, or hook

810
00:35:08,315 --> 00:35:09,840
into a different
build process.

811
00:35:09,840 --> 00:35:12,160
If you've already got sort of
an existing backend build

812
00:35:12,160 --> 00:35:15,530
process for your Rudy app
or your Rails app, or

813
00:35:15,530 --> 00:35:19,180
whathaveyou, this is something
that we're still working on at

814
00:35:19,180 --> 00:35:20,050
the moment.

815
00:35:20,050 --> 00:35:22,860
But there are people that are
sort of already hacking on

816
00:35:22,860 --> 00:35:27,960
this with Yeoman, and we're
going to do our best to share

817
00:35:27,960 --> 00:35:30,960
as much of that stuff as
possible on the Yeoman group.

818
00:35:30,960 --> 00:35:34,920
But I think given another few
months, the Yeoman story with

819
00:35:34,920 --> 00:35:37,350
other backends is going to
be much, much better.

820
00:35:37,350 --> 00:35:37,950
PAUL IRISH: Yes.

821
00:35:37,950 --> 00:35:43,260
You can google Yeoman PHP
and see an attempt by

822
00:35:43,260 --> 00:35:44,895
Felix, Felix Gnass.

823
00:35:44,895 --> 00:35:45,200
ADDY OSMANI: Yes.

824
00:35:45,200 --> 00:35:47,720
PAUL IRISH: He wrote a little
bit of node middleware that

825
00:35:47,720 --> 00:35:52,230
will pull in a PHP server
for the preview server.

826
00:35:52,230 --> 00:35:53,900
The challenge here is that we
really want to be able to

827
00:35:53,900 --> 00:35:58,360
still provide the LiveReload
functionality in the preview

828
00:35:58,360 --> 00:36:01,190
environment, so we have the live
recompilation of SASS,

829
00:36:01,190 --> 00:36:02,570
copy script, et cetera--

830
00:36:02,570 --> 00:36:05,070
the LiveReload, so that the
iteration flow is really

831
00:36:05,070 --> 00:36:09,600
solid, but we're still able
to host this using

832
00:36:09,600 --> 00:36:10,710
your standard backend.

833
00:36:10,710 --> 00:36:13,140
So we just want to make sure
that the way that this is

834
00:36:13,140 --> 00:36:17,480
implemented scales extremely
well and still gives you that

835
00:36:17,480 --> 00:36:20,180
sort of iteration workflow
that you want.

836
00:36:20,180 --> 00:36:20,450
ADDY OSMANI: Yeah.

837
00:36:20,450 --> 00:36:21,530
And we want to do it right.

838
00:36:21,530 --> 00:36:24,955
We realize that you guys have
got very different stacks all

839
00:36:24,955 --> 00:36:27,450
over the place, and so we want
to do our best to make sure we

840
00:36:27,450 --> 00:36:29,974
spur as much of the stuff as
possible if you guys want to

841
00:36:29,974 --> 00:36:30,610
hack at it.

842
00:36:30,610 --> 00:36:30,950
PAUL IRISH: Cool.

843
00:36:30,950 --> 00:36:32,270
All right.

844
00:36:32,270 --> 00:36:32,860
I guess that will do it.

845
00:36:32,860 --> 00:36:34,670
So thank you guys very
much for watching.

846
00:36:34,670 --> 00:36:35,340
See you next time.

847
00:36:35,340 --> 00:36:36,590
ADDY OSMANI: Thank you.

848
00:36:36,590 --> 00:36:45,560

849
00:36:45,560 --> 00:36:46,810
[MUSIC PLAYING]

850
00:36:46,810 --> 00:37:09,000

