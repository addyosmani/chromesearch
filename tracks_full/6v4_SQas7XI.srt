1
00:00:00,000 --> 00:00:10,360

2
00:00:10,360 --> 00:00:10,640
PETE LEPAGE: Hey.

3
00:00:10,640 --> 00:00:13,210
Welcome, everybody, to
another exciting

4
00:00:13,210 --> 00:00:15,960
Chrome Apps Office Hours.

5
00:00:15,960 --> 00:00:18,250
This week, we have a really
special show.

6
00:00:18,250 --> 00:00:22,370
Paul and I decided that rather
than go into some really crazy

7
00:00:22,370 --> 00:00:26,950
kind of deep topic right before
the holidays, we wanted

8
00:00:26,950 --> 00:00:28,870
to just show you a bunch
of really cool stuff.

9
00:00:28,870 --> 00:00:31,360
We wanted to just hang out with
you, answer some of your

10
00:00:31,360 --> 00:00:35,240
questions, dive into some of
the things that you thought

11
00:00:35,240 --> 00:00:38,500
might be interesting that we
thought have been interesting

12
00:00:38,500 --> 00:00:41,680
in the last six months since
we launched Chrome Apps.

13
00:00:41,680 --> 00:00:44,860
So with that, I'll let Paul say
hi and introduce yourself.

14
00:00:44,860 --> 00:00:47,320
Paul, do you want
to say hi and--

15
00:00:47,320 --> 00:00:47,480
PAUL KINLAN: Hi.

16
00:00:47,480 --> 00:00:48,730
I'm Paul.

17
00:00:48,730 --> 00:00:50,410

18
00:00:50,410 --> 00:00:52,531
I'm based in London.

19
00:00:52,531 --> 00:00:53,866
Yeah, and you're in Mountain
View today.

20
00:00:53,866 --> 00:00:55,120
That's pretty cool.

21
00:00:55,120 --> 00:00:55,410
PETE LEPAGE: Yeah.

22
00:00:55,410 --> 00:00:56,230
It's kind of neat.

23
00:00:56,230 --> 00:00:57,130
Normally we do this.

24
00:00:57,130 --> 00:00:58,330
I'm in New York.

25
00:00:58,330 --> 00:00:59,970
Paul's in London.

26
00:00:59,970 --> 00:01:02,980
This week, I'm in
Mountain View.

27
00:01:02,980 --> 00:01:05,190
We have the illustrious
Louis Gray helping us

28
00:01:05,190 --> 00:01:06,150
produce this event.

29
00:01:06,150 --> 00:01:09,550
So kind of a fun way
to be doing things.

30
00:01:09,550 --> 00:01:10,950
So let's start.

31
00:01:10,950 --> 00:01:13,790
I want to show you a Chrome app
that I put together this

32
00:01:13,790 --> 00:01:17,760
morning very special
for this week.

33
00:01:17,760 --> 00:01:20,960
Because I just was thinking, as
I was on my way into work

34
00:01:20,960 --> 00:01:24,145
this morning, I'm like, huh,
what's going on this week?

35
00:01:24,145 --> 00:01:25,720
Well, I'm in Mountain View.

36
00:01:25,720 --> 00:01:27,490
I've got to get a couple
of things done.

37
00:01:27,490 --> 00:01:28,910
And I was like, oh, right.

38
00:01:28,910 --> 00:01:31,410
There's this really cool event
happening this week.

39
00:01:31,410 --> 00:01:34,600
So I decided I was going to sit
down and pull together a

40
00:01:34,600 --> 00:01:37,080
real quick Chrome app.

41
00:01:37,080 --> 00:01:38,370
So let's go to my screen.

42
00:01:38,370 --> 00:01:39,810
I'm going to pull this guy up.

43
00:01:39,810 --> 00:01:41,950
And this is a little
Chrome app.

44
00:01:41,950 --> 00:01:44,400
You can pull this up in
the Chrome Web Store.

45
00:01:44,400 --> 00:01:48,040
I'll post a link to this
in our post afterwards.

46
00:01:48,040 --> 00:01:51,780
But just in case you were
curious how long it was until

47
00:01:51,780 --> 00:01:56,810
the end of the world, until
December 21 at 11:11 UTC, we

48
00:01:56,810 --> 00:02:01,180
are now two days, 18 hours, six
minutes, and 56 seconds--

49
00:02:01,180 --> 00:02:03,450
oh, 55 seconds-- oh, 50-- oh--

50
00:02:03,450 --> 00:02:04,790
anyways, you get point.

51
00:02:04,790 --> 00:02:05,670
Until the end of the world.

52
00:02:05,670 --> 00:02:06,890
And I feel fine.

53
00:02:06,890 --> 00:02:08,350
PAUL KINLAN: Does it
do time zones?

54
00:02:08,350 --> 00:02:10,270
PETE LEPAGE: So yes, that takes
into account time zones.

55
00:02:10,270 --> 00:02:14,760
So same number of hours
left between us, Paul.

56
00:02:14,760 --> 00:02:18,160
So if I don't see you
next week, Paul--

57
00:02:18,160 --> 00:02:23,690
well, actually, our Chrome Apps
Office Hours next week

58
00:02:23,690 --> 00:02:25,350
would happen to fall
on Christmas Day.

59
00:02:25,350 --> 00:02:27,580
I don't plan on working.

60
00:02:27,580 --> 00:02:30,160
So I won't see you next
week this time.

61
00:02:30,160 --> 00:02:33,340
But I'll see you in the
new year as long as

62
00:02:33,340 --> 00:02:34,160
this doesn't happen.

63
00:02:34,160 --> 00:02:35,173
How does that sound?

64
00:02:35,173 --> 00:02:35,920
PAUL KINLAN: Yeah.

65
00:02:35,920 --> 00:02:36,150
Good.

66
00:02:36,150 --> 00:02:37,390
I think it sounds good.

67
00:02:37,390 --> 00:02:38,890
PETE LEPAGE: Cool.

68
00:02:38,890 --> 00:02:41,420
Well Paul, I know you had
a couple of apps that

69
00:02:41,420 --> 00:02:42,740
you wanted to show.

70
00:02:42,740 --> 00:02:44,340
I've got a couple more that
I want to talk about.

71
00:02:44,340 --> 00:02:46,820
And we'll take your questions.

72
00:02:46,820 --> 00:02:49,850
Louis, if we could put the
questions, the moderator link

73
00:02:49,850 --> 00:02:52,810
up, so if people have questions
and they want to ask

74
00:02:52,810 --> 00:02:54,820
questions, please post
your questions to

75
00:02:54,820 --> 00:02:55,950
our moderator link.

76
00:02:55,950 --> 00:02:59,120
And Paul and I will take
those as we go along

77
00:02:59,120 --> 00:03:00,790
and take your questions.

78
00:03:00,790 --> 00:03:02,710
So with that, Paul, I'll
pass it over to you.

79
00:03:02,710 --> 00:03:05,590
And you can talk about a couple,
and then I'll come

80
00:03:05,590 --> 00:03:07,700
back and do a couple more.

81
00:03:07,700 --> 00:03:08,090
PAUL KINLAN: Yeah, cool.

82
00:03:08,090 --> 00:03:11,430
So today is all about showing
you some cool things that have

83
00:03:11,430 --> 00:03:13,700
been built with Chrome Apps.

84
00:03:13,700 --> 00:03:16,160
Obviously, it's, not completely
public yet, in the

85
00:03:16,160 --> 00:03:19,090
sense that normal consumers
can't re-download these

86
00:03:19,090 --> 00:03:20,510
applications and install
them into Chrome.

87
00:03:20,510 --> 00:03:23,130
But you can still do some
really cool stuff.

88
00:03:23,130 --> 00:03:24,730
All of these are available
in the Web Store.

89
00:03:24,730 --> 00:03:26,710
Most of these are already
available in the Web Store,

90
00:03:26,710 --> 00:03:31,080
which I think was two weeks ago,
I think, where basically,

91
00:03:31,080 --> 00:03:32,940
we just enabled it so that you
could actually upload these

92
00:03:32,940 --> 00:03:34,500
and host them and get your
users to test the

93
00:03:34,500 --> 00:03:35,780
applications.

94
00:03:35,780 --> 00:03:38,725
And one of them which we can't
actually get installed just

95
00:03:38,725 --> 00:03:41,730
yet is this news reader, which
we had actually built for

96
00:03:41,730 --> 00:03:44,140
Google I/O. But there's
a lot of changes that

97
00:03:44,140 --> 00:03:46,000
went on in the WebView.

98
00:03:46,000 --> 00:03:47,320
Well, it wasn't even called
WebView at the time.

99
00:03:47,320 --> 00:03:49,012
It was called the browser tag.

100
00:03:49,012 --> 00:03:51,050
There were a lot of changes that
kind of were happening.

101
00:03:51,050 --> 00:03:54,560
And we didn't have this great
situation of where we could go

102
00:03:54,560 --> 00:03:55,410
off and show this application.

103
00:03:55,410 --> 00:03:58,375
But in the past couple of weeks,
the WebView API has

104
00:03:58,375 --> 00:03:59,960
settled down quite a bit.

105
00:03:59,960 --> 00:04:01,650
And I want to show you
this application.

106
00:04:01,650 --> 00:04:02,306
It's pretty cool.

107
00:04:02,306 --> 00:04:05,050
PETE LEPAGE: So Paul, before you
go there, I want to just

108
00:04:05,050 --> 00:04:07,830
touch on two little things that
you commented on that I

109
00:04:07,830 --> 00:04:09,010
think are really important.

110
00:04:09,010 --> 00:04:11,460
One, you can start uploading
your apps to

111
00:04:11,460 --> 00:04:12,560
the Chrome Web Store.

112
00:04:12,560 --> 00:04:16,060
So if you're building a Chrome
App today, you can upload it

113
00:04:16,060 --> 00:04:17,110
to the Chrome Web Store.

114
00:04:17,110 --> 00:04:21,209
But there are a couple of
restrictions on that, right?

115
00:04:21,209 --> 00:04:24,150
PAUL KINLAN: You can't upload
experimental APIs just yet,

116
00:04:24,150 --> 00:04:25,440
because-- well, you've
never been able to.

117
00:04:25,440 --> 00:04:26,870
But you can't do that.

118
00:04:26,870 --> 00:04:30,070
Identity doesn't work properly
and WebView doesn't work.

119
00:04:30,070 --> 00:04:31,840
But they'll come out of
experimental soon.

120
00:04:31,840 --> 00:04:34,400
And you'll be happy, and you'll
be able to upload.

121
00:04:34,400 --> 00:04:35,240
PETE LEPAGE: Right.

122
00:04:35,240 --> 00:04:39,810
And then the other key thing is
that if I go search for one

123
00:04:39,810 --> 00:04:41,480
of the apps that you've
uploaded, Paul--

124
00:04:41,480 --> 00:04:42,170
actually, where--

125
00:04:42,170 --> 00:04:44,570
Paul, are you on this
side of me or are--

126
00:04:44,570 --> 00:04:45,640
you're on one side of me.

127
00:04:45,640 --> 00:04:46,420
So here--

128
00:04:46,420 --> 00:04:49,230
Paul-- that way.

129
00:04:49,230 --> 00:04:51,960
If you upload it, users
can't find it.

130
00:04:51,960 --> 00:04:55,510
They have to actually
go and know the URL.

131
00:04:55,510 --> 00:04:58,440
And it's like Chrome Web
Store dot something,

132
00:04:58,440 --> 00:04:59,510
dot something, dot--

133
00:04:59,510 --> 00:05:00,470
really big--

134
00:05:00,470 --> 00:05:00,870
hang on.

135
00:05:00,870 --> 00:05:02,040
Let me make sure
I'm on screen--

136
00:05:02,040 --> 00:05:05,980
really big long URL, slash
something, slash something.

137
00:05:05,980 --> 00:05:08,040
So the best thing to do
if you want to share

138
00:05:08,040 --> 00:05:09,510
these with your friends--

139
00:05:09,510 --> 00:05:13,030
upload them, use a link
shortener, and give the

140
00:05:13,030 --> 00:05:14,230
shortened link to
your friends.

141
00:05:14,230 --> 00:05:16,290
So that way they can easily
go in and grab it.

142
00:05:16,290 --> 00:05:18,150
PAUL KINLAN: Yeah, exactly.

143
00:05:18,150 --> 00:05:18,860
That's it.

144
00:05:18,860 --> 00:05:21,045
Once we launch this fully,
you'll be able to search them,

145
00:05:21,045 --> 00:05:23,470
and they'll be aggregated
properly inside the Web Store.

146
00:05:23,470 --> 00:05:25,990
But right now, it's still
experimental.

147
00:05:25,990 --> 00:05:28,010
We're still learning about how
to you, as developer, want to

148
00:05:28,010 --> 00:05:30,080
interact with the Web Store,
and how users will want to

149
00:05:30,080 --> 00:05:32,930
download the applications as
well, which I think we can

150
00:05:32,930 --> 00:05:35,330
show more stuff in a later
episode [INAUDIBLE].

151
00:05:35,330 --> 00:05:37,070
PETE LEPAGE: The only other
thing I want to point out for

152
00:05:37,070 --> 00:05:39,130
folks who are watching today--

153
00:05:39,130 --> 00:05:44,020
there are still a couple of bugs
around what's required

154
00:05:44,020 --> 00:05:44,720
and what's not.

155
00:05:44,720 --> 00:05:48,740
So it may say something's not
required when it actually is.

156
00:05:48,740 --> 00:05:50,630
I think that's the way
most of the bugs are.

157
00:05:50,630 --> 00:05:52,100
It'll tell you, oh,
it's not required.

158
00:05:52,100 --> 00:05:54,020
You go to hit Publish, and
it comes back and says

159
00:05:54,020 --> 00:05:56,420
[BUZZER SOUND], you've got
to go put this in.

160
00:05:56,420 --> 00:05:59,360
PAUL KINLAN: Yeah, the flow is
not that great at the moment.

161
00:05:59,360 --> 00:06:00,000
It will get better.

162
00:06:00,000 --> 00:06:01,120
PETE LEPAGE: And we're
working on that.

163
00:06:01,120 --> 00:06:03,715
So please make sure you tell us
about those kinds of things

164
00:06:03,715 --> 00:06:05,870
if you do find them.

165
00:06:05,870 --> 00:06:06,710
PAUL KINLAN: Yeah.

166
00:06:06,710 --> 00:06:08,750
So should I show you
this application?

167
00:06:08,750 --> 00:06:09,040
PETE LEPAGE: Yeah.

168
00:06:09,040 --> 00:06:10,130
Let's have a look.

169
00:06:10,130 --> 00:06:11,230
PAUL KINLAN: So this
is really cool.

170
00:06:11,230 --> 00:06:13,530
I really like this application,
because you can

171
00:06:13,530 --> 00:06:15,520
basically query Google News.

172
00:06:15,520 --> 00:06:18,332
All this data's coming from
Google News, the RSS feed and

173
00:06:18,332 --> 00:06:19,550
Atom feeds.

174
00:06:19,550 --> 00:06:20,770
It's completely unofficial.

175
00:06:20,770 --> 00:06:22,420
It's like an application
that you would

176
00:06:22,420 --> 00:06:24,500
build as a normal developer.

177
00:06:24,500 --> 00:06:25,970
But it's really cool because--

178
00:06:25,970 --> 00:06:27,460
let's have a look at something
that's not-- shouldn't

179
00:06:27,460 --> 00:06:28,865
[INAUDIBLE] the dark ages.

180
00:06:28,865 --> 00:06:30,330
You can open up an article.

181
00:06:30,330 --> 00:06:31,860
Then this opens up
the WebView.

182
00:06:31,860 --> 00:06:34,700
And when the WebView
works, which--

183
00:06:34,700 --> 00:06:35,550
something has happened.

184
00:06:35,550 --> 00:06:37,080
It's not quite working
just yet.

185
00:06:37,080 --> 00:06:38,120
PETE LEPAGE: Uh oh.

186
00:06:38,120 --> 00:06:39,250
Damn it.

187
00:06:39,250 --> 00:06:41,170
PAUL KINLAN: Yeah, so what would
happen normally is that

188
00:06:41,170 --> 00:06:44,360
the actual content would come
into this application here and

189
00:06:44,360 --> 00:06:45,270
be displayed.

190
00:06:45,270 --> 00:06:47,120
And the really nice thing is if
you look on the left-hand

191
00:06:47,120 --> 00:06:49,640
side, you'll see like a picture
of Nelson Mandela.

192
00:06:49,640 --> 00:06:51,210
It's kind of like slightly
grayed out and blurred.

193
00:06:51,210 --> 00:06:52,130
There we are.

194
00:06:52,130 --> 00:06:53,100
It's loaded up.

195
00:06:53,100 --> 00:06:53,700
It's pretty cool.

196
00:06:53,700 --> 00:06:54,760
I think it's probably our
network connection's a little

197
00:06:54,760 --> 00:06:56,768
bit crazy at the moment.

198
00:06:56,768 --> 00:06:57,480
You can press Escape.

199
00:06:57,480 --> 00:06:58,360
And you get out.

200
00:06:58,360 --> 00:06:59,120
There's articles.

201
00:06:59,120 --> 00:06:59,690
It's pretty cool.

202
00:06:59,690 --> 00:07:01,040
Scroll down.

203
00:07:01,040 --> 00:07:02,640
There's a whole lot of
really nice stuff.

204
00:07:02,640 --> 00:07:04,370
And I'm going to tell you
about this image.

205
00:07:04,370 --> 00:07:05,460
And these are all
remote images.

206
00:07:05,460 --> 00:07:07,140
And I'll show you-- well,
I say I'll show you.

207
00:07:07,140 --> 00:07:09,780
I'll tell you about a little
framework that we've built

208
00:07:09,780 --> 00:07:12,330
which enables you to download
images that are hosted on the

209
00:07:12,330 --> 00:07:15,470
web and store them in the
local HTML5 file cache.

210
00:07:15,470 --> 00:07:17,520
PETE LEPAGE: Because you can't
just say, image with a source

211
00:07:17,520 --> 00:07:19,977
equals something else or source

212
00:07:19,977 --> 00:07:21,990
equals some remote server.

213
00:07:21,990 --> 00:07:22,130
PAUL KINLAN: Yeah.

214
00:07:22,130 --> 00:07:23,160
Exactly right.

215
00:07:23,160 --> 00:07:24,530
So you can't do that.

216
00:07:24,530 --> 00:07:27,580
But we've enabled it so you can,
in a way, a little bit.

217
00:07:27,580 --> 00:07:29,860
And we've got a library that's
on GitHub as well.

218
00:07:29,860 --> 00:07:33,800
And then you can do things like
filter by top stories,

219
00:07:33,800 --> 00:07:35,590
and they work as well.

220
00:07:35,590 --> 00:07:36,910
I really feel my network's
a little bit slow on this

221
00:07:36,910 --> 00:07:40,500
machine at the moment.

222
00:07:40,500 --> 00:07:42,010
Wow.

223
00:07:42,010 --> 00:07:42,140
There we are.

224
00:07:42,140 --> 00:07:42,940
Let's go back to that one.

225
00:07:42,940 --> 00:07:45,060
So the good thing is, even if
I have not got an internet

226
00:07:45,060 --> 00:07:47,710
connection and something's going
crazy, all the articles

227
00:07:47,710 --> 00:07:50,710
and information is cached so
that it's all basically stored

228
00:07:50,710 --> 00:07:51,550
in index db.

229
00:07:51,550 --> 00:07:55,020
You query the categories for the
list of articles that you

230
00:07:55,020 --> 00:07:56,460
want inside a particular one.

231
00:07:56,460 --> 00:07:58,620
And then you can do nice things
like, for instance,

232
00:07:58,620 --> 00:08:01,130
flip between different
countries, as well.

233
00:08:01,130 --> 00:08:04,130
So if you're Spanish and you
want Spanish news, you'll go

234
00:08:04,130 --> 00:08:08,440
off and query the Spanish
Google News sites.

235
00:08:08,440 --> 00:08:08,860
So, yeah.

236
00:08:08,860 --> 00:08:09,180
It's pretty cool.

237
00:08:09,180 --> 00:08:09,660
It's pretty nice.

238
00:08:09,660 --> 00:08:13,630
We've had it around since
Google I/O, at least.

239
00:08:13,630 --> 00:08:16,850
But until WebView can start to
stabilize a little bit, I've

240
00:08:16,850 --> 00:08:18,790
not pushed it too much.

241
00:08:18,790 --> 00:08:21,100
But the source code is on our
GitHub project as well.

242
00:08:21,100 --> 00:08:22,210
So you can go out and check
out how we've done

243
00:08:22,210 --> 00:08:22,556
everything, as well.

244
00:08:22,556 --> 00:08:23,250
So it's pretty cool.

245
00:08:23,250 --> 00:08:29,800
PETE LEPAGE: And that's on the
GitHub Google Chrome slash

246
00:08:29,800 --> 00:08:32,240
Chrome App Samples place?

247
00:08:32,240 --> 00:08:32,539
PAUL KINLAN: Yeah.

248
00:08:32,539 --> 00:08:33,659
Exactly right.

249
00:08:33,659 --> 00:08:34,909
So let me--

250
00:08:34,909 --> 00:08:37,100

251
00:08:37,100 --> 00:08:38,100
PETE LEPAGE: All right.

252
00:08:38,100 --> 00:08:39,070
PAUL KINLAN: I'll go
get it in a minute.

253
00:08:39,070 --> 00:08:40,150
PETE LEPAGE: We can--

254
00:08:40,150 --> 00:08:43,070
actually, Louis, if we can put
that lower third up on, there

255
00:08:43,070 --> 00:08:45,740
should be the samples one.

256
00:08:45,740 --> 00:08:48,560
So you should be able
to see it somewhere.

257
00:08:48,560 --> 00:08:51,810
It should be, like, right
down about there.

258
00:08:51,810 --> 00:08:53,520
So you can go see that.

259
00:08:53,520 --> 00:08:55,540
PAUL KINLAN: So can I show
you guys something as

260
00:08:55,540 --> 00:08:57,320
well about the code?

261
00:08:57,320 --> 00:09:01,470
So this is the actual commit
that I did the other day,

262
00:09:01,470 --> 00:09:03,700
which if I go full screen,
should make it a little bit

263
00:09:03,700 --> 00:09:05,930
easier to read.

264
00:09:05,930 --> 00:09:07,670
So this is the commit I did
the other day to the news

265
00:09:07,670 --> 00:09:08,240
reader app.

266
00:09:08,240 --> 00:09:08,360
And it's

267
00:09:08,360 --> 00:09:12,430
googlechrome/newsreaderapp on GitHub.

268
00:09:12,430 --> 00:09:13,930
So basically, it doesn't look
like I've done much.

269
00:09:13,930 --> 00:09:16,850
But essentially, I've removed
a whole lot of code that we

270
00:09:16,850 --> 00:09:20,820
normally use to actually go and
get the remote image from

271
00:09:20,820 --> 00:09:24,260
the web, which is normally
a bit XML HTTP request.

272
00:09:24,260 --> 00:09:27,710
We store it in the file system
using the file, the .js.

273
00:09:27,710 --> 00:09:32,390
And there's actually quite a
lot of code just to do a

274
00:09:32,390 --> 00:09:34,580
relatively small process.

275
00:09:34,580 --> 00:09:35,590
So we've removed all this.

276
00:09:35,590 --> 00:09:37,120
And there was a couple
of places it was in.

277
00:09:37,120 --> 00:09:39,190
It was code that was duplicated
all over the place.

278
00:09:39,190 --> 00:09:42,820
And we replaced it-- if we
get to the right place--

279
00:09:42,820 --> 00:09:44,050
with this thing called RAL.

280
00:09:44,050 --> 00:09:47,600
And basically it's a Resource
Asset Loader, which is a

281
00:09:47,600 --> 00:09:48,630
project that we've written.

282
00:09:48,630 --> 00:09:50,890
It's also on our
GitHub project.

283
00:09:50,890 --> 00:09:53,670
I've enabled debug because I
want more information at the

284
00:09:53,670 --> 00:09:54,390
back of it.

285
00:09:54,390 --> 00:09:55,890
I do this thing called QStart.

286
00:09:55,890 --> 00:09:58,210
And now what happens is,
whenever you add something to

287
00:09:58,210 --> 00:10:00,730
the resource asset loader,
essentially what will happen

288
00:10:00,730 --> 00:10:02,540
is it will go to say, well,
I need to go and

289
00:10:02,540 --> 00:10:04,470
download this asset.

290
00:10:04,470 --> 00:10:08,820
It will bring it in, cache it in
the local HTML file system,

291
00:10:08,820 --> 00:10:10,450
and then you'll be able
to consistently

292
00:10:10,450 --> 00:10:11,360
access it as well.

293
00:10:11,360 --> 00:10:12,020
So--

294
00:10:12,020 --> 00:10:12,360
PETE LEPAGE: Oh, interesting.

295
00:10:12,360 --> 00:10:12,430
So--

296
00:10:12,430 --> 00:10:13,340
PAUL KINLAN: Every
time you ac--

297
00:10:13,340 --> 00:10:13,660
PETE LEPAGE: Does it--

298
00:10:13,660 --> 00:10:15,340
PAUL KINLAN: Every time you
access that image, it will go

299
00:10:15,340 --> 00:10:17,250
and get it from the
file system.

300
00:10:17,250 --> 00:10:19,230
It's got a whole lot of other
nice things about caching.

301
00:10:19,230 --> 00:10:22,200
So there's cache headers that
say cache is only--

302
00:10:22,200 --> 00:10:22,510
yeah.

303
00:10:22,510 --> 00:10:25,370
So if it says cache is only for
24 hours, it'll cache it

304
00:10:25,370 --> 00:10:26,170
for 24 hours.

305
00:10:26,170 --> 00:10:28,170
But it will still use it
if you're offline.

306
00:10:28,170 --> 00:10:30,800
The actual asset loader, as
well, is pretty cool.

307
00:10:30,800 --> 00:10:32,840
And one of my colleagues,
Paul Lewis, did

308
00:10:32,840 --> 00:10:35,140
all the work on this.

309
00:10:35,140 --> 00:10:37,170
It's pretty cool, because
it detects when

310
00:10:37,170 --> 00:10:38,170
you're online and offline.

311
00:10:38,170 --> 00:10:41,450
And if you have requests for
images, like in the queue--

312
00:10:41,450 --> 00:10:42,680
say, 100 requests--

313
00:10:42,680 --> 00:10:44,250
and maybe something [INAUDIBLE]
to actually get to

314
00:10:44,250 --> 00:10:46,320
a service to get the image.

315
00:10:46,320 --> 00:10:48,850
And you're actually offline,
what it does is it puts it

316
00:10:48,850 --> 00:10:51,180
into a background process where
basically, when you go

317
00:10:51,180 --> 00:10:54,010
back online, it'll then restart
it up and then go

318
00:10:54,010 --> 00:10:54,920
fetch the articles [INAUDIBLE]

319
00:10:54,920 --> 00:10:55,535
PETE LEPAGE: Oh, that's
brilliant.

320
00:10:55,535 --> 00:10:56,790
PAUL KINLAN: --that you need.

321
00:10:56,790 --> 00:10:57,720
So it's kind of like--

322
00:10:57,720 --> 00:10:58,160
PETE LEPAGE: This is the one--

323
00:10:58,160 --> 00:10:58,550
sorry.

324
00:10:58,550 --> 00:11:00,640
You said it was written
by Paul Lewis.

325
00:11:00,640 --> 00:11:00,800
PAUL KINLAN: Yeah.

326
00:11:00,800 --> 00:11:04,130
Paul Lewis and our team wrote
this about three months ago.

327
00:11:04,130 --> 00:11:05,490
We've only just published
it this week.

328
00:11:05,490 --> 00:11:06,390
PETE LEPAGE: Awesome.

329
00:11:06,390 --> 00:11:07,220
That's super cool.

330
00:11:07,220 --> 00:11:11,270
I know for a lot of folks who
are building news reader apps,

331
00:11:11,270 --> 00:11:15,930
who are building apps that
consume a large amount of data

332
00:11:15,930 --> 00:11:19,410
that sits locally on the user's
computers or sits--

333
00:11:19,410 --> 00:11:21,910
that you want to be able to pull
down, this is a really

334
00:11:21,910 --> 00:11:22,780
important thing.

335
00:11:22,780 --> 00:11:27,550
Because otherwise, it's great
to just pull down JSON data.

336
00:11:27,550 --> 00:11:28,710
That's all awesome.

337
00:11:28,710 --> 00:11:30,850
But if you want to pull images,
you want to pull

338
00:11:30,850 --> 00:11:37,040
video, you want to pull any
binary data, you can

339
00:11:37,040 --> 00:11:38,230
base 64 encode it.

340
00:11:38,230 --> 00:11:42,450
But that adds, what, I think
it's like 30%, if I remember

341
00:11:42,450 --> 00:11:44,300
right, to the download size.

342
00:11:44,300 --> 00:11:47,880
Plus storage size, plus it's
just a pain in the butt to

343
00:11:47,880 --> 00:11:49,310
encode and decode.

344
00:11:49,310 --> 00:11:50,770
This means it works.

345
00:11:50,770 --> 00:11:55,160
And with all those caching
features, that's pretty slick.

346
00:11:55,160 --> 00:11:55,640
PAUL KINLAN: Yeah.

347
00:11:55,640 --> 00:11:56,935
It's pretty cool.

348
00:11:56,935 --> 00:12:00,190
The other thing, as well, that
he does, he's got this idea

349
00:12:00,190 --> 00:12:01,060
for a manifest.

350
00:12:01,060 --> 00:12:03,390
And you can host the manifest
on a server.

351
00:12:03,390 --> 00:12:08,620
And what will happen is if you
request that manifest, it will

352
00:12:08,620 --> 00:12:11,140
go and get the manifest, get the
list of images and assets

353
00:12:11,140 --> 00:12:12,420
that you need.

354
00:12:12,420 --> 00:12:14,860
And then you can use it so you
can proactively cache things

355
00:12:14,860 --> 00:12:16,910
in a WebWork or in
the background.

356
00:12:16,910 --> 00:12:19,870
Or use an alarm to wake your
application up at 7:00 in the

357
00:12:19,870 --> 00:12:22,680
morning, go get the manifest,
and then download all of the

358
00:12:22,680 --> 00:12:24,690
stuff ready for it to be
consumed later on.

359
00:12:24,690 --> 00:12:25,880
PETE LEPAGE: Oh, perfect.

360
00:12:25,880 --> 00:12:27,640
PAUL KINLAN: There's actually a
whole lot more stuff in this

361
00:12:27,640 --> 00:12:30,450
than we've got, actually, even
the time just tell you now.

362
00:12:30,450 --> 00:12:32,680
PETE LEPAGE: Yeah, we should
definitely cover this

363
00:12:32,680 --> 00:12:34,215
come the new year.

364
00:12:34,215 --> 00:12:35,730
This is really powerful.

365
00:12:35,730 --> 00:12:37,880
PAUL KINLAN: We only launched it
last week, and we're still

366
00:12:37,880 --> 00:12:38,660
doing a whole lot of stuff.

367
00:12:38,660 --> 00:12:40,810
There's a couple of bugs, a
couple of issues that we want

368
00:12:40,810 --> 00:12:42,880
to try and solve.

369
00:12:42,880 --> 00:12:45,110
So let me just show you the
next two pieces of code.

370
00:12:45,110 --> 00:12:48,090
We have this one here,
which is data source,

371
00:12:48,090 --> 00:12:48,780
which is on the image.

372
00:12:48,780 --> 00:12:50,262
This is just basically a
data attribute where

373
00:12:50,262 --> 00:12:52,000
we encode the source.

374
00:12:52,000 --> 00:12:55,570
And then what happens
is the framework--

375
00:12:55,570 --> 00:12:56,500
It doesn't do it just yet.

376
00:12:56,500 --> 00:12:59,630
But when it detects an image
inside the page that's got a

377
00:12:59,630 --> 00:13:02,980
data source attribute, the idea
is it'll be able to say,

378
00:13:02,980 --> 00:13:04,540
you know what, I need to go
and queue that to go and

379
00:13:04,540 --> 00:13:05,010
request it.

380
00:13:05,010 --> 00:13:05,940
It doesn't do that quite now.

381
00:13:05,940 --> 00:13:09,280
You have to programmatically
go and request the image.

382
00:13:09,280 --> 00:13:10,660
But it's only two or three
lines of code.

383
00:13:10,660 --> 00:13:11,490
It's not too much.

384
00:13:11,490 --> 00:13:13,780
But we want to get it so that
you can just drop an image

385
00:13:13,780 --> 00:13:16,500
into the page, and all the
sudden, it starts to work.

386
00:13:16,500 --> 00:13:19,000
The really cool thing about this
as well, you can specify

387
00:13:19,000 --> 00:13:20,190
placeholder images.

388
00:13:20,190 --> 00:13:22,900
So you might have--

389
00:13:22,900 --> 00:13:27,090
say you were the "New York
Times" or someone like that.

390
00:13:27,090 --> 00:13:29,530
You might want to put your logo
inside a special image,

391
00:13:29,530 --> 00:13:32,180
which is always displayed
until the actual

392
00:13:32,180 --> 00:13:33,980
image asset comes in.

393
00:13:33,980 --> 00:13:35,720
So there's a couple of things
you can do around that.

394
00:13:35,720 --> 00:13:37,855
But if we look here, these,
like, four or five lines of

395
00:13:37,855 --> 00:13:42,360
code here, this is literally
all I need to actually make

396
00:13:42,360 --> 00:13:44,230
the requests to the
remote service.

397
00:13:44,230 --> 00:13:46,640
So I basically detect
an image in the DOM.

398
00:13:46,640 --> 00:13:49,460
I say, go and get me a remote
image and add it to the queue.

399
00:13:49,460 --> 00:13:53,040
And autoStart, so it will
automatically get the image.

400
00:13:53,040 --> 00:13:54,970
And then the system will just
work out what to do, because I

401
00:13:54,970 --> 00:13:58,360
passed an element object into
the remote image object.

402
00:13:58,360 --> 00:14:01,720
It will then basically go and
say, you know, once I've got

403
00:14:01,720 --> 00:14:04,030
the image, I'll go and attach it
to the actual image itself

404
00:14:04,030 --> 00:14:04,715
so it's displayed.

405
00:14:04,715 --> 00:14:06,795
If it's only cached in the file
system, it will just go

406
00:14:06,795 --> 00:14:08,720
and display that cached
version as well.

407
00:14:08,720 --> 00:14:09,650
So it's pretty cool.

408
00:14:09,650 --> 00:14:11,690
And we're going to try and get
it so you don't even have to

409
00:14:11,690 --> 00:14:12,700
have these two lines of code.

410
00:14:12,700 --> 00:14:14,696
But if you really want to kind
of manage that yourself in

411
00:14:14,696 --> 00:14:17,370
your own process, then that
should be completely possible

412
00:14:17,370 --> 00:14:18,190
for you to do as well.

413
00:14:18,190 --> 00:14:18,930
PETE LEPAGE: Nice.

414
00:14:18,930 --> 00:14:20,430
PAUL KINLAN: And that's
actually all the code.

415
00:14:20,430 --> 00:14:24,790
Most of the actual change in
the project was actually me

416
00:14:24,790 --> 00:14:25,533
removing code.

417
00:14:25,533 --> 00:14:26,630
PETE LEPAGE: Nice.

418
00:14:26,630 --> 00:14:30,190
So this saved a good chunk of
code then and made things

419
00:14:30,190 --> 00:14:31,800
easier for you to use.

420
00:14:31,800 --> 00:14:32,560
PAUL KINLAN: Yeah, exactly.

421
00:14:32,560 --> 00:14:35,060
And the actual app itself
right now uses it.

422
00:14:35,060 --> 00:14:37,380
So the Chrome News App
is using this.

423
00:14:37,380 --> 00:14:40,510
There is a bug here where if we
request this image twice,

424
00:14:40,510 --> 00:14:41,330
it goes blank.

425
00:14:41,330 --> 00:14:43,930
So we can see a couple of the
images are white out.

426
00:14:43,930 --> 00:14:45,340
But we can fix that.

427
00:14:45,340 --> 00:14:46,155
That should be pretty cool.

428
00:14:46,155 --> 00:14:48,300
But I encourage everyone to
go and check it out and

429
00:14:48,300 --> 00:14:48,880
see what it's like.

430
00:14:48,880 --> 00:14:50,050
So it's pretty cool.

431
00:14:50,050 --> 00:14:51,590
PETE LEPAGE: I may actually
have to go

432
00:14:51,590 --> 00:14:53,120
play with this myself.

433
00:14:53,120 --> 00:14:54,380
PAUL KINLAN: Yeah.

434
00:14:54,380 --> 00:14:55,790
I added this in last week.

435
00:14:55,790 --> 00:14:56,470
So I thought it would
be good to show

436
00:14:56,470 --> 00:14:57,890
you guys what's happening.

437
00:14:57,890 --> 00:14:59,660
PETE LEPAGE: Yeah, definitely.

438
00:14:59,660 --> 00:15:02,410
PAUL KINLAN: Do you want to
go onto my next app, or--

439
00:15:02,410 --> 00:15:03,810
PETE LEPAGE: Actually,
Louis, can we get the

440
00:15:03,810 --> 00:15:06,290
questions link put up?

441
00:15:06,290 --> 00:15:10,100
And I want to show one of the
apps that I did for some of

442
00:15:10,100 --> 00:15:11,080
the GDL stuff.

443
00:15:11,080 --> 00:15:14,610
And then we'll pop
back over to you.

444
00:15:14,610 --> 00:15:17,780
So one of the things that with
all of these GDL sessions that

445
00:15:17,780 --> 00:15:20,560
we have, is you'll notice
there's those lower thirds

446
00:15:20,560 --> 00:15:22,960
that get created and put
on all the bottoms.

447
00:15:22,960 --> 00:15:24,780
And they're pretty
much consistent.

448
00:15:24,780 --> 00:15:28,170
They say the show name and the
link to the particular thing.

449
00:15:28,170 --> 00:15:30,560
And oh, look, there's
my name down there.

450
00:15:30,560 --> 00:15:34,690
Well in doing those kinds of
things, every time we did

451
00:15:34,690 --> 00:15:38,130
that, we always has open up,
like, Photoshop, or you had to

452
00:15:38,130 --> 00:15:40,080
open up some kind of
graphic editor.

453
00:15:40,080 --> 00:15:43,760
You had to go in, you'd make
a change, save that one.

454
00:15:43,760 --> 00:15:45,390
Make the change, save
the next one.

455
00:15:45,390 --> 00:15:47,040
Make the change, save
the next one.

456
00:15:47,040 --> 00:15:50,740
And it really got to be
a pain to go and do.

457
00:15:50,740 --> 00:15:54,140
So one of the things that I
wanted to do is try and make

458
00:15:54,140 --> 00:15:57,060
that simpler for me and simpler
for all of the people

459
00:15:57,060 --> 00:15:59,530
who are doing these
GDL things.

460
00:15:59,530 --> 00:16:01,220
I was like, well how
do I do that

461
00:16:01,220 --> 00:16:03,500
using images and graphics?

462
00:16:03,500 --> 00:16:05,620
And as I was thinking
about it.

463
00:16:05,620 --> 00:16:08,870
I was like, well, I guess what I
could do is I could create a

464
00:16:08,870 --> 00:16:11,130
bunch of divs and
do it that way.

465
00:16:11,130 --> 00:16:12,570
So that was one option.

466
00:16:12,570 --> 00:16:14,920
But then the other thing, I was
like, well, I've got this

467
00:16:14,920 --> 00:16:18,560
stuff as transparent
PNGs to begin with.

468
00:16:18,560 --> 00:16:23,450
So I could use a canvas, go
place everything on, apply the

469
00:16:23,450 --> 00:16:29,250
text that I want just using the
draw text in canvas, and

470
00:16:29,250 --> 00:16:30,880
then save it as a PNG.

471
00:16:30,880 --> 00:16:32,520
So I went and wrote this app.

472
00:16:32,520 --> 00:16:33,580
So I'll bring my app up.

473
00:16:33,580 --> 00:16:37,560
And Louis, if we can bring
my app up on screen.

474
00:16:37,560 --> 00:16:38,830
You'll see that--

475
00:16:38,830 --> 00:16:41,690
let me get rid of this so that
we don't have this guy up.

476
00:16:41,690 --> 00:16:44,400
And I guess we don't need my end
of the world app anymore.

477
00:16:44,400 --> 00:16:47,760
So we've got this GDL lower
third generator.

478
00:16:47,760 --> 00:16:50,960
So basically, what it lets me
do is, I can go and type in

479
00:16:50,960 --> 00:16:52,090
name of the show I want.

480
00:16:52,090 --> 00:16:54,250
So hey, we're Chrome Apps.

481
00:16:54,250 --> 00:16:58,320
And I can put in my name,
so Pete LePage.

482
00:16:58,320 --> 00:17:01,170
If I want to center something,
I can put a

483
00:17:01,170 --> 00:17:01,960
bunch of other names.

484
00:17:01,960 --> 00:17:05,920
So on this one I want Pete and
I want Paul, so I separate

485
00:17:05,920 --> 00:17:08,220
them with semicolons.

486
00:17:08,220 --> 00:17:11,050
I can put in all of the links
to our moderator--

487
00:17:11,050 --> 00:17:12,270
everything.

488
00:17:12,270 --> 00:17:15,010
I can choose what different
styles I want.

489
00:17:15,010 --> 00:17:19,000
And then what I did was,
it just uses--

490
00:17:19,000 --> 00:17:23,710
I created a generator call that
goes in, generates each

491
00:17:23,710 --> 00:17:27,180
individual PNG.

492
00:17:27,180 --> 00:17:31,870
And then it saves those PNGs
as transparent PNGs.

493
00:17:31,870 --> 00:17:36,820
And then I used really cool
zip JavaScript library, so

494
00:17:36,820 --> 00:17:40,040
that when I go and hit Generate
here, it gives me

495
00:17:40,040 --> 00:17:41,560
that ability to download.

496
00:17:41,560 --> 00:17:44,970
So I'll save it here
on my desktop.

497
00:17:44,970 --> 00:17:48,960
And here in a sec--

498
00:17:48,960 --> 00:17:50,520
OK, well, it won't save it
to my desktop this time.

499
00:17:50,520 --> 00:17:52,270
Let's try that once more.

500
00:17:52,270 --> 00:17:54,470
Save, desktop, there we go.

501
00:17:54,470 --> 00:17:58,529

502
00:17:58,529 --> 00:17:59,920
Is it hiding on my desktop
somewhere?

503
00:17:59,920 --> 00:18:00,100
All right.

504
00:18:00,100 --> 00:18:01,920
Here, I'll do it this way.

505
00:18:01,920 --> 00:18:02,610
Desktop.

506
00:18:02,610 --> 00:18:03,510
There it is.

507
00:18:03,510 --> 00:18:05,580
So sure enough, there's
the ZIP file.

508
00:18:05,580 --> 00:18:09,150
If I open that up, there's
all my downloads files.

509
00:18:09,150 --> 00:18:16,730
And now, I've suddenly got all
of my lower thirds generated

510
00:18:16,730 --> 00:18:19,560
so that I don't have to go and
recreate every one every

511
00:18:19,560 --> 00:18:20,350
single time.

512
00:18:20,350 --> 00:18:23,080
It's a quick, easy way for me
to be able to do these.

513
00:18:23,080 --> 00:18:26,310
So if you're looking at ways to
create graphics or create

514
00:18:26,310 --> 00:18:29,870
images, this is another tool
where if you're just having to

515
00:18:29,870 --> 00:18:33,700
consistently redo things over
and over again, this was a

516
00:18:33,700 --> 00:18:35,850
really easy way to be
able to do this.

517
00:18:35,850 --> 00:18:37,210
I was talking to Louis
yesterday.

518
00:18:37,210 --> 00:18:37,990
I was showing him the app.

519
00:18:37,990 --> 00:18:39,340
He was like, that's awesome.

520
00:18:39,340 --> 00:18:42,610
But I need one that's just
a nice simple one--

521
00:18:42,610 --> 00:18:45,430
and I didn't tell it to create
this, but like where it just

522
00:18:45,430 --> 00:18:47,230
has the lower third
without any names.

523
00:18:47,230 --> 00:18:50,260
So I went in, added a
quick one of those.

524
00:18:50,260 --> 00:18:53,570
And now we have an easy way
that we can generate those

525
00:18:53,570 --> 00:18:57,650
lower thirds without having
to do anything crazy.

526
00:18:57,650 --> 00:18:59,700
So Paul, I'll pass it
back over to you.

527
00:18:59,700 --> 00:19:01,490
And you can show you next one.

528
00:19:01,490 --> 00:19:01,970
PAUL KINLAN: Yeah, cool.

529
00:19:01,970 --> 00:19:03,710
So this one is from--

530
00:19:03,710 --> 00:19:05,520
well, let me get his
name, actually.

531
00:19:05,520 --> 00:19:06,730
Anyway, I'll get
it in a minute.

532
00:19:06,730 --> 00:19:09,920
But there's a third-party
developer, who has actually

533
00:19:09,920 --> 00:19:10,810
done some really cool stuff.

534
00:19:10,810 --> 00:19:12,810
He's tried to make his
own application.

535
00:19:12,810 --> 00:19:13,960
And he's uploaded
it to the store.

536
00:19:13,960 --> 00:19:16,380
It's called Clean CSS.

537
00:19:16,380 --> 00:19:17,720
I think the best thing to
do is we'll try and get

538
00:19:17,720 --> 00:19:19,620
the link later on.

539
00:19:19,620 --> 00:19:19,820
PETE LEPAGE: Yeah.

540
00:19:19,820 --> 00:19:21,080
We can add the links.

541
00:19:21,080 --> 00:19:25,900
We'll do a post after today's
show, as well as I'll try and

542
00:19:25,900 --> 00:19:30,230
add the comments to the YouTube
video, if you want to

543
00:19:30,230 --> 00:19:32,580
check those out.

544
00:19:32,580 --> 00:19:33,940
PAUL KINLAN: It's pretty nice.

545
00:19:33,940 --> 00:19:37,020
You do this thing, and you
put this in, and--

546
00:19:37,020 --> 00:19:39,040
MALE SPEAKER: Paul, before you
continue, is it easier that

547
00:19:39,040 --> 00:19:40,680
you could bump that font up?

548
00:19:40,680 --> 00:19:41,540
I know it's going to be
hard for our viewers

549
00:19:41,540 --> 00:19:42,470
to check that out.

550
00:19:42,470 --> 00:19:44,090
PAUL KINLAN: So this is actually
a problem we've got

551
00:19:44,090 --> 00:19:47,540
inside-- generally inside Chrome
Apps, is that it's

552
00:19:47,540 --> 00:19:49,650
actually hard to
bump the font.

553
00:19:49,650 --> 00:19:51,850
So the normal things that
we have don't work.

554
00:19:51,850 --> 00:19:55,090

555
00:19:55,090 --> 00:19:56,520
PETE LEPAGE: That's a
really great point.

556
00:19:56,520 --> 00:19:58,840
I believe there's a
bug filed on that.

557
00:19:58,840 --> 00:20:03,090
If there's not a bug filed,
please go file one--

558
00:20:03,090 --> 00:20:04,720
new.crbug.com--

559
00:20:04,720 --> 00:20:06,790
and let us know so that
we can get it.

560
00:20:06,790 --> 00:20:09,372
And if it's not filed-- or if
it is filed, just make sure

561
00:20:09,372 --> 00:20:12,430
you go star it so that the
developers know that this is a

562
00:20:12,430 --> 00:20:13,840
big thing we want fixed.

563
00:20:13,840 --> 00:20:15,000
PAUL KINLAN: Yeah.

564
00:20:15,000 --> 00:20:17,370
But the general idea behind
this is that it takes some

565
00:20:17,370 --> 00:20:21,460
relatively large CSS files and
then [INAUDIBLE] down into

566
00:20:21,460 --> 00:20:23,050
something that's
a lot smaller.

567
00:20:23,050 --> 00:20:24,320
It's got some very
nice things.

568
00:20:24,320 --> 00:20:25,420
You've got Copy to Clipboard.

569
00:20:25,420 --> 00:20:26,640
And I don't know whether you'll
be able to see this

570
00:20:26,640 --> 00:20:28,730
properly, but press
Copy to Clipboard.

571
00:20:28,730 --> 00:20:31,390
Makes everything smaller, blurs
it out, and then sends

572
00:20:31,390 --> 00:20:34,130
it to the clipboard, which
if we then put it back

573
00:20:34,130 --> 00:20:37,010
in, there we go.

574
00:20:37,010 --> 00:20:38,500
There, it's been minified in.

575
00:20:38,500 --> 00:20:39,450
So it's pretty cool, right?

576
00:20:39,450 --> 00:20:44,810
It's like taking some of your
[INAUDIBLE] data, minified it,

577
00:20:44,810 --> 00:20:45,790
copied it to the clipboard.

578
00:20:45,790 --> 00:20:49,070
And these things you can't quite
do in the normal web

579
00:20:49,070 --> 00:20:49,650
applications.

580
00:20:49,650 --> 00:20:52,260
That's pretty nice.

581
00:20:52,260 --> 00:20:53,760
I'll give you the guy's name
who actually wrote this,

582
00:20:53,760 --> 00:20:55,670
because I've actually
forgotten right now.

583
00:20:55,670 --> 00:20:57,210
PETE LEPAGE: Sorry about that.

584
00:20:57,210 --> 00:20:58,140
PAUL KINLAN: But I want to show
you a couple of other

585
00:20:58,140 --> 00:21:01,910
applications as well, because
they're pretty cool.

586
00:21:01,910 --> 00:21:03,420
We talk about this one quite
a lot, but I use

587
00:21:03,420 --> 00:21:04,010
this all the time.

588
00:21:04,010 --> 00:21:08,980
This is the IRC app
that we've got.

589
00:21:08,980 --> 00:21:11,150
That's also in the store.

590
00:21:11,150 --> 00:21:13,480
If you actually type
in [? "CIRC ?]

591
00:21:13,480 --> 00:21:16,230
Chrome" to Google, you'll be to
find it, because it's been

592
00:21:16,230 --> 00:21:18,910
indexed because people
have linked to it.

593
00:21:18,910 --> 00:21:20,580
But the source is available
on GitHub as well,

594
00:21:20,580 --> 00:21:21,040
and you can do it.

595
00:21:21,040 --> 00:21:23,260
And this is using normal
native sockets.

596
00:21:23,260 --> 00:21:27,260
So Does Liverpool is a place
that I work at in Liverpool.

597
00:21:27,260 --> 00:21:31,410
So let me just say "hello,
everyone." Oh wow, caps lock.

598
00:21:31,410 --> 00:21:34,510
"Hello, everyone." They
might reply with

599
00:21:34,510 --> 00:21:35,620
something nice or not nice.

600
00:21:35,620 --> 00:21:37,050
I don't quite know.

601
00:21:37,050 --> 00:21:38,680
PETE LEPAGE: That's the
wonderful thing

602
00:21:38,680 --> 00:21:41,150
of live to air broadcast.

603
00:21:41,150 --> 00:21:42,190
All right.

604
00:21:42,190 --> 00:21:43,930
Hopefully they'll be nice.

605
00:21:43,930 --> 00:21:44,870
PAUL KINLAN: But it's
pretty cool.

606
00:21:44,870 --> 00:21:49,197
If we go to the actual code, if
we get rid of this little

607
00:21:49,197 --> 00:21:52,960
bit to the side, it's
normal HTML.

608
00:21:52,960 --> 00:21:53,720
The source, as well--
you probably

609
00:21:53,720 --> 00:21:54,700
can't see it very well.

610
00:21:54,700 --> 00:21:56,240
But this is just [INAUDIBLE]

611
00:21:56,240 --> 00:21:57,590
that they chrome.socket.

612
00:21:57,590 --> 00:22:00,690
Let's have a look.

613
00:22:00,690 --> 00:22:01,940
[INAUDIBLE].

614
00:22:01,940 --> 00:22:07,420

615
00:22:07,420 --> 00:22:08,540
That's all there is.

616
00:22:08,540 --> 00:22:09,300
It's pretty crazy.

617
00:22:09,300 --> 00:22:10,230
They've written the API.

618
00:22:10,230 --> 00:22:12,390
They just used a normal
socket interface.

619
00:22:12,390 --> 00:22:14,880
It's no more than just normal
basic JavaScript.

620
00:22:14,880 --> 00:22:15,800
It's pretty nice.

621
00:22:15,800 --> 00:22:17,980
PETE LEPAGE: Nice.

622
00:22:17,980 --> 00:22:19,570
PAUL KINLAN: So I have
another app.

623
00:22:19,570 --> 00:22:20,680
Should we show another app?

624
00:22:20,680 --> 00:22:21,710
PETE LEPAGE: So let's
show one more app.

625
00:22:21,710 --> 00:22:25,380
And then we have a couple
questions in our queue.

626
00:22:25,380 --> 00:22:26,620
So we'll take those questions.

627
00:22:26,620 --> 00:22:31,530
And we'll wrap up for the
day and go from there.

628
00:22:31,530 --> 00:22:32,730
PAUL KINLAN: So it's going
to be pretty cool.

629
00:22:32,730 --> 00:22:33,770
PETE LEPAGE: All right.

630
00:22:33,770 --> 00:22:34,070
I like cool.

631
00:22:34,070 --> 00:22:39,460
PAUL KINLAN: So this is a
pretend service that I wrote.

632
00:22:39,460 --> 00:22:41,840
It's a Google shortener.

633
00:22:41,840 --> 00:22:44,530
So basically this was actually
for something that you were

634
00:22:44,530 --> 00:22:45,790
doing with the links.

635
00:22:45,790 --> 00:22:47,540
You were manually going through
and shortening the

636
00:22:47,540 --> 00:22:48,560
links and everything.

637
00:22:48,560 --> 00:22:53,170
It's that I wanted to integrate
with the actual--

638
00:22:53,170 --> 00:22:54,100
what's it called?

639
00:22:54,100 --> 00:22:55,420
The API?

640
00:22:55,420 --> 00:22:58,570
PETE LEPAGE: Oh, that thing,
that API thing, right.

641
00:22:58,570 --> 00:22:59,840
PAUL KINLAN: Yeah, I
wanted to integrate

642
00:22:59,840 --> 00:23:01,190
with the API for Google.

643
00:23:01,190 --> 00:23:04,850
And I think last week, we talked
about the Identity API.

644
00:23:04,850 --> 00:23:07,130
And the Identity API, at the
time, was only third-party

645
00:23:07,130 --> 00:23:09,430
services and not Google-based
services.

646
00:23:09,430 --> 00:23:13,330
And that's because we hadn't
exposed the actual admin

647
00:23:13,330 --> 00:23:15,970
interface view inside
the API console.

648
00:23:15,970 --> 00:23:16,470
A-ha.

649
00:23:16,470 --> 00:23:17,860
Evening, Liverpool.

650
00:23:17,860 --> 00:23:19,130
Liverpool, at least.

651
00:23:19,130 --> 00:23:22,000
So anyway, we hadn't
exposed that.

652
00:23:22,000 --> 00:23:24,080
It's really--

653
00:23:24,080 --> 00:23:26,510
brand new announcement, first to
hear it if you're watching

654
00:23:26,510 --> 00:23:29,290
this right now, is that you
can actually go to your

655
00:23:29,290 --> 00:23:33,530
Developer Console and choose or
create a brand new client

656
00:23:33,530 --> 00:23:35,110
ID for all the Google
Services.

657
00:23:35,110 --> 00:23:38,120
So Google authentications should
work, [? as far as I ?]

658
00:23:38,120 --> 00:23:39,616
know.

659
00:23:39,616 --> 00:23:40,520
I have yet to try it.

660
00:23:40,520 --> 00:23:44,330
Because even though this is a
Google service, I actually

661
00:23:44,330 --> 00:23:46,700
just use normal third-party
authentication flow.

662
00:23:46,700 --> 00:23:49,750
So let me just prove
that this works.

663
00:23:49,750 --> 00:23:51,750
PETE LEPAGE: I just want to
say that again, because I

664
00:23:51,750 --> 00:23:54,980
think that's a really cool
fact and feature.

665
00:23:54,980 --> 00:23:58,520
You just used the normal
third-party authentication

666
00:23:58,520 --> 00:24:02,520
features to access Google
APIs, because the Google

667
00:24:02,520 --> 00:24:05,880
authentication stuff wasn't
quite there and still may be a

668
00:24:05,880 --> 00:24:08,520
little not quite ready
for prime time.

669
00:24:08,520 --> 00:24:11,380
But the third-party
auth stuff is.

670
00:24:11,380 --> 00:24:12,600
That's pretty sick.

671
00:24:12,600 --> 00:24:12,800
PAUL KINLAN: Yeah.

672
00:24:12,800 --> 00:24:13,350
It's pretty cool.

673
00:24:13,350 --> 00:24:14,170
So I'll shortened the URL.

674
00:24:14,170 --> 00:24:15,730
And it should appear.

675
00:24:15,730 --> 00:24:17,150
There it is at the bottom.

676
00:24:17,150 --> 00:24:19,590
That's the short URL
we just created.

677
00:24:19,590 --> 00:24:22,270
And yeah, there's a whole
load more stuff.

678
00:24:22,270 --> 00:24:23,510
I only made this in
a couple hours.

679
00:24:23,510 --> 00:24:26,330
But a lot of it was me just
trying to make sure the Google

680
00:24:26,330 --> 00:24:28,160
APIs were working with
authentication and the

681
00:24:28,160 --> 00:24:29,320
Identity API.

682
00:24:29,320 --> 00:24:31,360
And just because it's built off
the back of OAuth 2, it

683
00:24:31,360 --> 00:24:33,960
means it pretty much
works straightaway.

684
00:24:33,960 --> 00:24:37,300
I know that we do some extra
things with refresh tokens and

685
00:24:37,300 --> 00:24:38,040
some other stuff.

686
00:24:38,040 --> 00:24:40,390
But I've just chosen to ignore
all that, because actually,

687
00:24:40,390 --> 00:24:42,860
what's happening behind the
scenes here is that even

688
00:24:42,860 --> 00:24:44,560
though the authentication
didn't work, it tries to

689
00:24:44,560 --> 00:24:47,720
authenticate every
single request.

690
00:24:47,720 --> 00:24:49,050
So I'm not storing
an access token.

691
00:24:49,050 --> 00:24:51,160
I'm getting a brand new
one every single time.

692
00:24:51,160 --> 00:24:55,980
So should we have a quick look
if I can get it up properly?

693
00:24:55,980 --> 00:24:58,580
PETE LEPAGE: I've got a couple
questions up on our moderator.

694
00:24:58,580 --> 00:25:00,390
So why don't I start with
those while you pull

695
00:25:00,390 --> 00:25:01,250
some of them up.

696
00:25:01,250 --> 00:25:03,400
PAUL KINLAN: I'll get the
console up so I can show you.

697
00:25:03,400 --> 00:25:05,640
Can I just show you how
you actually go

698
00:25:05,640 --> 00:25:06,060
about creating one?

699
00:25:06,060 --> 00:25:07,120
PETE LEPAGE: Yeah.

700
00:25:07,120 --> 00:25:10,450
PAUL KINLAN: You use the
normal Google APIs--

701
00:25:10,450 --> 00:25:13,530
code.google.com/apis/console--

702
00:25:13,530 --> 00:25:15,290
to create your project.

703
00:25:15,290 --> 00:25:17,710
And then you do something quite
simple, where if you go

704
00:25:17,710 --> 00:25:21,880
to API Access, you create
an OAuth 2 client ID.

705
00:25:21,880 --> 00:25:25,652
Give it a name-- so
test x, maybe.

706
00:25:25,652 --> 00:25:27,170
That's a good name.

707
00:25:27,170 --> 00:25:29,820
And you normally have a list of
options-- web application,

708
00:25:29,820 --> 00:25:32,490
service account, and installed
application.

709
00:25:32,490 --> 00:25:34,500
Well, it turns out Chrome
applications are actually

710
00:25:34,500 --> 00:25:37,600
installed applications and not
pure web applications that

711
00:25:37,600 --> 00:25:38,600
live on the web.

712
00:25:38,600 --> 00:25:41,650
So you press the installed
application, you select Chrome

713
00:25:41,650 --> 00:25:42,470
Application.

714
00:25:42,470 --> 00:25:43,830
And you put your extension
ID in.

715
00:25:43,830 --> 00:25:46,110
So if you had your
extension ID--

716
00:25:46,110 --> 00:25:47,360
I'm going to say it's that.

717
00:25:47,360 --> 00:25:48,360
Hopefully this will work.

718
00:25:48,360 --> 00:25:49,120
It's just a random one.

719
00:25:49,120 --> 00:25:50,860
PETE LEPAGE: I always
love random.

720
00:25:50,860 --> 00:25:51,220
PAUL KINLAN: Yeah.

721
00:25:51,220 --> 00:25:53,596
It didn't work.

722
00:25:53,596 --> 00:25:55,510
But you basically put in
your own extension ID.

723
00:25:55,510 --> 00:25:59,030
Let's do that one for now.

724
00:25:59,030 --> 00:25:59,695
So this should work.

725
00:25:59,695 --> 00:26:01,430
Create client ID.

726
00:26:01,430 --> 00:26:03,080
And then we've got the client
ID and application

727
00:26:03,080 --> 00:26:04,370
secret that we need.

728
00:26:04,370 --> 00:26:05,810
And that's all you have
to do to start

729
00:26:05,810 --> 00:26:07,030
accessing Google Services.

730
00:26:07,030 --> 00:26:08,350
And you can select the
list of services

731
00:26:08,350 --> 00:26:09,520
that you want to access.

732
00:26:09,520 --> 00:26:12,290
I would normally select
Google Link Shortener.

733
00:26:12,290 --> 00:26:15,440
And I would be able to access it
straight away, and I'd use

734
00:26:15,440 --> 00:26:17,280
the Google authentication.

735
00:26:17,280 --> 00:26:18,780
Now, I just want to say, the
interesting thing about the

736
00:26:18,780 --> 00:26:20,600
Google authentication, why
it's different than third

737
00:26:20,600 --> 00:26:23,820
party, is that when the user
installs the application, we

738
00:26:23,820 --> 00:26:27,530
can prompt them to say, this
application wants to access

739
00:26:27,530 --> 00:26:30,420
your Google Docs or your Google
Drive, and those types

740
00:26:30,420 --> 00:26:34,850
of things, which we can't do
because we don't know how

741
00:26:34,850 --> 00:26:37,080
every other third-party
API works.

742
00:26:37,080 --> 00:26:39,050
So through Google Services,
you can get that installed

743
00:26:39,050 --> 00:26:41,920
properly, which is important,
which is why you need that

744
00:26:41,920 --> 00:26:42,970
special ID.

745
00:26:42,970 --> 00:26:44,060
PETE LEPAGE: Awesome.

746
00:26:44,060 --> 00:26:44,370
All right.

747
00:26:44,370 --> 00:26:45,880
Well, let's pop over
to our questions.

748
00:26:45,880 --> 00:26:49,070
We've got about three or four
minutes left before we need to

749
00:26:49,070 --> 00:26:50,720
wrap up for today.

750
00:26:50,720 --> 00:26:53,550
So our first question about from
Adam in San Francisco.

751
00:26:53,550 --> 00:26:56,850
He wants to know, should
chrome.runtime.lastError be

752
00:26:56,850 --> 00:27:00,150
checked on every call that
uses a call back?

753
00:27:00,150 --> 00:27:03,070
How should Chrome runtime
last error be used?

754
00:27:03,070 --> 00:27:08,460
I'm working on a library that
interfaces with a Chrome app

755
00:27:08,460 --> 00:27:12,185
via Dart, and most of this
is wrapped in futures.

756
00:27:12,185 --> 00:27:14,306
Paul, what's your
take on this?

757
00:27:14,306 --> 00:27:14,710
PAUL KINLAN: Yeah.

758
00:27:14,710 --> 00:27:16,120
You have to check last error.

759
00:27:16,120 --> 00:27:19,100
I mean, the last error is pretty
much always populated

760
00:27:19,100 --> 00:27:21,900
from the last error
that happened.

761
00:27:21,900 --> 00:27:26,960
So if one of your API methods
failed when you called it,

762
00:27:26,960 --> 00:27:28,610
then you should check
last error.

763
00:27:28,610 --> 00:27:31,440
We don't have the onSuccess
and onFailure that you'd

764
00:27:31,440 --> 00:27:35,180
expect from, say, a normal
purely web application.

765
00:27:35,180 --> 00:27:36,800
We don't have futures, either.

766
00:27:36,800 --> 00:27:39,520
That's not to say that we
couldn't wrap it up and have a

767
00:27:39,520 --> 00:27:42,770
JavaScript API which makes it a
little bit easier, that kind

768
00:27:42,770 --> 00:27:45,380
of knows when the last error did
occur and not to kind of

769
00:27:45,380 --> 00:27:46,090
overwrite it.

770
00:27:46,090 --> 00:27:47,520
Because basically, the
last error stays

771
00:27:47,520 --> 00:27:49,710
populated all the time.

772
00:27:49,710 --> 00:27:54,670
So if you make a request to
a Chrome-specific API.

773
00:27:54,670 --> 00:27:57,250
It could be three requests
down, later on, where you

774
00:27:57,250 --> 00:27:58,120
actually go and check
last error.

775
00:27:58,120 --> 00:27:59,360
And oh, it's errored.

776
00:27:59,360 --> 00:28:00,170
Well, has it errored?

777
00:28:00,170 --> 00:28:01,040
Was it that API?

778
00:28:01,040 --> 00:28:03,580
You don't quite know.

779
00:28:03,580 --> 00:28:04,580
So you do have to check.

780
00:28:04,580 --> 00:28:07,270
But it might be better if we
kind of come up with a better

781
00:28:07,270 --> 00:28:07,750
interface in the library.

782
00:28:07,750 --> 00:28:10,420
And maybe we kind of test that
with the JavaScript shim to

783
00:28:10,420 --> 00:28:11,030
start off with.

784
00:28:11,030 --> 00:28:11,530
PETE LEPAGE: Cool.

785
00:28:11,530 --> 00:28:12,750
Yeah, that's a good idea.

786
00:28:12,750 --> 00:28:15,020
PAUL KINLAN: Because honestly,
it's a little bit awkward

787
00:28:15,020 --> 00:28:18,970
trying to interface with
index.db and then integrate

788
00:28:18,970 --> 00:28:20,340
with the media gallery API.

789
00:28:20,340 --> 00:28:22,810
And these are two things which
are different APIs,

790
00:28:22,810 --> 00:28:23,110
essentially.

791
00:28:23,110 --> 00:28:24,965
And they've got different
semantics for

792
00:28:24,965 --> 00:28:26,650
errors and call backs.

793
00:28:26,650 --> 00:28:28,830
So we might have to write a
little JavaScript shim to make

794
00:28:28,830 --> 00:28:30,000
that a little bit easier.

795
00:28:30,000 --> 00:28:31,930
But right now, you just
have to check.

796
00:28:31,930 --> 00:28:33,920
The simplest thing is
you have to check.

797
00:28:33,920 --> 00:28:34,720
PETE LEPAGE: All right.

798
00:28:34,720 --> 00:28:38,060
So James from Ontario--

799
00:28:38,060 --> 00:28:40,880
my hometown, or, I guess,
my home province--

800
00:28:40,880 --> 00:28:43,910
wants to know, do Chrome apps
run agnostic to the operating

801
00:28:43,910 --> 00:28:46,596
system, or are there
cross-platform issues that he

802
00:28:46,596 --> 00:28:47,700
needs to keep in mind?

803
00:28:47,700 --> 00:28:50,530
Should I bother testing on
Windows and Linux if he's

804
00:28:50,530 --> 00:28:51,900
developing on Mac?

805
00:28:51,900 --> 00:28:56,780
Can I safely assume that
my app will be

806
00:28:56,780 --> 00:28:58,570
fabulous across the board?

807
00:28:58,570 --> 00:29:01,840
And that's a really
great question.

808
00:29:01,840 --> 00:29:05,910
I would say in the 99% case,
your app is going to be

809
00:29:05,910 --> 00:29:07,980
fabulous across the board.

810
00:29:07,980 --> 00:29:10,920
There's a couple places where I
think you do want to spend a

811
00:29:10,920 --> 00:29:12,830
little bit of time testing.

812
00:29:12,830 --> 00:29:14,780
And that's going to
be things like

813
00:29:14,780 --> 00:29:19,080
serial, USB, and Bluetooth.

814
00:29:19,080 --> 00:29:21,710
Those are the three that just
come to mind for me that I

815
00:29:21,710 --> 00:29:24,550
just want to do a little bit of
extra testing, just because

816
00:29:24,550 --> 00:29:27,150
the stacks in those particular
places are

817
00:29:27,150 --> 00:29:28,790
a little bit different.

818
00:29:28,790 --> 00:29:31,040
Paul, are you--

819
00:29:31,040 --> 00:29:31,400
go ahead.

820
00:29:31,400 --> 00:29:32,380
PAUL KINLAN: Sorry.

821
00:29:32,380 --> 00:29:33,330
No, I was going to say
the same thing.

822
00:29:33,330 --> 00:29:35,390
I agree with you completely
there, is that the actual

823
00:29:35,390 --> 00:29:37,600
render and the basic things
that you'd expect to work

824
00:29:37,600 --> 00:29:39,210
should just work.

825
00:29:39,210 --> 00:29:39,940
PETE LEPAGE: You're
running Chrome.

826
00:29:39,940 --> 00:29:40,820
PAUL KINLAN: You
should never--

827
00:29:40,820 --> 00:29:42,980
yeah, you're running Chrome.

828
00:29:42,980 --> 00:29:45,275
That's never an excuse
not to test.

829
00:29:45,275 --> 00:29:47,420
But the assumption should be
that it's going to be a lot

830
00:29:47,420 --> 00:29:49,730
easier and a lot easier to
kind of test across them.

831
00:29:49,730 --> 00:29:52,370
And like you said, the
differences are

832
00:29:52,370 --> 00:29:53,650
the hardware APIs.

833
00:29:53,650 --> 00:29:56,685
So for instance, Bluetooth
might not work on Windows

834
00:29:56,685 --> 00:29:58,720
because we don't have access
to the stack, whereas we've

835
00:29:58,720 --> 00:30:01,990
got better access to the
stack on Chrome OS.

836
00:30:01,990 --> 00:30:04,850
I know we've seen some bugs on
actual Chromium Apps, made a

837
00:30:04,850 --> 00:30:08,820
list as well, where the serial
port didn't work because we

838
00:30:08,820 --> 00:30:10,910
haven't got the regular
expression right to filter out

839
00:30:10,910 --> 00:30:14,500
the actual com ports
for serial ports.

840
00:30:14,500 --> 00:30:16,160
We haven't got that right
for Windows, so it

841
00:30:16,160 --> 00:30:16,840
didn't work at all.

842
00:30:16,840 --> 00:30:17,540
So those are the type
of things that

843
00:30:17,540 --> 00:30:18,974
you'd have to check.

844
00:30:18,974 --> 00:30:19,930
PETE LEPAGE: Yeah.

845
00:30:19,930 --> 00:30:24,040
But the point will be, we want
to get it as close as possible

846
00:30:24,040 --> 00:30:25,840
so that you don't have
to worry about that.

847
00:30:25,840 --> 00:30:27,850
So we have a little
bit of work to do.

848
00:30:27,850 --> 00:30:30,690
But we think you guys
should test as well.

849
00:30:30,690 --> 00:30:34,060
So I'll go for a question
from Belgium next.

850
00:30:34,060 --> 00:30:38,460
Linux, in the base plug-in for
playing games or video on

851
00:30:38,460 --> 00:30:41,420
Facebook, is sometimes
it works--

852
00:30:41,420 --> 00:30:44,890
you know, I'm actually going to
come back to the question.

853
00:30:44,890 --> 00:30:49,050
Because I'm not quite sure I
understand your question.

854
00:30:49,050 --> 00:30:50,400
PAUL KINLAN: I think there's
a plug-in that

855
00:30:50,400 --> 00:30:51,540
doesn't work on Linux.

856
00:30:51,540 --> 00:30:52,930
PETE LEPAGE: Yeah.

857
00:30:52,930 --> 00:30:55,610
PAUL KINLAN: The only think
I can say is, file a bug.

858
00:30:55,610 --> 00:30:57,020
He's using Chrome for
Linux 11 or 12?

859
00:30:57,020 --> 00:31:00,190
We're at 25.

860
00:31:00,190 --> 00:31:01,570
So file a bug.

861
00:31:01,570 --> 00:31:03,875
I'm not exactly sure whether it
will get fixed, because I

862
00:31:03,875 --> 00:31:05,590
don't believe we backport that
far to these places.

863
00:31:05,590 --> 00:31:06,090
PETE LEPAGE: Right.

864
00:31:06,090 --> 00:31:07,610
We might go back a couple--

865
00:31:07,610 --> 00:31:08,870
PAUL KINLAN: That's the whole
point of the auto update

866
00:31:08,870 --> 00:31:11,720
system is that we love to
maintain [INAUDIBLE]

867
00:31:11,720 --> 00:31:14,090
versions, at least.

868
00:31:14,090 --> 00:31:17,670
Should we get on to the
Airborne question?

869
00:31:17,670 --> 00:31:19,010
PETE LEPAGE: Yeah, sure.

870
00:31:19,010 --> 00:31:19,670
PAUL KINLAN: Cool.

871
00:31:19,670 --> 00:31:22,450
So does the Identity API support
all the visions of

872
00:31:22,450 --> 00:31:26,390
OAuth 1.0, 1.0a?

873
00:31:26,390 --> 00:31:28,810
It's a really good question.

874
00:31:28,810 --> 00:31:32,620
So the thing is that
the Google API

875
00:31:32,620 --> 00:31:35,110
endpoint uses OAuth 2.

876
00:31:35,110 --> 00:31:37,540
And we've coded it to work
with just OAuth 2.

877
00:31:37,540 --> 00:31:40,480
The third-party format, or the
third-party authentication

878
00:31:40,480 --> 00:31:43,280
launcher, essentially-
it's agnostic.

879
00:31:43,280 --> 00:31:47,070
So we don't actually care, in
theory, about the type of

880
00:31:47,070 --> 00:31:48,000
authentication you're using.

881
00:31:48,000 --> 00:31:52,100
You could use some weird
authentication system which

882
00:31:52,100 --> 00:31:54,760
returns a session ID in the
query parameter, which you can

883
00:31:54,760 --> 00:31:58,490
then take out for your admin
panel to push into your app,

884
00:31:58,490 --> 00:32:00,310
and a whole load
of other stuff.

885
00:32:00,310 --> 00:32:01,770
You can do those type
of things as well.

886
00:32:01,770 --> 00:32:05,450
And the idea behind that was if
you have OAuth 1 and OAuth

887
00:32:05,450 --> 00:32:07,710
1a applications is that
in theory, you should

888
00:32:07,710 --> 00:32:08,550
be able to do it.

889
00:32:08,550 --> 00:32:11,366
I haven't tested it, because I
don't like OAuth 1, and I've

890
00:32:11,366 --> 00:32:13,330
wanted to stay away from
it [INAUDIBLE].

891
00:32:13,330 --> 00:32:16,020
PETE LEPAGE: I think we might
have one person who likes it.

892
00:32:16,020 --> 00:32:19,840
And his or her name
would be Airborne.

893
00:32:19,840 --> 00:32:21,046
PAUL KINLAN: Yeah.

894
00:32:21,046 --> 00:32:24,580
But the interesting thing is
that normally what happens is

895
00:32:24,580 --> 00:32:30,220
that the authentication APIs in
most third-party services,

896
00:32:30,220 --> 00:32:32,750
they can't redirect to anything
that's not HTTP and

897
00:32:32,750 --> 00:32:34,460
HTTPS URLs.

898
00:32:34,460 --> 00:32:37,150
So every single app at the
moment has a Chrome hype and

899
00:32:37,150 --> 00:32:41,430
extension scheme in the actual
URL, which you won't be able

900
00:32:41,430 --> 00:32:42,800
to redirect to.

901
00:32:42,800 --> 00:32:45,120
And Instagram kind of
worked last week.

902
00:32:45,120 --> 00:32:48,070
But that was kind of a fortunate
coincidence.

903
00:32:48,070 --> 00:32:50,140
If you look at the Facebook--
sorry, if

904
00:32:50,140 --> 00:32:51,560
you look at the friend--

905
00:32:51,560 --> 00:32:52,620
Foursquare application--

906
00:32:52,620 --> 00:32:54,325
[INAUDIBLE].

907
00:32:54,325 --> 00:32:56,960
If you look at the Foursquare
application that we've got on

908
00:32:56,960 --> 00:33:01,110
our sample repository as well,
that uses OAuth 2, but it's

909
00:33:01,110 --> 00:33:05,830
using this redirect to a special
domain that we own.

910
00:33:05,830 --> 00:33:09,420
So basically what is, I think
it's your extension ID dot

911
00:33:09,420 --> 00:33:11,150
Chromium app dot org.

912
00:33:11,150 --> 00:33:13,520
And that's going to redirect the
URL, and you can send the

913
00:33:13,520 --> 00:33:17,970
third-party services that use
OAuth 1 or OAuth 1a back

914
00:33:17,970 --> 00:33:19,370
towards inside your
application.

915
00:33:19,370 --> 00:33:20,300
PETE LEPAGE: And we'll
redirect it for you

916
00:33:20,300 --> 00:33:20,850
automatically.

917
00:33:20,850 --> 00:33:21,400
PAUL KINLAN: Yeah.

918
00:33:21,400 --> 00:33:24,680
We'll do the redirect
from there.

919
00:33:24,680 --> 00:33:25,750
It might not work very well.

920
00:33:25,750 --> 00:33:26,590
I would test it.

921
00:33:26,590 --> 00:33:28,230
And if you have any feedback
about these

922
00:33:28,230 --> 00:33:30,120
things, let me know.

923
00:33:30,120 --> 00:33:31,690
I will kind of get it working.

924
00:33:31,690 --> 00:33:33,840
But the majority of people
are moving to OAuth 2.

925
00:33:33,840 --> 00:33:35,530
And OAuth 2 works very well.

926
00:33:35,530 --> 00:33:36,300
PETE LEPAGE: Cool.

927
00:33:36,300 --> 00:33:39,140
Well, Paul, I think that's all
the time we have for today.

928
00:33:39,140 --> 00:33:40,560
Thanks for joining
me from London.

929
00:33:40,560 --> 00:33:43,780
I hope you have a really
great holiday.

930
00:33:43,780 --> 00:33:45,770
PAUL KINLAN: Sorry, can
I just interrupt?

931
00:33:45,770 --> 00:33:50,760
James Doyle, he did
the CSS Cleaner.

932
00:33:50,760 --> 00:33:51,533
PETE LEPAGE: Awesome.

933
00:33:51,533 --> 00:33:54,400
James Doyle from Ontario.

934
00:33:54,400 --> 00:33:55,430
That was his question.

935
00:33:55,430 --> 00:33:55,840
All right.

936
00:33:55,840 --> 00:33:58,820
Well, James, thank you.

937
00:33:58,820 --> 00:34:01,480
So I want to thank everybody
for joining us this week.

938
00:34:01,480 --> 00:34:03,210
We're going to be back
in the new year.

939
00:34:03,210 --> 00:34:05,330
We'll probably start back--

940
00:34:05,330 --> 00:34:08,969
I want to say it'll be the
second week of January with

941
00:34:08,969 --> 00:34:11,330
our Chrome Apps Office Hours.

942
00:34:11,330 --> 00:34:15,780
We've got some really exciting
stuff planned for 2013--

943
00:34:15,780 --> 00:34:18,500
things like push messaging,
notifications.

944
00:34:18,500 --> 00:34:22,030
We've got great new
authentication stuff.

945
00:34:22,030 --> 00:34:24,960
We have a ton of stuff that
we're really excited about

946
00:34:24,960 --> 00:34:27,480
that we think you're going to
be really excited about.

947
00:34:27,480 --> 00:34:29,190
So thanks for joining us.

948
00:34:29,190 --> 00:34:30,679
Paul, thank you.

949
00:34:30,679 --> 00:34:31,510
PAUL KINLAN: Thank
you, very much.

950
00:34:31,510 --> 00:34:33,320
PETE LEPAGE: And I can't
wait to see you

951
00:34:33,320 --> 00:34:34,230
all in the new year.

952
00:34:34,230 --> 00:34:36,679
Thank you very much.

953
00:34:36,679 --> 00:34:37,929
PAUL KINLAN: Bye bye.

954
00:34:37,929 --> 00:34:44,667

