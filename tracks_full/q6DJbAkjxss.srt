1
00:00:00,000 --> 00:00:48,180

2
00:00:48,180 --> 00:00:50,310
PAUL KINLAN: Hello, and welcome
to another Chrome

3
00:00:50,310 --> 00:00:51,630
Mobile Thursday.

4
00:00:51,630 --> 00:00:52,020
SAM DUTTON: Yes.

5
00:00:52,020 --> 00:00:54,210
PAUL KINLAN: Yes, I got that
wrong in an earlier take.

6
00:00:54,210 --> 00:00:56,230
Anyway, this episode
is about media.

7
00:00:56,230 --> 00:00:57,290
I'm Paul Kinlan.

8
00:00:57,290 --> 00:01:01,980
I'm with Sam Dutton, developer
advocate from Google Chrome.

9
00:01:01,980 --> 00:01:03,830
And today's about
media mobile.

10
00:01:03,830 --> 00:01:04,420
Media's an area--

11
00:01:04,420 --> 00:01:05,024
SAM DUTTON: Yeah, absolutely.

12
00:01:05,024 --> 00:01:07,910
PAUL KINLAN: It's an area
that you specialize in.

13
00:01:07,910 --> 00:01:11,220
In particular, it's about
media on mobile as well.

14
00:01:11,220 --> 00:01:15,395
So a lot of people think of
video and everything--

15
00:01:15,395 --> 00:01:19,310
everything to do with video
is mainly desktop-based.

16
00:01:19,310 --> 00:01:20,748
A lot of people think
that you can only

17
00:01:20,748 --> 00:01:22,620
play videos on desktops.

18
00:01:22,620 --> 00:01:23,440
Obviously, that's not true.

19
00:01:23,440 --> 00:01:25,190
We can do it on mobiles.

20
00:01:25,190 --> 00:01:26,570
But we've got a nice
[INAUDIBLE]

21
00:01:26,570 --> 00:01:28,730
new things coming inside
Chrome for Cran--

22
00:01:28,730 --> 00:01:30,295
Chrome for Crandroid?--

23
00:01:30,295 --> 00:01:31,990
Chrome for Android, at least.

24
00:01:31,990 --> 00:01:33,020
SAM DUTTON: Crandoid
[INAUDIBLE].

25
00:01:33,020 --> 00:01:34,990
PAUL KINLAN: getUserMedia's a
big one, so I've been able to

26
00:01:34,990 --> 00:01:37,560
actually get access
to the webcam.

27
00:01:37,560 --> 00:01:39,680
There's a thing called
getUserMedia with Constraints

28
00:01:39,680 --> 00:01:41,200
which I know you're going
to talk about as well.

29
00:01:41,200 --> 00:01:41,910
SAM DUTTON: Yeah, a
little demo there.

30
00:01:41,910 --> 00:01:43,260
PAUL KINLAN: Track Elements,
WebRTC--

31
00:01:43,260 --> 00:01:44,490
have we got WebRTC today?

32
00:01:44,490 --> 00:01:45,370
SAM DUTTON: Yeah, yeah.

33
00:01:45,370 --> 00:01:45,810
Hopefully.

34
00:01:45,810 --> 00:01:47,160
PAUL KINLAN: Yeah, we've got
a little bit of WebRTC.

35
00:01:47,160 --> 00:01:48,600
Hopefully, we'll show you
something really cool.

36
00:01:48,600 --> 00:01:50,130
SAM DUTTON: If the connectivity
gods are with us.

37
00:01:50,130 --> 00:01:50,400
PAUL KINLAN: Yeah, I've
seen a really good

38
00:01:50,400 --> 00:01:51,370
demo out today, actually.

39
00:01:51,370 --> 00:01:54,280
So if that all works, we're
going to have something really

40
00:01:54,280 --> 00:01:55,466
cool to show.

41
00:01:55,466 --> 00:01:58,310
But yeah, without much further
ado, I'll pass

42
00:01:58,310 --> 00:01:59,190
you across to Sam.

43
00:01:59,190 --> 00:02:01,970
And Sam will tell you all
the awesome things

44
00:02:01,970 --> 00:02:04,750
about media and mobile.

45
00:02:04,750 --> 00:02:05,110
SAM DUTTON: Yeah.

46
00:02:05,110 --> 00:02:07,460
So I'm going to show
you some stuff.

47
00:02:07,460 --> 00:02:10,850
We've got a stack of new APIs
being implemented for mobile,

48
00:02:10,850 --> 00:02:13,020
which is really great to see,
because it's a kind of natural

49
00:02:13,020 --> 00:02:14,150
home for video, I think.

50
00:02:14,150 --> 00:02:16,850
You know, people using devices
when they're out and about.

51
00:02:16,850 --> 00:02:22,680
And being able to enjoy video
from their phones and their

52
00:02:22,680 --> 00:02:23,900
tablets and so on.

53
00:02:23,900 --> 00:02:26,720
So straight up, I just wanted
to get us into a little

54
00:02:26,720 --> 00:02:28,280
demonstration of something
that's new

55
00:02:28,280 --> 00:02:29,620
for Chrome for Android.

56
00:02:29,620 --> 00:02:33,210
And I think actually for
Firefox, for mobile as well--

57
00:02:33,210 --> 00:02:33,450
PAUL KINLAN: Yeah.

58
00:02:33,450 --> 00:02:34,140
SAM DUTTON: which is great.

59
00:02:34,140 --> 00:02:35,580
Which is Get User Media.

60
00:02:35,580 --> 00:02:41,880
We've got the WebRTC APIs coming
into mobile for Firefox

61
00:02:41,880 --> 00:02:44,030
and for Android Chrome.

62
00:02:44,030 --> 00:02:47,730
And that means getUserMedia, RTC
peer connection-- that's

63
00:02:47,730 --> 00:02:50,400
the thing for communicating
audio and video.

64
00:02:50,400 --> 00:02:53,430
And the other one, which is
RTC Data Channel, which is

65
00:02:53,430 --> 00:02:58,060
like WebSockets but
peer-to-peer, between

66
00:02:58,060 --> 00:03:00,620
browsers, really fast.

67
00:03:00,620 --> 00:03:02,900
Arbitary data communication.

68
00:03:02,900 --> 00:03:06,550
Anyway, so just diving in, I
wanted to show you the state

69
00:03:06,550 --> 00:03:09,130
of getUserMedia on mobile.

70
00:03:09,130 --> 00:03:13,980
If we have a look at the Nexus
we've got here, you can see

71
00:03:13,980 --> 00:03:19,060
we've got that running this
really simple getUserMedia

72
00:03:19,060 --> 00:03:22,760
demo which is at
simple.info/gum.

73
00:03:22,760 --> 00:03:26,370
And then if we look at the code
for that on the desktop

74
00:03:26,370 --> 00:03:31,620
machine, I just wanted to show
you how damn simple it is now.

75
00:03:31,620 --> 00:03:36,220
We've got a bit of faff at the
top there with navigating

76
00:03:36,220 --> 00:03:36,475
getUserMedia.

77
00:03:36,475 --> 00:03:37,030
PAUL KINLAN: Oh,
another camera.

78
00:03:37,030 --> 00:03:38,750
That's the actual camera
pointing up at the--

79
00:03:38,750 --> 00:03:39,940
SAM DUTTON: Yeah,
that's right.

80
00:03:39,940 --> 00:03:40,310
PAUL KINLAN: [INAUDIBLE].

81
00:03:40,310 --> 00:03:41,000
SAM DUTTON: Yeah, it's
a bit weird.

82
00:03:41,000 --> 00:03:41,970
Don't put my hand over it.

83
00:03:41,970 --> 00:03:45,130
You can kind of see
what's going on.

84
00:03:45,130 --> 00:03:46,930
Now we've got to get
getUserMedia.

85
00:03:46,930 --> 00:03:49,570
We've got some stuff in there
to cope with the different

86
00:03:49,570 --> 00:03:50,780
implementations.

87
00:03:50,780 --> 00:03:54,770
And then you'll see below
that, we've got

88
00:03:54,770 --> 00:03:56,980
a constraint object.

89
00:03:56,980 --> 00:03:59,770
I'll talk a bit more
about that later.

90
00:03:59,770 --> 00:04:00,890
And then when--

91
00:04:00,890 --> 00:04:03,810
if we go down the code here,
you'll see when the

92
00:04:03,810 --> 00:04:06,730
getUserMedia call is made, we
pass at the constraints, a

93
00:04:06,730 --> 00:04:09,120
success call back and
an error call back.

94
00:04:09,120 --> 00:04:12,560
And the success callback
is right there.

95
00:04:12,560 --> 00:04:15,740
And I've actually put
this example--

96
00:04:15,740 --> 00:04:19,810
the stream object so you can
access it from the console.

97
00:04:19,810 --> 00:04:21,050
That's why that line's
in there.

98
00:04:21,050 --> 00:04:25,480
But really, everything is done
here in that line video.src,

99
00:04:25,480 --> 00:04:26,730
window.URL.creat
eObjectURL(localMediaStream).

100
00:04:26,730 --> 00:04:29,490

101
00:04:29,490 --> 00:04:29,840
That's it.

102
00:04:29,840 --> 00:04:32,570
And that's setting the
source of the video--

103
00:04:32,570 --> 00:04:36,060
works on mobile devices and it
works on Firefox, Opera--

104
00:04:36,060 --> 00:04:36,950
PAUL KINLAN: So which
version of Chrome

105
00:04:36,950 --> 00:04:37,590
is that at the moment?

106
00:04:37,590 --> 00:04:39,290
Is that the beta channel?

107
00:04:39,290 --> 00:04:40,510
SAM DUTTON: Yeah, no, this
is working in stable.

108
00:04:40,510 --> 00:04:41,590
PAUL KINLAN: Oh, getUserMedia,
wow.

109
00:04:41,590 --> 00:04:42,790
SAM DUTTON: I'm sorry,
on mobile.

110
00:04:42,790 --> 00:04:43,420
It's in beta.

111
00:04:43,420 --> 00:04:44,420
PAUL KINLAN: OK, I agree.

112
00:04:44,420 --> 00:04:44,960
SAM DUTTON: Yeah.

113
00:04:44,960 --> 00:04:50,170
On desktop, it's in stable and
likewise, yeah, we're seeing

114
00:04:50,170 --> 00:04:52,110
that in Firefox.

115
00:04:52,110 --> 00:04:53,400
PAUL KINLAN: You know I've
got a little question.

116
00:04:53,400 --> 00:04:55,290
I don't know whether
this is a--

117
00:04:55,290 --> 00:04:57,260
SAM DUTTON: Try me.

118
00:04:57,260 --> 00:04:59,010
PAUL KINLAN: So I've always
wondered about getUserMedia.

119
00:04:59,010 --> 00:05:02,010
It seems to start the actual
session off to actually get

120
00:05:02,010 --> 00:05:03,770
the video camera
and everything.

121
00:05:03,770 --> 00:05:05,750
How do you end it?

122
00:05:05,750 --> 00:05:06,210
SAM DUTTON: Yeah.

123
00:05:06,210 --> 00:05:09,180
Yeah, well, you can
stop the stream.

124
00:05:09,180 --> 00:05:10,970
PAUL KINLAN: Oh, so this
local stream--

125
00:05:10,970 --> 00:05:11,250
local media stream--

126
00:05:11,250 --> 00:05:11,950
SAM DUTTON: That's right.

127
00:05:11,950 --> 00:05:12,640
PAUL KINLAN: --you
got there is a--

128
00:05:12,640 --> 00:05:12,940
SAM DUTTON: Yeah.

129
00:05:12,940 --> 00:05:14,650
Let's see if it works.

130
00:05:14,650 --> 00:05:15,410
It might work.

131
00:05:15,410 --> 00:05:16,550
So I've got stream--

132
00:05:16,550 --> 00:05:18,800
if we have a look actually, I
don't know if we can see that.

133
00:05:18,800 --> 00:05:23,560
But I've put the-- like I said,
the stream variable in

134
00:05:23,560 --> 00:05:24,420
global scope.

135
00:05:24,420 --> 00:05:28,060
And yeah, we should, I think,
be able to stop that.

136
00:05:28,060 --> 00:05:30,660
Let's try that.

137
00:05:30,660 --> 00:05:31,970
Let's see if that worked.

138
00:05:31,970 --> 00:05:32,510
Yes, it did.

139
00:05:32,510 --> 00:05:32,820
PAUL KINLAN: Oh wow.

140
00:05:32,820 --> 00:05:33,080
Awesome.

141
00:05:33,080 --> 00:05:35,500
SAM DUTTON: See, I'm moving my
hand over the camera and

142
00:05:35,500 --> 00:05:37,930
nothing's happening, because
I've stopped it.

143
00:05:37,930 --> 00:05:39,326
And, yeah, that's it.

144
00:05:39,326 --> 00:05:40,000
PAUL KINLAN: Sweet.

145
00:05:40,000 --> 00:05:41,820
SAM DUTTON: So that's
how you can stop

146
00:05:41,820 --> 00:05:43,140
the camera from recording.

147
00:05:43,140 --> 00:05:43,600
PAUL KINLAN: Ah, nice.

148
00:05:43,600 --> 00:05:44,700
SAM DUTTON: I've got a simple
way of doing it.

149
00:05:44,700 --> 00:05:45,740
PAUL KINLAN: Yeah, I've always
wondered about that one,

150
00:05:45,740 --> 00:05:48,150
because I was like oh my god,
it's got access to the camera

151
00:05:48,150 --> 00:05:49,660
all the time.

152
00:05:49,660 --> 00:05:50,820
SAM DUTTON: Yeah.

153
00:05:50,820 --> 00:05:52,510
So, look, I'll just demonstrate,
actually, just to

154
00:05:52,510 --> 00:05:55,570
show what it looks like on the
device in terms of the

155
00:05:55,570 --> 00:05:57,440
permissions, because this
is really important.

156
00:05:57,440 --> 00:06:00,460
We need to make absolutely sure
that people know when

157
00:06:00,460 --> 00:06:02,150
they're recording stuff.

158
00:06:02,150 --> 00:06:05,150
So we've got the bar at the
top there with allow/deny.

159
00:06:05,150 --> 00:06:09,700
And there is, I'd say, no way
you can do that without having

160
00:06:09,700 --> 00:06:10,510
explicitly--

161
00:06:10,510 --> 00:06:11,880
PAUL KINLAN: One of the
questions that Remy Sharp had

162
00:06:11,880 --> 00:06:14,780
the other day was can you
select the camera?

163
00:06:14,780 --> 00:06:16,440
I know it doesn't make much
difference on the Nexus 7,

164
00:06:16,440 --> 00:06:17,880
because you only have a
front-facing camera.

165
00:06:17,880 --> 00:06:19,550
SAM DUTTON: Now that's
interesting.

166
00:06:19,550 --> 00:06:22,220
So that brings me to my next
topic, which is strengths.

167
00:06:22,220 --> 00:06:22,605
PAUL KINLAN: Nice segue.

168
00:06:22,605 --> 00:06:23,140
SAM DUTTON: Yeah, I like it.

169
00:06:23,140 --> 00:06:25,100
PAUL KINLAN: It's as
if we planned it.

170
00:06:25,100 --> 00:06:27,220
SAM DUTTON: It's kind
of like that.

171
00:06:27,220 --> 00:06:28,170
Yeah.

172
00:06:28,170 --> 00:06:32,020
So, in fact, if we go to this
very similar looking demo on

173
00:06:32,020 --> 00:06:38,880
the device, this is exactly
like the previous demo.

174
00:06:38,880 --> 00:06:43,140
But if we get into the code
for this in the DevTools--

175
00:06:43,140 --> 00:06:44,430
PAUL KINLAN: Just so everyone
knows at the moment, you have

176
00:06:44,430 --> 00:06:46,630
actually connected DevTools
up to the mobile device.

177
00:06:46,630 --> 00:06:47,220
SAM DUTTON: Yeah, yeah.

178
00:06:47,220 --> 00:06:48,570
So I'm taking that
through actually.

179
00:06:48,570 --> 00:06:49,140
PAUL KINLAN: No, that's good.

180
00:06:49,140 --> 00:06:51,290
It's one of those things that
we're trying to push quite a

181
00:06:51,290 --> 00:06:52,450
lot at the moment.

182
00:06:52,450 --> 00:06:54,965
There's a command called ADB,
and you can basically forward

183
00:06:54,965 --> 00:06:58,090
all the requests from the
Android developer took kit at

184
00:06:58,090 --> 00:06:59,980
the moment to the
mobile device.

185
00:06:59,980 --> 00:07:01,590
And that's how you've got this
DevTools [INAUDIBLE].

186
00:07:01,590 --> 00:07:02,305
SAM DUTTON: That's right.

187
00:07:02,305 --> 00:07:04,335
PAUL KINLAN: It's not any
special kit or rig.

188
00:07:04,335 --> 00:07:07,170
It's literally just a USB cable
straight to the device.

189
00:07:07,170 --> 00:07:07,745
SAM DUTTON: Yep.

190
00:07:07,745 --> 00:07:09,800
Got the USB plugged
in there, and then

191
00:07:09,800 --> 00:07:11,260
just run the ADB command.

192
00:07:11,260 --> 00:07:12,900
And yeah, it goes.

193
00:07:12,900 --> 00:07:17,580
And then on the desktop machine,
local host, 9222, and

194
00:07:17,580 --> 00:07:19,860
we get the full suite
of DevTools.

195
00:07:19,860 --> 00:07:21,330
Fantastic.

196
00:07:21,330 --> 00:07:24,280
Yeah, if we look through, you
can see the elements we got

197
00:07:24,280 --> 00:07:26,250
here on the page.

198
00:07:26,250 --> 00:07:28,750
We've got video there,
and so on and so on.

199
00:07:28,750 --> 00:07:32,870
But if we go back to the
sources, you can see this is

200
00:07:32,870 --> 00:07:36,280
really kind of the same
as the previous one.

201
00:07:36,280 --> 00:07:39,090
But we have this constraints
object which now has some

202
00:07:39,090 --> 00:07:40,230
mandatory rules.

203
00:07:40,230 --> 00:07:44,940
And what I've said here is
that the max width of the

204
00:07:44,940 --> 00:07:48,083
video that we're going to take
for the stream is 360.

205
00:07:48,083 --> 00:07:51,060
That means 360 pixels.

206
00:07:51,060 --> 00:07:55,830
Now the thing is that if we look
at the elements here--

207
00:07:55,830 --> 00:07:57,170
let's look at that
video element.

208
00:07:57,170 --> 00:07:58,670
Look at the metrics for that.

209
00:07:58,670 --> 00:08:02,870
What you'll see is that
we've actually got

210
00:08:02,870 --> 00:08:06,420
the size there at--

211
00:08:06,420 --> 00:08:09,000
it's giving actually the size
of the video itself.

212
00:08:09,000 --> 00:08:14,570
But what happens is that the
sizes that videos can be in

213
00:08:14,570 --> 00:08:16,450
terms of their resolution
are actually

214
00:08:16,450 --> 00:08:18,240
constrained to a fixed set.

215
00:08:18,240 --> 00:08:21,820
At the moment, we
have no scaling,

216
00:08:21,820 --> 00:08:23,590
and we have no cropping.

217
00:08:23,590 --> 00:08:24,395
So essentially--

218
00:08:24,395 --> 00:08:25,190
PAUL KINLAN: What's that mean?

219
00:08:25,190 --> 00:08:30,330
SAM DUTTON: What that means is
that if you set the max width

220
00:08:30,330 --> 00:08:33,690
of the video that you get from
the stream to be 360, that

221
00:08:33,690 --> 00:08:35,785
doesn't mean that it will
take it to 360.

222
00:08:35,785 --> 00:08:40,785
It will drop it to a fixed
set of sizes--

223
00:08:40,785 --> 00:08:42,289
PAUL KINLAN: Oh, so it could
make it 240 width.

224
00:08:42,289 --> 00:08:42,970
SAM DUTTON: --less that that.

225
00:08:42,970 --> 00:08:43,900
PAUL KINLAN: OK, I got you.

226
00:08:43,900 --> 00:08:45,780
SAM DUTTON: And we'll give
the links later.

227
00:08:45,780 --> 00:08:49,330
But there's essentially a
fixed set of constraints

228
00:08:49,330 --> 00:08:50,810
resolution sizes.

229
00:08:50,810 --> 00:08:52,480
So dimensions x and
y dimensions

230
00:08:52,480 --> 00:08:53,290
for the video stream.

231
00:08:53,290 --> 00:08:55,060
PAUL KINLAN: So what other type
of mandatory options are

232
00:08:55,060 --> 00:08:55,750
there on this?

233
00:08:55,750 --> 00:08:59,950
SAM DUTTON: So we can specify
the width and height of the

234
00:08:59,950 --> 00:09:03,280
stream which is implemented
now in Chrome.

235
00:09:03,280 --> 00:09:07,430
And also planned is
the implementation

236
00:09:07,430 --> 00:09:09,320
for the frame rates.

237
00:09:09,320 --> 00:09:13,270
So you could specify that you
want a particular frame rate--

238
00:09:13,270 --> 00:09:14,910
slow or whatever.

239
00:09:14,910 --> 00:09:18,802
And yeah, to get back to your
question, we're also going to

240
00:09:18,802 --> 00:09:21,140
be able to specify the front
and back cameras there.

241
00:09:21,140 --> 00:09:23,610
So that's where that
will live.

242
00:09:23,610 --> 00:09:25,680
That hasn't been implemented
yet.

243
00:09:25,680 --> 00:09:29,170
And this is pretty
new stuff, so the

244
00:09:29,170 --> 00:09:31,470
standards is still in flux.

245
00:09:31,470 --> 00:09:32,830
PAUL KINLAN: OK, so it's
actually going to be a

246
00:09:32,830 --> 00:09:35,060
programmatic thing, rather
than a user option.

247
00:09:35,060 --> 00:09:35,540
SAM DUTTON: Yes.

248
00:09:35,540 --> 00:09:36,870
So there's two things
that go on.

249
00:09:36,870 --> 00:09:39,980
You can specify which cameras
you want to use.

250
00:09:39,980 --> 00:09:45,460
And then when you select the
device from Allow, you can

251
00:09:45,460 --> 00:09:47,880
select which camera you want
to use from there as well.

252
00:09:47,880 --> 00:09:48,620
PAUL KINLAN: Right, OK, cool.

253
00:09:48,620 --> 00:09:50,930
So if you wanted to do, like,
a flip of the camera, like

254
00:09:50,930 --> 00:09:54,560
between front facing and the
back facing, you would

255
00:09:54,560 --> 00:09:57,310
essentially stop the stream and
then redo getUserMedia but

256
00:09:57,310 --> 00:09:59,540
with the front-facing camera
as one of the options.

257
00:09:59,540 --> 00:10:00,950
SAM DUTTON: Yeah, that's a
good question actually.

258
00:10:00,950 --> 00:10:03,570
You would have to do
that at this point.

259
00:10:03,570 --> 00:10:05,850
I can see that you might want to
be able to do that without

260
00:10:05,850 --> 00:10:08,030
re-initiating the
whole process.

261
00:10:08,030 --> 00:10:11,500
It is tricky because of course
there's this issue of privacy

262
00:10:11,500 --> 00:10:14,770
that you don't want to be able
to flip between cameras

263
00:10:14,770 --> 00:10:17,160
without the user giving
permission for that.

264
00:10:17,160 --> 00:10:18,040
PAUL KINLAN: I got you.

265
00:10:18,040 --> 00:10:19,090
Understood.

266
00:10:19,090 --> 00:10:20,710
So does this apply for
audio as well?

267
00:10:20,710 --> 00:10:21,590
I know that--

268
00:10:21,590 --> 00:10:22,940
and we're not really touching
on audio today.

269
00:10:22,940 --> 00:10:26,170
But are there constraints
for audio as well?

270
00:10:26,170 --> 00:10:27,810
SAM DUTTON: Yes, there are.

271
00:10:27,810 --> 00:10:29,500
Yeah, I haven't seen those
implemented yet.

272
00:10:29,500 --> 00:10:33,060
But yeah, there should be some
constraints about the kind of

273
00:10:33,060 --> 00:10:35,420
audio you can get in there, just
as there is for video.

274
00:10:35,420 --> 00:10:36,620
PAUL KINLAN: OK, well, cool.

275
00:10:36,620 --> 00:10:39,160
Because I remember when this was
first done, this API, and

276
00:10:39,160 --> 00:10:41,660
the original constraints were
a string of audio-comma

277
00:10:41,660 --> 00:10:42,140
[INAUDIBLE].

278
00:10:42,140 --> 00:10:43,670
SAM DUTTON: Yeah, yeah,
that's right.

279
00:10:43,670 --> 00:10:45,765
PAUL KINLAN: And it's like audio
true, audio, false or

280
00:10:45,765 --> 00:10:46,580
video false or whatever it is.

281
00:10:46,580 --> 00:10:48,800
SAM DUTTON: So audio lives
in here, like, you can--

282
00:10:48,800 --> 00:10:49,840
I've just got a video here.

283
00:10:49,840 --> 00:10:55,210
But if I put in audio there as
well, we can get the audio

284
00:10:55,210 --> 00:10:56,880
from the microphone as well.

285
00:10:56,880 --> 00:10:58,250
PAUL KINLAN: Can you-- are there
optional constraints--

286
00:10:58,250 --> 00:11:00,020
think of optional constraints?

287
00:11:00,020 --> 00:11:01,100
SAM DUTTON: Yes, that's right.

288
00:11:01,100 --> 00:11:05,050
So there's various degrees.

289
00:11:05,050 --> 00:11:06,950
I'm not even sure whether I can
remember on the standard

290
00:11:06,950 --> 00:11:09,390
now what they are, but
there are optional

291
00:11:09,390 --> 00:11:11,130
constraints and mandatory.

292
00:11:11,130 --> 00:11:13,600
So depending on what's available
on the device.

293
00:11:13,600 --> 00:11:16,920
Whether you would
like to specify

294
00:11:16,920 --> 00:11:17,950
frame rate or whatever.

295
00:11:17,950 --> 00:11:20,320
Or whether you are saying
don't let us

296
00:11:20,320 --> 00:11:23,213
work if it's not available.

297
00:11:23,213 --> 00:11:27,740
And one thing, just while I
remember to think about with

298
00:11:27,740 --> 00:11:32,560
these constraints is that you
get a rather unintuitive error

299
00:11:32,560 --> 00:11:34,620
message if you get them wrong.

300
00:11:34,620 --> 00:11:38,110
It's just kind of "permission
denied." So, yeah, if you're

301
00:11:38,110 --> 00:11:39,830
messing around with constraints,
you get something

302
00:11:39,830 --> 00:11:41,130
like that, just bear
that in mind.

303
00:11:41,130 --> 00:11:44,265
Because that can be
quite perplexing.

304
00:11:44,265 --> 00:11:46,790

305
00:11:46,790 --> 00:11:48,090
PAUL KINLAN: So the--

306
00:11:48,090 --> 00:11:49,800
I've forgotten what the
next question was now.

307
00:11:49,800 --> 00:11:50,460
SAM DUTTON: All right
then now.

308
00:11:50,460 --> 00:11:50,960
PAUL KINLAN: I know.

309
00:11:50,960 --> 00:11:52,520
Should we just make up
a question poll?

310
00:11:52,520 --> 00:11:53,170
SAM DUTTON: Yeah, go on.

311
00:11:53,170 --> 00:11:53,790
PAUL KINLAN: Paula, producer,
do you have

312
00:11:53,790 --> 00:11:55,060
a question as well?

313
00:11:55,060 --> 00:11:55,440
No?

314
00:11:55,440 --> 00:11:56,210
SAM DUTTON: No, you
saw it, yeah.

315
00:11:56,210 --> 00:11:57,030
PAUL KINLAN: Actually,
I know what it was.

316
00:11:57,030 --> 00:11:57,900
It wasn't even a question.

317
00:11:57,900 --> 00:12:00,610
It was these demos that you
have, we have a link

318
00:12:00,610 --> 00:12:01,430
to them, don't we?

319
00:12:01,430 --> 00:12:01,810
SAM DUTTON: Yeah, we do.

320
00:12:01,810 --> 00:12:02,680
PAUL KINLAN: We're going to pop
that up on the screen in a

321
00:12:02,680 --> 00:12:04,680
couple of seconds.

322
00:12:04,680 --> 00:12:06,670
Yeah, so if anyone wants to
try these out. you can

323
00:12:06,670 --> 00:12:09,760
definitely try them out
with Android Chrome.

324
00:12:09,760 --> 00:12:10,310
SAM DUTTON: That's
right, yeah.

325
00:12:10,310 --> 00:12:11,740
PAUL KINLAN: Beta
at the moment.

326
00:12:11,740 --> 00:12:12,660
You could try them
out on probably

327
00:12:12,660 --> 00:12:14,150
Firefox Android as well.

328
00:12:14,150 --> 00:12:15,050
SAM DUTTON: Yeah, let's--

329
00:12:15,050 --> 00:12:17,480
PAUL KINLAN: I'm not sure
about Opera just yet.

330
00:12:17,480 --> 00:12:19,010
But they'll also work on
the desktop as well.

331
00:12:19,010 --> 00:12:22,180
So we've got pretty good support
for getUserMedia

332
00:12:22,180 --> 00:12:23,920
across a variety of
the browsers.

333
00:12:23,920 --> 00:12:26,130
SAM DUTTON: Yeah, actually,
while we're there, I'll just

334
00:12:26,130 --> 00:12:27,380
show you on the device.

335
00:12:27,380 --> 00:12:30,370

336
00:12:30,370 --> 00:12:33,790
The flag needs to be
set for WebRTC.

337
00:12:33,790 --> 00:12:35,680
And if you go to Chrome/flag--

338
00:12:35,680 --> 00:12:38,250
like about hyphen flags--

339
00:12:38,250 --> 00:12:42,580
and you can do Find on page is
really the easiest way to find

340
00:12:42,580 --> 00:12:43,430
the WebRTC.

341
00:12:43,430 --> 00:12:45,390
PAUL KINLAN: But getUserMedia
hidden behind

342
00:12:45,390 --> 00:12:45,800
that flag we well--

343
00:12:45,800 --> 00:12:46,330
SAM DUTTON: That's right.

344
00:12:46,330 --> 00:12:46,580
PAUL KINLAN: Not a
separate flag.

345
00:12:46,580 --> 00:12:47,900
SAM DUTTON: Yeah, and
then you enable--

346
00:12:47,900 --> 00:12:48,680
you can see it.

347
00:12:48,680 --> 00:12:51,520
It's enabled there, yes.

348
00:12:51,520 --> 00:12:54,620
So that needs to be done in
order to use these demos.

349
00:12:54,620 --> 00:12:58,410
By the way, while we're there,
don't forget the really handy

350
00:12:58,410 --> 00:13:00,970
Chrome URLs page if you
forget any of these.

351
00:13:00,970 --> 00:13:03,610
It's a really useful spot to--

352
00:13:03,610 --> 00:13:05,120
PAUL KINLAN: So what
are Chrome URLs do?

353
00:13:05,120 --> 00:13:10,350
SAM DUTTON: So
chrome://chrome-urls gives you

354
00:13:10,350 --> 00:13:13,070
a full list of all the
Chrome URLs like--

355
00:13:13,070 --> 00:13:13,966
PAUL KINLAN: Oh, there's
one called WebRTC.

356
00:13:13,966 --> 00:13:15,440
SAM DUTTON: --sys
internals and--

357
00:13:15,440 --> 00:13:18,440
actually I noticed the WebRTC
one isn't there at the moment.

358
00:13:18,440 --> 00:13:20,930
PAUL KINLAN: What does
WebRTC internals do.

359
00:13:20,930 --> 00:13:22,140
SAM DUTTON: I'll show
that later actually.

360
00:13:22,140 --> 00:13:27,630
That shows you what's going
on with the current WebRTC

361
00:13:27,630 --> 00:13:29,540
sessions, which is
really nice.

362
00:13:29,540 --> 00:13:32,140
PAUL KINLAN: So that's
getUserMedia.

363
00:13:32,140 --> 00:13:33,060
It's still pretty new.

364
00:13:33,060 --> 00:13:35,140
And we got quite a lot
to talk about today.

365
00:13:35,140 --> 00:13:37,200
So I think we should probably
jump onto the next topic.

366
00:13:37,200 --> 00:13:38,860
SAM DUTTON: Yeah, let's
move on a bit.

367
00:13:38,860 --> 00:13:40,180
PAUL KINLAN: It's the track
element, right?

368
00:13:40,180 --> 00:13:41,280
SAM DUTTON: That's right.

369
00:13:41,280 --> 00:13:42,910
PAUL KINLAN: So do you want to
explain to everything what the

370
00:13:42,910 --> 00:13:44,550
track element is?

371
00:13:44,550 --> 00:13:46,300
SAM DUTTON: Yeah.

372
00:13:46,300 --> 00:13:48,790
If we look at the track-- maybe
if I just demo this, I

373
00:13:48,790 --> 00:13:50,390
think it might be the
simplest way.

374
00:13:50,390 --> 00:13:53,630
So the track element was
designed as a way of getting

375
00:13:53,630 --> 00:13:56,310
captions and subtitles
and stuff like timed

376
00:13:56,310 --> 00:13:59,740
metadata into video.

377
00:13:59,740 --> 00:14:05,190
So if we play this video, as you
can see I'm getting-- it's

378
00:14:05,190 --> 00:14:07,760
a little bit hard to see on the
camera-- but you can see

379
00:14:07,760 --> 00:14:13,830
that I've actually used the cue
change event to get the

380
00:14:13,830 --> 00:14:17,250
value of each cue at
the bottom there.

381
00:14:17,250 --> 00:14:22,910
If we actually go to the desktop
device-- hang on, I'll

382
00:14:22,910 --> 00:14:24,980
just show you what
we're looking at.

383
00:14:24,980 --> 00:14:25,150
[VIDEO PLAYBACK]

384
00:14:25,150 --> 00:14:27,306
-The web is always changing,
and the way we

385
00:14:27,306 --> 00:14:29,070
access it is changing.

386
00:14:29,070 --> 00:14:30,350
The source of that
change, is you.

387
00:14:30,350 --> 00:14:30,510
[END VIDEO PLAYBACK]

388
00:14:30,510 --> 00:14:31,780
SAM DUTTON: I'll turn
off the sound.

389
00:14:31,780 --> 00:14:34,090
I think that's all right,
just about.

390
00:14:34,090 --> 00:14:35,830
I can take it up a little
bit bigger actually.

391
00:14:35,830 --> 00:14:41,330
So what you can see there is
that in the video element,

392
00:14:41,330 --> 00:14:43,370
I've got this track
element here.

393
00:14:43,370 --> 00:14:47,140
And that points to what's called
a VTT file, which in

394
00:14:47,140 --> 00:14:48,910
this case is like a
subtitles file.

395
00:14:48,910 --> 00:14:50,230
If we go to that, you could
see it's a very

396
00:14:50,230 --> 00:14:51,830
straightforward format.

397
00:14:51,830 --> 00:14:53,360
We got these things
called cues.

398
00:14:53,360 --> 00:14:54,720
Each one of these is a cue.

399
00:14:54,720 --> 00:14:59,120
And it has timing and some
kind of hints to help the

400
00:14:59,120 --> 00:15:04,230
thing may be displayed, and then
in this case some text.

401
00:15:04,230 --> 00:15:06,040
Now the cool thing is that
this has just being

402
00:15:06,040 --> 00:15:08,500
implemented on Chrome
for Android.

403
00:15:08,500 --> 00:15:10,750
So this is really important.

404
00:15:10,750 --> 00:15:14,480
So it's a huge improvement
for accessibility.

405
00:15:14,480 --> 00:15:17,530
And it's also great if you want
to distribute content to

406
00:15:17,530 --> 00:15:20,470
people who are speaking
different languages but want

407
00:15:20,470 --> 00:15:21,240
to watch your videos.

408
00:15:21,240 --> 00:15:21,810
PAUL KINLAN: OK.

409
00:15:21,810 --> 00:15:24,570
So at the moment, the way it
works now, is it overlays

410
00:15:24,570 --> 00:15:25,500
something on the video.

411
00:15:25,500 --> 00:15:25,820
SAM DUTTON: Yeah.

412
00:15:25,820 --> 00:15:26,270
That's right.

413
00:15:26,270 --> 00:15:27,500
PAUL KINLAN: But it doesn't
actually work on Android

414
00:15:27,500 --> 00:15:27,890
properties.

415
00:15:27,890 --> 00:15:29,510
SAM DUTTON: Yeah, now the other
thing I was going to say

416
00:15:29,510 --> 00:15:32,800
is there's a bug.

417
00:15:32,800 --> 00:15:34,480
PAUL KINLAN: But you can get
programmatic control what

418
00:15:34,480 --> 00:15:35,060
you've done there.

419
00:15:35,060 --> 00:15:36,650
SAM DUTTON: Yeah, exactly.

420
00:15:36,650 --> 00:15:38,900
In fact, if we inspect the--
this is kind of interesting

421
00:15:38,900 --> 00:15:43,760
because if we look at the page
on the desktop machine in the

422
00:15:43,760 --> 00:15:46,450
DevTools, and--

423
00:15:46,450 --> 00:15:48,845
I think we can see the--

424
00:15:48,845 --> 00:15:51,010
let's see if I can--

425
00:15:51,010 --> 00:15:52,875
PAUL KINLAN: Do we need to
put the elements or the--

426
00:15:52,875 --> 00:15:54,530
SAM DUTTON: I was going
to try and look at

427
00:15:54,530 --> 00:15:55,970
the elements there.

428
00:15:55,970 --> 00:15:58,220
Thank you, Paul.

429
00:15:58,220 --> 00:15:59,820
He's helping me!

430
00:15:59,820 --> 00:16:00,190
Yes.

431
00:16:00,190 --> 00:16:02,290
So I just wanted to show you
something while we're there.

432
00:16:02,290 --> 00:16:06,640
So if we look at the video here,
I've turned on just to

433
00:16:06,640 --> 00:16:11,280
show you in the DevTools you
could see down in the bottom

434
00:16:11,280 --> 00:16:13,560
there, I've turned
on Shadow DOM.

435
00:16:13,560 --> 00:16:16,330
And what that means is that
it's pretty cool.

436
00:16:16,330 --> 00:16:21,670
I can see the stuff for the
actual tracks there.

437
00:16:21,670 --> 00:16:23,205
So that's pretty neat.

438
00:16:23,205 --> 00:16:26,550
So if I look at the document
fragment there and I burrow

439
00:16:26,550 --> 00:16:28,670
down here and play a bit.

440
00:16:28,670 --> 00:16:30,140
PAUL KINLAN: So what you do now
is you actually embed--

441
00:16:30,140 --> 00:16:33,230
like dive in deep into the
actual video elements, and not

442
00:16:33,230 --> 00:16:35,460
the html representation of it.

443
00:16:35,460 --> 00:16:36,070
SAM DUTTON: That's right.

444
00:16:36,070 --> 00:16:40,250
So if I look in there now, you
can actually see the content

445
00:16:40,250 --> 00:16:43,900
of that cue there.

446
00:16:43,900 --> 00:16:44,210
PAUL KINLAN: Oh wow.

447
00:16:44,210 --> 00:16:45,060
SAM DUTTON: So that's
pretty neat.

448
00:16:45,060 --> 00:16:46,290
PAUL KINLAN: This is actually
pretty nice.

449
00:16:46,290 --> 00:16:48,430
SAM DUTTON: And then you can
fool around with that stuff.

450
00:16:48,430 --> 00:16:50,570
PAUL KINLAN: So is the track
element supported across

451
00:16:50,570 --> 00:16:52,580
browsers yet or is
it just Chrome?

452
00:16:52,580 --> 00:16:56,610
SAM DUTTON: Ah, it's just in
Chrome, but we're hoping for

453
00:16:56,610 --> 00:16:59,120
better support across
other browsers.

454
00:16:59,120 --> 00:17:00,550
PAUL KINLAN: Are there any
shims available for the

455
00:17:00,550 --> 00:17:01,240
developers?

456
00:17:01,240 --> 00:17:02,950
SAM DUTTON: Yeah, there are.

457
00:17:02,950 --> 00:17:03,340
[INAUDIBLE]

458
00:17:03,340 --> 00:17:04,349
I think, did one.

459
00:17:04,349 --> 00:17:08,329
I'll put some some documentation
about that.

460
00:17:08,329 --> 00:17:12,569
Yeah, it's also possible to--
you can get the time of the

461
00:17:12,569 --> 00:17:15,085
video and then kind of
fake it by putting a

462
00:17:15,085 --> 00:17:17,530
div across the element.

463
00:17:17,530 --> 00:17:18,740
But it's not bad.

464
00:17:18,740 --> 00:17:20,589
It's not bad.

465
00:17:20,589 --> 00:17:24,599
By the way, you can also
access the cue

466
00:17:24,599 --> 00:17:27,630
itself to style it.

467
00:17:27,630 --> 00:17:33,280
If I go to the CSS for this
file, let's add a little--

468
00:17:33,280 --> 00:17:38,570

469
00:17:38,570 --> 00:17:43,770
let's add a little style--

470
00:17:43,770 --> 00:17:45,780
hang on, while I type.

471
00:17:45,780 --> 00:17:47,100
PAUL KINLAN: Looks
like [INAUDIBLE].

472
00:17:47,100 --> 00:17:47,700
SAM DUTTON: Yeah.

473
00:17:47,700 --> 00:17:48,750
PAUL KINLAN: Excellent
color red.

474
00:17:48,750 --> 00:17:50,020
OK, cool.

475
00:17:50,020 --> 00:17:51,850
SAM DUTTON: Yeah, you
should be able to--

476
00:17:51,850 --> 00:17:54,920
hang on, it's not going to show
it on the-- because the--

477
00:17:54,920 --> 00:17:55,930
if we did it on this one--

478
00:17:55,930 --> 00:17:57,040
PAUL KINLAN: Can you put one and
say can you bump the fun

479
00:17:57,040 --> 00:17:58,070
size up on it?

480
00:17:58,070 --> 00:17:59,690
SAM DUTTON: Yeah, anyway, it
won't show it on the device

481
00:17:59,690 --> 00:18:01,110
because it's not there.

482
00:18:01,110 --> 00:18:07,700
But that's the pseudo-selector
that is colon-colon-cue.

483
00:18:07,700 --> 00:18:09,680
And there will be some other

484
00:18:09,680 --> 00:18:10,920
pseudo-selectors coming as well.

485
00:18:10,920 --> 00:18:15,700
So you can style cues just as
any other piece of text, which

486
00:18:15,700 --> 00:18:16,690
is really nice.

487
00:18:16,690 --> 00:18:17,266
PAUL KINLAN: Cool.

488
00:18:17,266 --> 00:18:17,960
SAM DUTTON: Yeah.

489
00:18:17,960 --> 00:18:21,150
PAUL KINLAN: So I know that
you did another demo.

490
00:18:21,150 --> 00:18:22,130
Have you go that available
to show?

491
00:18:22,130 --> 00:18:22,980
SAM DUTTON: Yeah, yeah.

492
00:18:22,980 --> 00:18:25,020
I just wanted to-- while
we're talking about--

493
00:18:25,020 --> 00:18:25,350
PAUL KINLAN: This one?

494
00:18:25,350 --> 00:18:26,080
I like this demo.

495
00:18:26,080 --> 00:18:26,570
SAM DUTTON: --track.

496
00:18:26,570 --> 00:18:27,100
Yeah.

497
00:18:27,100 --> 00:18:27,480
Yeah.

498
00:18:27,480 --> 00:18:30,440
So there's couple of things
I've done here.

499
00:18:30,440 --> 00:18:32,570
This is one I really liked.

500
00:18:32,570 --> 00:18:35,090
A guy just going on to
the desktop machine.

501
00:18:35,090 --> 00:18:39,020
This does work on the mobile
device, I have to say.

502
00:18:39,020 --> 00:18:39,570
PAUL KINLAN: It's
not [INAUDIBLE].

503
00:18:39,570 --> 00:18:42,884
SAM DUTTON: The video is like
350 gigs, whatever.

504
00:18:42,884 --> 00:18:44,297
Anyway, it's huge.

505
00:18:44,297 --> 00:18:47,692

506
00:18:47,692 --> 00:18:54,602
And if we bumped this up,
what this guy did was

507
00:18:54,602 --> 00:18:55,950
he took video cycle--

508
00:18:55,950 --> 00:18:57,815
PAUL KINLAN: [INAUDIBLE].

509
00:18:57,815 --> 00:19:00,115
SAM DUTTON: This guy took some
video cycling around the

510
00:19:00,115 --> 00:19:02,450
Google campus of Mountain
View, California.

511
00:19:02,450 --> 00:19:05,270
And he got GPS data
to interact.

512
00:19:05,270 --> 00:19:10,140
And what we're seeing is that,
as he goes around, the little

513
00:19:10,140 --> 00:19:11,088
man moves around the map.

514
00:19:11,088 --> 00:19:13,460
And we're seeing a Street
View synchronized.

515
00:19:13,460 --> 00:19:19,280
Now this is all done via the
cues, so what you can see if

516
00:19:19,280 --> 00:19:20,300
you look down--

517
00:19:20,300 --> 00:19:23,650
I'll just drop it down a bit
so that I can see it.

518
00:19:23,650 --> 00:19:24,145
Yeah.

519
00:19:24,145 --> 00:19:26,620
PAUL KINLAN: I think we're
getting some audio from here.

520
00:19:26,620 --> 00:19:28,105
[INAUDIBLE].

521
00:19:28,105 --> 00:19:30,085
SAM DUTTON: Oh OK, so
people [INAUDIBLE]

522
00:19:30,085 --> 00:19:35,300

523
00:19:35,300 --> 00:19:37,280
That could be better.

524
00:19:37,280 --> 00:19:38,730
Yes, that's working.

525
00:19:38,730 --> 00:19:39,690
Sorry about the extraneous--

526
00:19:39,690 --> 00:19:41,090
PAUL KINLAN: Our producer
in the background is--

527
00:19:41,090 --> 00:19:41,700
SAM DUTTON: Groaning.

528
00:19:41,700 --> 00:19:43,380
PAUL KINLAN: --very pleased.

529
00:19:43,380 --> 00:19:44,130
SAM DUTTON: So this
is really cool.

530
00:19:44,130 --> 00:19:49,170
We had like this track
of xml data, turn

531
00:19:49,170 --> 00:19:52,700
that into Track Cues.

532
00:19:52,700 --> 00:19:55,810
And then we can synchronize the
playback of the video with

533
00:19:55,810 --> 00:19:57,210
the man moving around
the back.

534
00:19:57,210 --> 00:20:00,630
So if we move the man, you
can see the video moves.

535
00:20:00,630 --> 00:20:02,810
And as the video moves,
the man moves.

536
00:20:02,810 --> 00:20:04,650
I really like this
because it was--

537
00:20:04,650 --> 00:20:08,100
the track element wasn't
designed for this stuff.

538
00:20:08,100 --> 00:20:09,730
I did a similar thing
here-- if we

539
00:20:09,730 --> 00:20:11,990
just get back to normal--

540
00:20:11,990 --> 00:20:14,830
I did a little video search
for all the Google Chrome

541
00:20:14,830 --> 00:20:16,590
videos from developer stuff.

542
00:20:16,590 --> 00:20:21,640
So, again, what I've done is
I've got all the Google Chrome

543
00:20:21,640 --> 00:20:26,070
transcripts from DDLs and all
this Google Chrome events.

544
00:20:26,070 --> 00:20:29,570
And there's dozens of them,
190 or something.

545
00:20:29,570 --> 00:20:34,020
And it's searching through all
those and returning these

546
00:20:34,020 --> 00:20:35,680
results for a query.

547
00:20:35,680 --> 00:20:39,550
And then if I click on one of
them, you can see that it goes

548
00:20:39,550 --> 00:20:40,760
directly to that cue.

549
00:20:40,760 --> 00:20:41,390
[VIDEO PLAYBACK]

550
00:20:41,390 --> 00:20:42,270
PAUL KINLAN: Nice.

551
00:20:42,270 --> 00:20:46,770
SAM DUTTON: So, a really great
tool for getting into like

552
00:20:46,770 --> 00:20:49,120
deep navigation and
search in media.

553
00:20:49,120 --> 00:20:52,120
And like I say, this
is now available

554
00:20:52,120 --> 00:20:54,220
on Chrome for Android.

555
00:20:54,220 --> 00:20:56,090
It's really powerful stuff.

556
00:20:56,090 --> 00:20:56,650
PAUL KINLAN: Cool.

557
00:20:56,650 --> 00:20:59,300
That's a very nice demo.

558
00:20:59,300 --> 00:21:00,630
I'm trying to work out much
time we got left.

559
00:21:00,630 --> 00:21:03,060
We haven't probably got
a huge amount of time.

560
00:21:03,060 --> 00:21:05,260
So we did have a section
of video and best

561
00:21:05,260 --> 00:21:06,370
practices with video.

562
00:21:06,370 --> 00:21:08,520
Shall we skip over that and save
that for another episode.

563
00:21:08,520 --> 00:21:09,420
SAM DUTTON: Yeah,
no, absolutely.

564
00:21:09,420 --> 00:21:09,760
Yeah.

565
00:21:09,760 --> 00:21:10,300
Yeah, we can do that.

566
00:21:10,300 --> 00:21:12,650
PAUL KINLAN: Because basically
we want to do a weekly series

567
00:21:12,650 --> 00:21:15,040
for performance, Mobile
Media, and a whole

568
00:21:15,040 --> 00:21:16,160
lot of other things.

569
00:21:16,160 --> 00:21:18,730
And there's a lot to talk about
around how to actually--

570
00:21:18,730 --> 00:21:21,270
the best practices for the video
element and actually how

571
00:21:21,270 --> 00:21:22,300
to deliver video.

572
00:21:22,300 --> 00:21:23,190
SAM DUTTON: Yeah.

573
00:21:23,190 --> 00:21:24,750
PAUL KINLAN: I think we can save
that for another episode.

574
00:21:24,750 --> 00:21:25,680
SAM DUTTON: Yeah, sure.

575
00:21:25,680 --> 00:21:27,380
PAUL KINLAN: And we'll get on to
the really, really, really

576
00:21:27,380 --> 00:21:29,340
sexy stuff, if it all works.

577
00:21:29,340 --> 00:21:29,800
SAM DUTTON: Yes.

578
00:21:29,800 --> 00:21:30,070
PAUL KINLAN: Yes?

579
00:21:30,070 --> 00:21:30,910
Shall we do that.

580
00:21:30,910 --> 00:21:32,440
SAM DUTTON: Yeah.

581
00:21:32,440 --> 00:21:34,830
PAUL KINLAN: So--

582
00:21:34,830 --> 00:21:36,030
SAM DUTTON: Without
further ado.

583
00:21:36,030 --> 00:21:37,080
SAM DUTTON: Yes.

584
00:21:37,080 --> 00:21:41,650
PAUL KINLAN: I'll tell you--
it's a better WebRTC demo.

585
00:21:41,650 --> 00:21:44,220
Yeah, so the actual links to all
the demos that we've got

586
00:21:44,220 --> 00:21:48,120
are going to be on that
documentation that we've got.

587
00:21:48,120 --> 00:21:49,640
So you could actually go
and try these out.

588
00:21:49,640 --> 00:21:53,090
They do work only on Chrome, if
you've enabled the flag for

589
00:21:53,090 --> 00:21:55,120
the moment.

590
00:21:55,120 --> 00:21:56,590
So I encourage everyone
to go out and test it.

591
00:21:56,590 --> 00:21:58,480
It's not a production-ready
feature just

592
00:21:58,480 --> 00:21:59,400
yet for mobile phones.

593
00:21:59,400 --> 00:22:01,500
Hopefully soon.

594
00:22:01,500 --> 00:22:02,050
Don't know when though.

595
00:22:02,050 --> 00:22:03,900
I think it's the easiest
thing to say.

596
00:22:03,900 --> 00:22:05,100
SAM DUTTON: Yep.

597
00:22:05,100 --> 00:22:07,870
So, yeah, just demoing
on the device now.

598
00:22:07,870 --> 00:22:13,380
We've got Data Channel running
just on one page there, which

599
00:22:13,380 --> 00:22:16,460
is a nice little demo showing
Data Channel's working.

600
00:22:16,460 --> 00:22:17,770
PAUL KINLAN: So what would
you use Data Channel for?

601
00:22:17,770 --> 00:22:20,520
SAM DUTTON: Ah, so Data Channel
is great for really,

602
00:22:20,520 --> 00:22:24,410
really low latency transfer
data between peers.

603
00:22:24,410 --> 00:22:26,730
The point is you need the
messaging and all that stuff,

604
00:22:26,730 --> 00:22:29,400
as per any connectivity.

605
00:22:29,400 --> 00:22:31,500
You need to be able to connect
between the two devices.

606
00:22:31,500 --> 00:22:34,450
Once that's set up, you're going
as directly as possible

607
00:22:34,450 --> 00:22:36,670
between them which is neat.

608
00:22:36,670 --> 00:22:38,930
So faster than WebSockets
is the point.

609
00:22:38,930 --> 00:22:40,020
PAUL KINLAN: So that's actually
really interesting,

610
00:22:40,020 --> 00:22:42,190
because two of the projects
I've worked on-- the Super

611
00:22:42,190 --> 00:22:43,980
Sync Chrome, Super Sync Sports,
and [? Jamware ?]

612
00:22:43,980 --> 00:22:47,260
Chrome, they've all of this user
interaction piece, where

613
00:22:47,260 --> 00:22:50,590
basically the user will find
another user in a different

614
00:22:50,590 --> 00:22:54,345
country and have a race or
they'll make a band and join

615
00:22:54,345 --> 00:22:55,240
it together.

616
00:22:55,240 --> 00:22:57,680
And you have to have
low latency

617
00:22:57,680 --> 00:22:58,800
messaging between the peers.

618
00:22:58,800 --> 00:23:01,146
And there can be up to five
peers in each game,

619
00:23:01,146 --> 00:23:01,770
I think, at a time.

620
00:23:01,770 --> 00:23:02,440
SAM DUTTON: Yeah,
that's great.

621
00:23:02,440 --> 00:23:06,360
PAUL KINLAN: Now, they couldn't
use WebRTC because it

622
00:23:06,360 --> 00:23:07,640
wasn't available at the time.

623
00:23:07,640 --> 00:23:10,260
So they use WebSockets, where
they basically have a central

624
00:23:10,260 --> 00:23:13,700
server which one client pings
the server and bounces it off

625
00:23:13,700 --> 00:23:15,790
to the other participants.

626
00:23:15,790 --> 00:23:17,960
Obviously, it's an extra hop of
latency, and you don't know

627
00:23:17,960 --> 00:23:20,440
where the main servers are and
all this other stuff as well.

628
00:23:20,440 --> 00:23:23,290
So I'm presuming that Data
Channel itself as an API will

629
00:23:23,290 --> 00:23:24,880
be something that's really
quite powerful.

630
00:23:24,880 --> 00:23:25,820
SAM DUTTON: Yeah, absolutely.

631
00:23:25,820 --> 00:23:29,510
And we haven't got
it here today.

632
00:23:29,510 --> 00:23:33,110
But there's been
interoperability demonstrated

633
00:23:33,110 --> 00:23:35,170
with Firefox, which
is fantastic.

634
00:23:35,170 --> 00:23:36,020
PAUL KINLAN: Oh, for
Data Channel?

635
00:23:36,020 --> 00:23:38,220
SAM DUTTON: So in other words,
we're talking about full

636
00:23:38,220 --> 00:23:43,330
WebRTC interop between Firefox
Mobile Desktop and Chrome

637
00:23:43,330 --> 00:23:43,780
Mobile Desktop.

638
00:23:43,780 --> 00:23:44,860
PAUL KINLAN: It's
pretty powerful.

639
00:23:44,860 --> 00:23:46,720
SAM DUTTON: Really exciting.

640
00:23:46,720 --> 00:23:50,000
There's a bunch of these new
libraries and apps coming

641
00:23:50,000 --> 00:23:52,330
through, which is just
what we hoped for.

642
00:23:52,330 --> 00:23:56,740
We got stuff like Peer.js,
easyRTC and so on.

643
00:23:56,740 --> 00:24:00,960
And the easyRTC estimate is
something like 3 billion

644
00:24:00,960 --> 00:24:06,320
WebRTC devices in the next--
about 2016, so huge, huge

645
00:24:06,320 --> 00:24:07,290
potential there.

646
00:24:07,290 --> 00:24:07,840
PAUL KINLAN: That's
going to be cool.

647
00:24:07,840 --> 00:24:11,470
I think it's one of those
fundamental pieces of tech

648
00:24:11,470 --> 00:24:13,510
that's available to the web that
literally changes the way

649
00:24:13,510 --> 00:24:15,140
that we communicate
with people.

650
00:24:15,140 --> 00:24:17,670
SAM DUTTON: Yeah, I like the
way one of the WebRTC

651
00:24:17,670 --> 00:24:18,640
engineers described to me.

652
00:24:18,640 --> 00:24:22,840
He said with RTC Data Channel
you're up against the speed of

653
00:24:22,840 --> 00:24:24,040
light problem now.

654
00:24:24,040 --> 00:24:26,430
They're really hitting
the wall.

655
00:24:26,430 --> 00:24:28,350
PAUL KINLAN: It seems like
a telecoms problem now.

656
00:24:28,350 --> 00:24:29,530
Does that make sense?

657
00:24:29,530 --> 00:24:30,180
SAM DUTTON: Yeah.

658
00:24:30,180 --> 00:24:31,100
Exactly.

659
00:24:31,100 --> 00:24:33,240
PAUL KINLAN: I always find the
API like a telecoms API, but

660
00:24:33,240 --> 00:24:34,640
[INAUDIBLE]--

661
00:24:34,640 --> 00:24:36,700
like you're getting these APIs
built on top of it now.

662
00:24:36,700 --> 00:24:39,040
SAM DUTTON: Yeah, no, no, we
got these great libraries

663
00:24:39,040 --> 00:24:40,840
coming through.

664
00:24:40,840 --> 00:24:44,780
If people want to look, check
out the links, and you'll see

665
00:24:44,780 --> 00:24:47,950
that we've got these libraries
like easyRTC, like full stack

666
00:24:47,950 --> 00:24:50,000
for the back-end, the front-end,
messaging,

667
00:24:50,000 --> 00:24:51,040
everything in there.

668
00:24:51,040 --> 00:24:54,450
So you don't have to-- yeah,
the API can be--

669
00:24:54,450 --> 00:24:56,900
it's a lot of work to get your
head around the whole deal

670
00:24:56,900 --> 00:24:59,940
with messaging, peer
connections, turn service,

671
00:24:59,940 --> 00:25:01,960
[INAUDIBLE] service and so on.

672
00:25:01,960 --> 00:25:02,250
PAUL KINLAN: Cool.

673
00:25:02,250 --> 00:25:05,762
So should we do the-- can we
show the demo that we were

674
00:25:05,762 --> 00:25:05,895
going to show?

675
00:25:05,895 --> 00:25:06,690
SAM DUTTON: Ohhh,
come on then.

676
00:25:06,690 --> 00:25:08,510
PAUL KINLAN: I know we haven't
got an amazing amount time,

677
00:25:08,510 --> 00:25:10,311
and there's probably not
much point in showing a

678
00:25:10,311 --> 00:25:11,010
lot of code for this.

679
00:25:11,010 --> 00:25:13,670
But it's a pretty good
one, this one.

680
00:25:13,670 --> 00:25:14,170
SAM DUTTON: OK.

681
00:25:14,170 --> 00:25:16,560
So I wanted to use this app.

682
00:25:16,560 --> 00:25:17,940
I don't even know
the name of it.

683
00:25:17,940 --> 00:25:22,230
I think it's conversatio
or conversat.io.

684
00:25:22,230 --> 00:25:24,750
Let's see if I can
it get to work.

685
00:25:24,750 --> 00:25:31,670
So I'm going to this site,
converset.io/ok.

686
00:25:31,670 --> 00:25:33,540
This it's all you have
to do to join

687
00:25:33,540 --> 00:25:34,840
this video chat client.

688
00:25:34,840 --> 00:25:36,110
You're allowed to--

689
00:25:36,110 --> 00:25:37,995
PAUL KINLAN: I will just say
though to everyone we're not

690
00:25:37,995 --> 00:25:39,550
actually streaming live.

691
00:25:39,550 --> 00:25:39,900
SAM DUTTON: Wow!

692
00:25:39,900 --> 00:25:40,400
It's done it.

693
00:25:40,400 --> 00:25:41,390
PAUL KINLAN: How cool.

694
00:25:41,390 --> 00:25:41,990
SAM DUTTON: That's great!

695
00:25:41,990 --> 00:25:43,580
PAUL KINLAN: This
is really cool.

696
00:25:43,580 --> 00:25:45,695
So I can see your hand moving
in front of the camera.

697
00:25:45,695 --> 00:25:46,800
SAM DUTTON: I'll try
and get in there.

698
00:25:46,800 --> 00:25:48,661
Hello Paul.

699
00:25:48,661 --> 00:25:49,560
PAUL KINLAN: I saw
your glasses.

700
00:25:49,560 --> 00:25:49,980
How cool.

701
00:25:49,980 --> 00:25:50,350
SAM DUTTON: Yeah.

702
00:25:50,350 --> 00:25:52,100
OK.

703
00:25:52,100 --> 00:25:54,810
PAUL KINLAN: So you can't join
us now because we're actually

704
00:25:54,810 --> 00:25:56,170
cheating a little bit,
and not filming

705
00:25:56,170 --> 00:25:58,400
exactly live this week.

706
00:25:58,400 --> 00:26:00,650
But if we were live, you
could get people

707
00:26:00,650 --> 00:26:02,120
joining in quite easily.

708
00:26:02,120 --> 00:26:05,170
Because you look at that URL,
use this extra service.

709
00:26:05,170 --> 00:26:07,090
It's pretty nice.

710
00:26:07,090 --> 00:26:09,140
SAM DUTTON: Yeah,
that's right.

711
00:26:09,140 --> 00:26:10,000
PAUL KINLAN: Hello.

712
00:26:10,000 --> 00:26:10,730
SAM DUTTON: Lovely, yeah.

713
00:26:10,730 --> 00:26:12,280
I'm going to kill it off now.

714
00:26:12,280 --> 00:26:13,310
PAUL KINLAN: That was actually
pretty quick.

715
00:26:13,310 --> 00:26:13,800
SAM DUTTON: I know.

716
00:26:13,800 --> 00:26:14,710
PAUL KINLAN: It's pretty cool.

717
00:26:14,710 --> 00:26:15,090
SAM DUTTON: It's fantastic.

718
00:26:15,090 --> 00:26:16,465
PAUL KINLAN: Well, did our
producer want to join into

719
00:26:16,465 --> 00:26:17,715
this conversation?

720
00:26:17,715 --> 00:26:19,360

721
00:26:19,360 --> 00:26:19,970
SAM DUTTON: Slash ok.

722
00:26:19,970 --> 00:26:20,860
PAUL KINLAN: We need to give
him some love at least.

723
00:26:20,860 --> 00:26:22,110
SAM DUTTON: Is he there?

724
00:26:22,110 --> 00:26:24,616

725
00:26:24,616 --> 00:26:25,540
Is he coming through?

726
00:26:25,540 --> 00:26:26,760
PAUL KINLAN: Aww, he's
got a sad face.

727
00:26:26,760 --> 00:26:28,010
SAM DUTTON: Sad face.

728
00:26:28,010 --> 00:26:30,450

729
00:26:30,450 --> 00:26:31,735
PAUL KINLAN: Forward slash OK?

730
00:26:31,735 --> 00:26:33,660
No?

731
00:26:33,660 --> 00:26:37,590
He's motioning to us like
he's got something.

732
00:26:37,590 --> 00:26:38,440
SAM DUTTON: He's getting
something.

733
00:26:38,440 --> 00:26:40,740
Just while that's happening,
the other thing that we're

734
00:26:40,740 --> 00:26:44,640
getting with these set
ups like easyRTC is

735
00:26:44,640 --> 00:26:47,030
access to SIP gateways.

736
00:26:47,030 --> 00:26:52,160
What that means is we can get
from the WebRTC, Web World to

737
00:26:52,160 --> 00:26:54,872
the what's called the--
here he is!

738
00:26:54,872 --> 00:26:56,560
PAUL KINLAN: Hello.

739
00:26:56,560 --> 00:26:58,204
You can say hello as well.

740
00:26:58,204 --> 00:27:00,192
PRODUCER: Hello.

741
00:27:00,192 --> 00:27:01,700
SAM DUTTON: Tragically,
I can't see him here.

742
00:27:01,700 --> 00:27:02,310
You can see him--

743
00:27:02,310 --> 00:27:03,790
PAUL KINLAN: I can see
him on my desktop.

744
00:27:03,790 --> 00:27:04,940
SAM DUTTON: Can we put that
one under the camera?

745
00:27:04,940 --> 00:27:05,900
PAUL KINLAN: Yeah, we can put
that into the camera, I think.

746
00:27:05,900 --> 00:27:06,320
SAM DUTTON: Come on.

747
00:27:06,320 --> 00:27:07,710
PAUL KINLAN: Just to prove
that it's actually--

748
00:27:07,710 --> 00:27:08,200
SAM DUTTON: Yeah,
it is working.

749
00:27:08,200 --> 00:27:10,490
PAUL KINLAN: Paul, give him
a couple seconds of fame.

750
00:27:10,490 --> 00:27:13,410
I know you can't see very
well but there we are.

751
00:27:13,410 --> 00:27:13,820
SAM DUTTON: Yeah.

752
00:27:13,820 --> 00:27:14,760
The man behind the desk.

753
00:27:14,760 --> 00:27:17,640
PAUL KINLAN: He's actually
gone off from him Nexus--

754
00:27:17,640 --> 00:27:21,122
Galaxy Nexus S, is it? or
Galaxy Nexus phone?

755
00:27:21,122 --> 00:27:22,836
I can't remember which
one it is, but--

756
00:27:22,836 --> 00:27:23,750
SAM DUTTON: Yeah.

757
00:27:23,750 --> 00:27:25,250
PAUL KINLAN: Wow, I can
hear my voice about

758
00:27:25,250 --> 00:27:25,750
half a second later.

759
00:27:25,750 --> 00:27:26,610
SAM DUTTON: That
is a bit weird.

760
00:27:26,610 --> 00:27:28,415
I might have to kill
this, I think.

761
00:27:28,415 --> 00:27:30,510
PAUL KINLAN: I cut off my own.

762
00:27:30,510 --> 00:27:31,540
That's actually pretty
impressive.

763
00:27:31,540 --> 00:27:31,820
SAM DUTTON: Yeah.

764
00:27:31,820 --> 00:27:32,790
It's great.

765
00:27:32,790 --> 00:27:34,180
PAUL KINLAN: That's the type of
thing that can be enabled

766
00:27:34,180 --> 00:27:34,810
by this, right?

767
00:27:34,810 --> 00:27:34,980
SAM DUTTON: Yeah.

768
00:27:34,980 --> 00:27:35,910
PAUL KINLAN: And once
it's on phones

769
00:27:35,910 --> 00:27:37,830
and tablets and desktops?

770
00:27:37,830 --> 00:27:38,400
SAM DUTTON: Yeah.

771
00:27:38,400 --> 00:27:42,131
PAUL KINLAN: We've got a pretty
ubiquitous kind of

772
00:27:42,131 --> 00:27:42,540
communication.

773
00:27:42,540 --> 00:27:45,200
SAM DUTTON: This is exactly
what we hoped for, like

774
00:27:45,200 --> 00:27:47,160
easyRTC has the full stack.

775
00:27:47,160 --> 00:27:48,730
It's ready to go.

776
00:27:48,730 --> 00:27:51,860
it's easy to use and just to
build that into your web apps.

777
00:27:51,860 --> 00:27:55,250
Also Peer.js, I recommend
for Data Channel.

778
00:27:55,250 --> 00:27:57,390
I won't show you the code
now, but it's really

779
00:27:57,390 --> 00:27:57,710
straight-forward.

780
00:27:57,710 --> 00:27:58,340
PAUL KINLAN: We can
go into that.

781
00:27:58,340 --> 00:28:00,830
If people are interested, we can
do another episode around

782
00:28:00,830 --> 00:28:05,240
Peer.js, building mobile apps
which are collaborative,

783
00:28:05,240 --> 00:28:05,980
essentially.

784
00:28:05,980 --> 00:28:07,520
SAM DUTTON: I mean the nice
thing about these places like

785
00:28:07,520 --> 00:28:09,990
Peer.js is that they're offering
the full back-in

786
00:28:09,990 --> 00:28:10,460
service to it.

787
00:28:10,460 --> 00:28:14,390
So they're offering turn
service, turn service, and the

788
00:28:14,390 --> 00:28:15,270
messaging hosting.

789
00:28:15,270 --> 00:28:19,180
All you put in your code is a
couple of lines, give or take,

790
00:28:19,180 --> 00:28:21,495
and who you want to communicate
with, and that's

791
00:28:21,495 --> 00:28:21,920
it

792
00:28:21,920 --> 00:28:23,060
PAUL KINLAN: I really like the
stuff that's happening now,

793
00:28:23,060 --> 00:28:26,200
because I remember a couple
years ago we did this app

794
00:28:26,200 --> 00:28:27,855
where you could dial a screen.

795
00:28:27,855 --> 00:28:29,810
Like you'd ring up a phone
number and then

796
00:28:29,810 --> 00:28:30,800
start talking to screen.

797
00:28:30,800 --> 00:28:32,260
And it was a hack upon a hack.

798
00:28:32,260 --> 00:28:34,650
It was like XMPP
in the back-end

799
00:28:34,650 --> 00:28:36,510
talking to the screen.

800
00:28:36,510 --> 00:28:40,060
We got like hosted voice XML
solution which would fire off

801
00:28:40,060 --> 00:28:44,090
the request when you said
North and South.

802
00:28:44,090 --> 00:28:46,720
It was pretty cool for the time,
but it was such a pain.

803
00:28:46,720 --> 00:28:47,390
It was quite slow.

804
00:28:47,390 --> 00:28:49,610
And if you can just dial
straight into a web page, via

805
00:28:49,610 --> 00:28:50,025
a SIP gateway--

806
00:28:50,025 --> 00:28:50,290
SAM DUTTON: Ohh, I know.

807
00:28:50,290 --> 00:28:51,250
It's good.

808
00:28:51,250 --> 00:28:52,820
PAUL KINLAN: I'm actually quite
kind of excited by this.

809
00:28:52,820 --> 00:28:55,970
SAM DUTTON: Yeah, yeah, that
whole thing, what's called

810
00:28:55,970 --> 00:28:59,120
PSTN, which is like the normal
telephone network, completely

811
00:28:59,120 --> 00:29:03,060
now interoperable with WebRTC
apps running on computers.

812
00:29:03,060 --> 00:29:05,600
I mean, cool, fantastic.

813
00:29:05,600 --> 00:29:07,020
PAUL KINLAN: So yes.

814
00:29:07,020 --> 00:29:07,630
Thank you very much.

815
00:29:07,630 --> 00:29:08,740
I think that ends our time.

816
00:29:08,740 --> 00:29:10,680
I think we're run over
our allotted time.

817
00:29:10,680 --> 00:29:12,180
We've actually got a
lot to talk about.

818
00:29:12,180 --> 00:29:14,530
We did this with Jake's show
the other day, where we ran

819
00:29:14,530 --> 00:29:16,500
quite a lot over.

820
00:29:16,500 --> 00:29:19,120
We've got a lot of content
to tell you guys.

821
00:29:19,120 --> 00:29:20,470
It's not all going to
be Chrome-based.

822
00:29:20,470 --> 00:29:23,210
It's going to be best practices
for building mobile

823
00:29:23,210 --> 00:29:25,370
media based applications.

824
00:29:25,370 --> 00:29:28,410
So suppose without much
further of ado--

825
00:29:28,410 --> 00:29:28,950
is that even a phrase?

826
00:29:28,950 --> 00:29:29,330
SAM DUTTON: Further of ado?

827
00:29:29,330 --> 00:29:30,110
PAUL KINLAN: Futher of ado?

828
00:29:30,110 --> 00:29:31,920
Without much further
of something.

829
00:29:31,920 --> 00:29:33,170
SAM DUTTON: Sounds good.

830
00:29:33,170 --> 00:29:34,580
PAUL KINLAN: I think
we'll end it there.

831
00:29:34,580 --> 00:29:36,060
I'm Paul Kinlan.

832
00:29:36,060 --> 00:29:36,740
SAM DUTTON: I'm Sam Dutton.

833
00:29:36,740 --> 00:29:39,040
And yeah, we'll be bringing
you lots more stuff about

834
00:29:39,040 --> 00:29:41,510
using the video element on
mobile devices and all that.

835
00:29:41,510 --> 00:29:42,830
PAUL KINLAN: And thank
you to Paul Lewis,

836
00:29:42,830 --> 00:29:43,490
our producer today.

837
00:29:43,490 --> 00:29:44,940
SAM DUTTON: Yes, good man.

838
00:29:44,940 --> 00:29:46,550
PAUL KINLAN: So. thank
you very much, and

839
00:29:46,550 --> 00:29:47,345
we'll see you soon.

840
00:29:47,345 --> 00:29:48,430
SAM DUTTON: See you next time.

841
00:29:48,430 --> 00:29:49,680
Bye.

842
00:29:49,680 --> 00:30:57,642

