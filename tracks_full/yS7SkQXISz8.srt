1
00:00:00,000 --> 00:03:59,550

2
00:03:59,550 --> 00:04:00,290
PETE LEPAGE: All right.

3
00:04:00,290 --> 00:04:01,310
Hello everyone.

4
00:04:01,310 --> 00:04:03,950
Let's try this one more time.

5
00:04:03,950 --> 00:04:08,820
Welcome and thank you for
joining me for a special

6
00:04:08,820 --> 00:04:11,220
Chrome Mobile Office Hours.

7
00:04:11,220 --> 00:04:14,540
Today I'm going to be diving
into a bunch of great tools

8
00:04:14,540 --> 00:04:17,820
that you can use as a web
developer to really build out

9
00:04:17,820 --> 00:04:20,600
your skill set and make yourself
more productive in

10
00:04:20,600 --> 00:04:22,590
the things that you're doing
when you're building for the

11
00:04:22,590 --> 00:04:24,530
mobile web.

12
00:04:24,530 --> 00:04:25,750
We're going to take a
look at some demos.

13
00:04:25,750 --> 00:04:29,210
We're going to take a look at
some libraries and frameworks.

14
00:04:29,210 --> 00:04:31,390
With that, why don't we
jump in and have a

15
00:04:31,390 --> 00:04:32,640
look at some slides.

16
00:04:32,640 --> 00:04:35,060

17
00:04:35,060 --> 00:04:36,640
Today is the first part.

18
00:04:36,640 --> 00:04:38,860
We'll be having our
second version

19
00:04:38,860 --> 00:04:40,710
of this next Wednesday.

20
00:04:40,710 --> 00:04:44,180
and we'll dive into some great
testing tools and a couple of

21
00:04:44,180 --> 00:04:46,560
other devices and things
at that time.

22
00:04:46,560 --> 00:04:49,400
But for today, we're going to
look at the development

23
00:04:49,400 --> 00:04:54,010
environment that's important
when you're building great web

24
00:04:54,010 --> 00:04:57,650
applications, and particularly
for the mobile.

25
00:04:57,650 --> 00:05:00,680
It's really easy to go and just
hack stuff together with

26
00:05:00,680 --> 00:05:03,310
Notepad kind of equivalents.

27
00:05:03,310 --> 00:05:06,080
But really, we become much more
productive when we have

28
00:05:06,080 --> 00:05:07,650
really solid tools.

29
00:05:07,650 --> 00:05:10,610
We'll take a look at some things
that will remove some

30
00:05:10,610 --> 00:05:14,360
of the authoring abstractions
or provide some abstractions

31
00:05:14,360 --> 00:05:18,610
to what we're trying to write,
so that we end up not having

32
00:05:18,610 --> 00:05:22,940
to deal with a lot of the
crazy or merging stuff

33
00:05:22,940 --> 00:05:25,190
together and all that.

34
00:05:25,190 --> 00:05:27,940
Then we'll move into some of the
frameworks and libraries.

35
00:05:27,940 --> 00:05:31,460
Things that will help make your
life easier to get things

36
00:05:31,460 --> 00:05:34,760
done and easier to be able to
handle some of the stuff that

37
00:05:34,760 --> 00:05:37,380
you don't enjoy doing--

38
00:05:37,380 --> 00:05:41,270
or somebody else has already
written it, so why bother

39
00:05:41,270 --> 00:05:43,110
writing it again?

40
00:05:43,110 --> 00:05:47,010
Next week, we'll take a look at
performance, testing, and

41
00:05:47,010 --> 00:05:50,070
build optimization.

42
00:05:50,070 --> 00:05:52,400
If you're looking for some other
stuff, there's a great

43
00:05:52,400 --> 00:05:55,120
place there where you can check
out Paul's Tooling and

44
00:05:55,120 --> 00:05:56,640
the Web App Development Stack.

45
00:05:56,640 --> 00:05:58,720
That's a great presentation
that he's got online.

46
00:05:58,720 --> 00:06:02,970
You can download that or pop
through those slides.

47
00:06:02,970 --> 00:06:05,740
These slides will be available
online afterwards.

48
00:06:05,740 --> 00:06:13,260
And as well, if you look there,
say right about there--

49
00:06:13,260 --> 00:06:16,640
OK, well maybe it's a little
that way-- but anyways, if you

50
00:06:16,640 --> 00:06:20,210
have questions as we're going
along, please post them to our

51
00:06:20,210 --> 00:06:21,780
moderator queue.

52
00:06:21,780 --> 00:06:24,980
And I'll do my best to answer
those questions as we move

53
00:06:24,980 --> 00:06:28,530
through the day.

54
00:06:28,530 --> 00:06:31,150
Let's first of all take a jump
into the development

55
00:06:31,150 --> 00:06:32,210
environment--

56
00:06:32,210 --> 00:06:35,670
things that you're using to
code, compile, to build, and

57
00:06:35,670 --> 00:06:39,050
reload your pages.

58
00:06:39,050 --> 00:06:43,150
I have a personal favorite
development environment.

59
00:06:43,150 --> 00:06:45,700
And that's Sublime Text 2.

60
00:06:45,700 --> 00:06:49,600
Sublime Text 2 makes my life
really easy in terms of

61
00:06:49,600 --> 00:06:53,960
providing intellisense so that
I can go in and start typing

62
00:06:53,960 --> 00:06:56,170
something, have it
auto complete.

63
00:06:56,170 --> 00:06:59,800
It does it for not just HTML
and JavaScript, but if I'm

64
00:06:59,800 --> 00:07:03,300
writing something for maybe App
Engine and using Python--

65
00:07:03,300 --> 00:07:07,190
or maybe I'm using Java, or
whatever back-end languages I

66
00:07:07,190 --> 00:07:08,540
want to be able to use--

67
00:07:08,540 --> 00:07:10,530
all of that stuff
is right there.

68
00:07:10,530 --> 00:07:14,210
Easy for me to be able to
go in, get access to,

69
00:07:14,210 --> 00:07:16,160
run quick and easy.

70
00:07:16,160 --> 00:07:20,402
In fact, let's just pop out of
here for a sec and I'm going

71
00:07:20,402 --> 00:07:22,600
to bring up Sublime.

72
00:07:22,600 --> 00:07:24,810
This is actually the
presentation that we're

73
00:07:24,810 --> 00:07:26,190
looking at right now.

74
00:07:26,190 --> 00:07:29,880
You can see that it's got all
of the intellisense that I'd

75
00:07:29,880 --> 00:07:31,910
normally be looking for--

76
00:07:31,910 --> 00:07:34,950
code coloring makes it really
easy to find stuff.

77
00:07:34,950 --> 00:07:37,120
If I create a new file--

78
00:07:37,120 --> 00:07:38,330
actually, I didn't
want to do that.

79
00:07:38,330 --> 00:07:45,730
Let's say File, New and I'm just
going to save this as an

80
00:07:45,730 --> 00:07:49,760
HTML file, demo.html.

81
00:07:49,760 --> 00:07:50,650
Save this.

82
00:07:50,650 --> 00:07:53,490
One of my favorite things
is the snippets.

83
00:07:53,490 --> 00:07:58,240
I can actually just type in HTML
and Sublime has a snippet

84
00:07:58,240 --> 00:08:01,110
already saved allowing
me to go in and fill

85
00:08:01,110 --> 00:08:02,110
these things in.

86
00:08:02,110 --> 00:08:04,450
It provides great tab completion
between the

87
00:08:04,450 --> 00:08:05,460
different events.

88
00:08:05,460 --> 00:08:07,410
You can go and add
these yourself.

89
00:08:07,410 --> 00:08:10,540
You can grab others from other
developers who have already

90
00:08:10,540 --> 00:08:12,350
created these things.

91
00:08:12,350 --> 00:08:14,700
It's a great text editor.

92
00:08:14,700 --> 00:08:17,340
I always forget the simple
syntax on stuff.

93
00:08:17,340 --> 00:08:21,340
I could type, for
example, link--

94
00:08:21,340 --> 00:08:24,920
because I want to add a CSS
style sheet in here--

95
00:08:24,920 --> 00:08:25,390
done.

96
00:08:25,390 --> 00:08:26,890
All I did was hit Tab.

97
00:08:26,890 --> 00:08:28,260
It completed everything--

98
00:08:28,260 --> 00:08:31,430
put my cursor into the right
place so that I could quickly

99
00:08:31,430 --> 00:08:35,360
and easily be able to get in and
do the things that I want.

100
00:08:35,360 --> 00:08:38,450
It's not for everybody, but it
does save a lot of time and it

101
00:08:38,450 --> 00:08:40,690
works for the PC, it
works for the Mac.

102
00:08:40,690 --> 00:08:44,020
Really easy to be able to go
and use, get access to it

103
00:08:44,020 --> 00:08:47,910
without having to go and
do anything too crazy.

104
00:08:47,910 --> 00:08:51,320
And I think to buy it,
it's about $25.

105
00:08:51,320 --> 00:08:54,070
It's relatively inexpensive,
really easy to go

106
00:08:54,070 --> 00:08:57,070
get your hands on.

107
00:08:57,070 --> 00:09:01,260
If we pop back to the slides,
the other one that I really

108
00:09:01,260 --> 00:09:05,350
like is an app called CodeKit.

109
00:09:05,350 --> 00:09:07,380
And CodeKit--

110
00:09:07,380 --> 00:09:09,800
you can do this with build
scripts, you could do this

111
00:09:09,800 --> 00:09:11,480
with something like Yeoman.

112
00:09:11,480 --> 00:09:15,810
I find CodeKit was really easy
for me to be able to just plug

113
00:09:15,810 --> 00:09:18,110
into a bunch of my existing
projects.

114
00:09:18,110 --> 00:09:22,220
But I think the developer of
CodeKit calls it, it's like

115
00:09:22,220 --> 00:09:24,150
steroids for web developers.

116
00:09:24,150 --> 00:09:27,220
I really like to think of it
as something to do all the

117
00:09:27,220 --> 00:09:28,390
hard work for me.

118
00:09:28,390 --> 00:09:31,230
Something to do all the things
that I don't like to do, that

119
00:09:31,230 --> 00:09:34,000
I don't want to have to go in
and be like, oh, how do I do

120
00:09:34,000 --> 00:09:36,630
this, or what do I need
to go to do that.

121
00:09:36,630 --> 00:09:40,630
It will automatically compile
pretty much everything from

122
00:09:40,630 --> 00:09:45,655
CSS, to SCSS, to Less, all
that kind of stuff.

123
00:09:45,655 --> 00:09:46,920
It'll do JavaScript.

124
00:09:46,920 --> 00:09:51,360
It'll do inserting
HTML into places.

125
00:09:51,360 --> 00:09:55,000
That was a really great
tool that I found

126
00:09:55,000 --> 00:09:55,960
worked really well.

127
00:09:55,960 --> 00:10:00,080
It will also do JSHinting and
JSLinting, so that as I go

128
00:10:00,080 --> 00:10:02,650
through and work on my projects,
it tells me when I

129
00:10:02,650 --> 00:10:05,120
do something that maybe
I shouldn't be doing.

130
00:10:05,120 --> 00:10:06,730
It's a quick, easy way.

131
00:10:06,730 --> 00:10:10,910
In fact, if I bring up CodeKit
right now, you can see here's

132
00:10:10,910 --> 00:10:14,700
the CodeKit for my mobile
tool belt project.

133
00:10:14,700 --> 00:10:15,960
There's the slide config.

134
00:10:15,960 --> 00:10:18,930
It doesn't import anything.

135
00:10:18,930 --> 00:10:20,400
And it's not imported
by anything.

136
00:10:20,400 --> 00:10:23,820
But I can check the syntax with
JSHint, and then I can

137
00:10:23,820 --> 00:10:25,870
concatenate [INAUDIBLE]

138
00:10:25,870 --> 00:10:28,430
any files that I need
to work with.

139
00:10:28,430 --> 00:10:30,280
Couple of great little
things there.

140
00:10:30,280 --> 00:10:34,080
Really easy to be able to go
and work with these guys.

141
00:10:34,080 --> 00:10:35,160
I really like CodeKit.

142
00:10:35,160 --> 00:10:36,610
I'd recommend that one.

143
00:10:36,610 --> 00:10:40,030
It's only available for the Mac,
but I'm sure there are

144
00:10:40,030 --> 00:10:42,350
other equivalent ones
for the PC.

145
00:10:42,350 --> 00:10:46,670
Or you could really-- if you
wanted to be down and dirty--

146
00:10:46,670 --> 00:10:49,530
you could write your own build
scripts to go and take care of

147
00:10:49,530 --> 00:10:51,790
some of this stuff.

148
00:10:51,790 --> 00:10:54,310
But let's dive into some of the
development tools, some of

149
00:10:54,310 --> 00:10:57,540
the things that are worthwhile
using, worthwhile getting our

150
00:10:57,540 --> 00:11:02,150
hands into, and making great
mobile websites.

151
00:11:02,150 --> 00:11:05,190

152
00:11:05,190 --> 00:11:08,260
One of the biggest complaints
that I've often heard from

153
00:11:08,260 --> 00:11:10,860
developers is they often think
that, oh you know, it's this

154
00:11:10,860 --> 00:11:11,410
mobile site.

155
00:11:11,410 --> 00:11:12,360
It's got to be ugly.

156
00:11:12,360 --> 00:11:13,430
It's got to be--

157
00:11:13,430 --> 00:11:15,190
oh it's mobile.

158
00:11:15,190 --> 00:11:18,240
There's so many devices to go
handle or there's so much

159
00:11:18,240 --> 00:11:20,690
stuff, I just like, oh.

160
00:11:20,690 --> 00:11:23,830
Don't let the fact that people
are saying, oh it's mobile, or

161
00:11:23,830 --> 00:11:26,616
oh, it's enterprise, or
oh, it's the web be

162
00:11:26,616 --> 00:11:27,610
an excuse for ugly.

163
00:11:27,610 --> 00:11:30,050
That's just lame.

164
00:11:30,050 --> 00:11:31,130
Beauty sells.

165
00:11:31,130 --> 00:11:32,260
We all know that.

166
00:11:32,260 --> 00:11:36,170
When you go into any store,
anybody who has a beautiful

167
00:11:36,170 --> 00:11:39,850
product, you go, oh this is
pretty, I want this, right?

168
00:11:39,850 --> 00:11:42,160
We want beautiful stuff.

169
00:11:42,160 --> 00:11:44,810
Building a more lickable
mobile web is really

170
00:11:44,810 --> 00:11:46,890
important, and something
that we should spend

171
00:11:46,890 --> 00:11:48,550
more time on doing.

172
00:11:48,550 --> 00:11:51,790
There's a couple of great things
that you can take a

173
00:11:51,790 --> 00:11:54,040
look at for this.

174
00:11:54,040 --> 00:11:58,010
Mobile Patterns and patterns.com
are two really

175
00:11:58,010 --> 00:12:02,280
great sites that provide some
great examples, show what

176
00:12:02,280 --> 00:12:04,370
other people have done,
and lay things out.

177
00:12:04,370 --> 00:12:06,420
Let me pull one of these
up right now.

178
00:12:06,420 --> 00:12:09,980
This is Mobile Patterns, but
you could see here's some

179
00:12:09,980 --> 00:12:14,950
interesting ways on what this
company has done to provide

180
00:12:14,950 --> 00:12:17,690
easy access to stuff
for messaging.

181
00:12:17,690 --> 00:12:20,680
And one of the things I really
like about this, is they have

182
00:12:20,680 --> 00:12:23,580
different ways that I can go in
and I can say, hey, I want

183
00:12:23,580 --> 00:12:26,410
to see what people have done
for photo galleries.

184
00:12:26,410 --> 00:12:29,250
I can see all sorts of different
photo galleries and

185
00:12:29,250 --> 00:12:32,010
see what people have done to
create photo galleries.

186
00:12:32,010 --> 00:12:35,390
I can get some ideas and I can
go and create some neat and

187
00:12:35,390 --> 00:12:37,760
interesting concepts.

188
00:12:37,760 --> 00:12:40,880
Maybe I want to go and figure
out what I think a pop-over

189
00:12:40,880 --> 00:12:42,620
should look like.

190
00:12:42,620 --> 00:12:46,690
Here's a big list
of pop-overs.

191
00:12:46,690 --> 00:12:49,550
Patterns.com is very similar
in that it's got

192
00:12:49,550 --> 00:12:51,260
lots of great examples.

193
00:12:51,260 --> 00:12:54,240
You want to get an idea
what different

194
00:12:54,240 --> 00:12:55,650
about boxes look like.

195
00:12:55,650 --> 00:12:57,880
You can go through and you
can see all these.

196
00:12:57,880 --> 00:13:03,420
Just to get good idea of how
should I make my stuff look.

197
00:13:03,420 --> 00:13:08,620
It's a great place for you to
go get great inspiration.

198
00:13:08,620 --> 00:13:13,560
But in inspiration, you still
need to follow some human

199
00:13:13,560 --> 00:13:15,190
interface guidelines.

200
00:13:15,190 --> 00:13:21,250
Both Android and Apple for iOS
have a really great set of

201
00:13:21,250 --> 00:13:22,740
human interface guidelines.

202
00:13:22,740 --> 00:13:24,930
But there's one thing I really
want to highlight here.

203
00:13:24,930 --> 00:13:27,390
It's that, these are really
fantastic for

204
00:13:27,390 --> 00:13:28,750
those specific devices.

205
00:13:28,750 --> 00:13:32,610
It makes perfect sense for me to
follow the human interface

206
00:13:32,610 --> 00:13:34,610
guidelines if I'm building
an app that's only

207
00:13:34,610 --> 00:13:36,770
going to work on this--

208
00:13:36,770 --> 00:13:39,010
on my Galaxy Nexus phone.

209
00:13:39,010 --> 00:13:42,380
But if I build something that
follows the Android design

210
00:13:42,380 --> 00:13:46,470
patterns, and somebody goes and
uses it on an iOS device,

211
00:13:46,470 --> 00:13:49,120
or a Windows device, it's
just not going to fit.

212
00:13:49,120 --> 00:13:50,430
It's going to feel awkward.

213
00:13:50,430 --> 00:13:51,420
It's going to feel weird.

214
00:13:51,420 --> 00:13:53,370
It's not going to feel right.

215
00:13:53,370 --> 00:13:56,650
It's really important that we
follow through on some of

216
00:13:56,650 --> 00:13:59,950
those different design
guidelines.

217
00:13:59,950 --> 00:14:02,170
As well, there's some
really great stuff.

218
00:14:02,170 --> 00:14:05,740
Apple has some stuff for
designing web content for

219
00:14:05,740 --> 00:14:08,090
mobile Safari--

220
00:14:08,090 --> 00:14:11,710
actually for not just mobile
Safari, but Safari in general.

221
00:14:11,710 --> 00:14:13,530
If you're building for
web, they've got some

222
00:14:13,530 --> 00:14:14,890
great content there.

223
00:14:14,890 --> 00:14:17,220
And Microsoft even has some
really great stuff around

224
00:14:17,220 --> 00:14:18,590
Windows Phone.

225
00:14:18,590 --> 00:14:20,390
I'd recommend checking
out those.

226
00:14:20,390 --> 00:14:24,510
But again, don't put too much
effort into making your app

227
00:14:24,510 --> 00:14:27,930
look exactly like one particular
platform because

228
00:14:27,930 --> 00:14:30,920
it's going to feel unnatural
on other platforms and, at

229
00:14:30,920 --> 00:14:33,100
some point, they're probably
going to change the look and

230
00:14:33,100 --> 00:14:34,490
feel of the platform
just a little.

231
00:14:34,490 --> 00:14:36,370
And all of a sudden you're
going to look

232
00:14:36,370 --> 00:14:38,080
awkward and out of date.

233
00:14:38,080 --> 00:14:43,400
You don't want to duplicate
the other platforms.

234
00:14:43,400 --> 00:14:46,100
I tend to like to start with
some of the boiler plates that

235
00:14:46,100 --> 00:14:48,990
are out there, because I find
that they're really useful.

236
00:14:48,990 --> 00:14:50,900
They each have different
purposes in life.

237
00:14:50,900 --> 00:14:54,320
They each have different reasons
for being and trying

238
00:14:54,320 --> 00:14:55,940
to solve different problems.

239
00:14:55,940 --> 00:15:00,290
I think my two favorites are
jQuery Mobile and Bootstrap.

240
00:15:00,290 --> 00:15:02,940
Bootstrap is the one that I
tend to use most often,

241
00:15:02,940 --> 00:15:04,760
because I find it's
the most flexible.

242
00:15:04,760 --> 00:15:08,350
Gives me the most ability to be
able to do things, whether

243
00:15:08,350 --> 00:15:10,700
I'm building something for a
mobile website, whether I'm

244
00:15:10,700 --> 00:15:12,930
building something for a desktop
website, whether I'm

245
00:15:12,930 --> 00:15:16,740
building something that's
responsive and works in any of

246
00:15:16,740 --> 00:15:17,940
those sizes.

247
00:15:17,940 --> 00:15:20,480
But those are really important
to me, to be able

248
00:15:20,480 --> 00:15:22,600
to have all of those.

249
00:15:22,600 --> 00:15:25,960
Bootstrap has fantastic
responsive layout

250
00:15:25,960 --> 00:15:29,410
capabilities, as does
jQuery Mobile.

251
00:15:29,410 --> 00:15:32,930
Checking out both of those--
really good.

252
00:15:32,930 --> 00:15:35,900
But now let's jump into some
of the more fun and

253
00:15:35,900 --> 00:15:37,910
interesting libraries.

254
00:15:37,910 --> 00:15:41,780
These are things that I think
are really helpful, that

255
00:15:41,780 --> 00:15:44,730
reduce some of the pain that
we feel as developers and

256
00:15:44,730 --> 00:15:48,000
really make our lives easier.

257
00:15:48,000 --> 00:15:49,990
Fast Click--

258
00:15:49,990 --> 00:15:54,450
the guys at the Financial Times
Labs have been doing

259
00:15:54,450 --> 00:15:58,780
some phenomenal work over the
last couple of years, and have

260
00:15:58,780 --> 00:16:02,750
really built a phenomenal
mobile web app--

261
00:16:02,750 --> 00:16:04,190
the Financial Times Web App.

262
00:16:04,190 --> 00:16:08,170
It's just absolutely fantastic
from a design and experience

263
00:16:08,170 --> 00:16:08,730
perspective.

264
00:16:08,730 --> 00:16:10,210
It works offline.

265
00:16:10,210 --> 00:16:14,740
It feels and acts and looks like
a native app, even though

266
00:16:14,740 --> 00:16:15,820
it's a web app.

267
00:16:15,820 --> 00:16:18,860
And in fact, when you set it
up and when you install it,

268
00:16:18,860 --> 00:16:21,410
they encourage you to add it
to the home screen so that

269
00:16:21,410 --> 00:16:24,580
it's right there, easily
accessible, easy

270
00:16:24,580 --> 00:16:25,520
to get access to.

271
00:16:25,520 --> 00:16:27,430
You've got a quick way
to be able to go

272
00:16:27,430 --> 00:16:28,750
and use those things.

273
00:16:28,750 --> 00:16:31,210
But one of the things that they
found was there were a

274
00:16:31,210 --> 00:16:36,690
bunch of mobile web bugs, or
there were things that didn't

275
00:16:36,690 --> 00:16:40,100
behave like native
apps on the web.

276
00:16:40,100 --> 00:16:41,930
And they wanted to fix those.

277
00:16:41,930 --> 00:16:46,160
One of the first things that
they really started working on

278
00:16:46,160 --> 00:16:48,015
was the Fast Click libraries.

279
00:16:48,015 --> 00:16:51,900

280
00:16:51,900 --> 00:16:54,850
And with the Fast Click
libraries, the problem that

281
00:16:54,850 --> 00:16:57,830
they were trying to solve is
that on mobile devices with

282
00:16:57,830 --> 00:17:01,940
touch screens, the
browser says, oh

283
00:17:01,940 --> 00:17:03,900
you touched the screen.

284
00:17:03,900 --> 00:17:06,250
Well, if you just touch
the screen, do you

285
00:17:06,250 --> 00:17:08,119
want to drag something?

286
00:17:08,119 --> 00:17:10,359
Or do you want to maybe zoom?

287
00:17:10,359 --> 00:17:12,829
Or what are you going to do?

288
00:17:12,829 --> 00:17:15,420
And so because of that,
it sits there and

289
00:17:15,420 --> 00:17:18,470
it has a 300 second--

290
00:17:18,470 --> 00:17:22,099
wow, 300 second delay would
be pretty crazy-- a 300

291
00:17:22,099 --> 00:17:26,670
millisecond delay in
terms of until it

292
00:17:26,670 --> 00:17:29,020
fires the touch event.

293
00:17:29,020 --> 00:17:32,250
So we want to get rid of that
300 millisecond delay because

294
00:17:32,250 --> 00:17:33,980
it really is awkward.

295
00:17:33,980 --> 00:17:38,240
In fact, let me pull up a little
demo for you so that we

296
00:17:38,240 --> 00:17:42,180
can have a look at
what's going on.

297
00:17:42,180 --> 00:17:42,670
Here we go.

298
00:17:42,670 --> 00:17:46,850
I've got my iPad up.

299
00:17:46,850 --> 00:17:49,170
And so I'm going to bring
up this page.

300
00:17:49,170 --> 00:17:53,700
And here's the Fast Click demo
page that the Financial Times

301
00:17:53,700 --> 00:17:54,810
guys wrote.

302
00:17:54,810 --> 00:17:58,240
This top box that you
see up here, box A--

303
00:17:58,240 --> 00:18:01,290
box A doesn't use Fast Click.

304
00:18:01,290 --> 00:18:02,470
Box B does.

305
00:18:02,470 --> 00:18:05,240
Now, watch how long it takes for
the box to turn green from

306
00:18:05,240 --> 00:18:06,870
when I touch the screen.

307
00:18:06,870 --> 00:18:10,850
You're going to have to sort
of trust me to say, touch.

308
00:18:10,850 --> 00:18:12,370
And it took awhile.

309
00:18:12,370 --> 00:18:13,690
Touch--

310
00:18:13,690 --> 00:18:16,380
and it takes that like
couple milliseconds--

311
00:18:16,380 --> 00:18:18,140
well, 300 milliseconds--

312
00:18:18,140 --> 00:18:21,270
from the time that I touch
until the time

313
00:18:21,270 --> 00:18:23,540
that the event fires.

314
00:18:23,540 --> 00:18:27,030
Now they've solved that
with a library that

315
00:18:27,030 --> 00:18:28,880
they call Fast Click.

316
00:18:28,880 --> 00:18:33,720
We've enabled Fast Click
on this box here, B.

317
00:18:33,720 --> 00:18:35,050
Watch as I touch it.

318
00:18:35,050 --> 00:18:39,640
Touch, touch, touch, touch.

319
00:18:39,640 --> 00:18:41,710
It's almost instantaneous.

320
00:18:41,710 --> 00:18:45,490
Touch, touch, touch.

321
00:18:45,490 --> 00:18:51,320
By using this, you can make
your buttons, your touch

322
00:18:51,320 --> 00:18:54,750
experience, feel much
more responsive.

323
00:18:54,750 --> 00:18:57,620
And the reason that's happening,
like I said, is

324
00:18:57,620 --> 00:19:02,630
that instead of looking for the
touch end, they fire on

325
00:19:02,630 --> 00:19:03,420
the touch--

326
00:19:03,420 --> 00:19:05,160
let me try that again.

327
00:19:05,160 --> 00:19:08,140
Instead of listening for
the touch, they listen

328
00:19:08,140 --> 00:19:09,990
for a touch end event.

329
00:19:09,990 --> 00:19:13,100
When that touch end event
happens and the user hasn't

330
00:19:13,100 --> 00:19:17,570
moved their finger from the
touch start, it fires the

331
00:19:17,570 --> 00:19:21,150
touch event then.

332
00:19:21,150 --> 00:19:22,780
Using this library
is really easy.

333
00:19:22,780 --> 00:19:23,880
It's only a couple of K .

334
00:19:23,880 --> 00:19:25,200
It's pretty small.

335
00:19:25,200 --> 00:19:30,590
And if you gzip it and include
it in your library file,

336
00:19:30,590 --> 00:19:32,410
really easy to go add.

337
00:19:32,410 --> 00:19:36,570
But window.addEventListener, you
listen for the load event

338
00:19:36,570 --> 00:19:41,100
and then just put a new Fast
Click on the body.

339
00:19:41,100 --> 00:19:43,050
And that allows you
to go through.

340
00:19:43,050 --> 00:19:46,240
It will go through and find all
of the elements on your

341
00:19:46,240 --> 00:19:50,690
page that would register
a touch--

342
00:19:50,690 --> 00:19:52,720
buttons, and other things.

343
00:19:52,720 --> 00:19:54,980
And it listens for those.

344
00:19:54,980 --> 00:19:58,580
One thing I did find in some
of my projects that I've

345
00:19:58,580 --> 00:20:02,250
worked on, is that if you add
a button after the fact--

346
00:20:02,250 --> 00:20:05,330
after you've run that particular
Fast Click document

347
00:20:05,330 --> 00:20:08,420
body, maybe you're adding a
button to the DOM or something

348
00:20:08,420 --> 00:20:09,400
to that effect--

349
00:20:09,400 --> 00:20:13,990
then you need to go and just
add that Fast Click to that

350
00:20:13,990 --> 00:20:16,660
particular element that gets
added after the fact.

351
00:20:16,660 --> 00:20:19,430
It doesn't automatically go and
watch for new elements.

352
00:20:19,430 --> 00:20:23,430
It only adds for the elements
that are already there.

353
00:20:23,430 --> 00:20:27,690
It's a really great tool for
being able to make your apps

354
00:20:27,690 --> 00:20:28,940
feel more responsive.

355
00:20:28,940 --> 00:20:32,340

356
00:20:32,340 --> 00:20:36,450
One of the big things that I've
often run into when I've

357
00:20:36,450 --> 00:20:41,960
been trying to debug is that
there's no real console log on

358
00:20:41,960 --> 00:20:44,940
the iPad and iOS devices.

359
00:20:44,940 --> 00:20:47,310
They had it up until iOS 6.

360
00:20:47,310 --> 00:20:49,130
They took it away in iOS 6.

361
00:20:49,130 --> 00:20:55,610
And on Chrome for Android, or
even Android browser for

362
00:20:55,610 --> 00:20:59,800
Android, you don't have access
to the debug console unless

363
00:20:59,800 --> 00:21:02,660
you do any kind of
remote debugging.

364
00:21:02,660 --> 00:21:06,240
Being able to figure out, hey,
what's going on in my console,

365
00:21:06,240 --> 00:21:09,850
is a really useful thing to be
able to do so that you can

366
00:21:09,850 --> 00:21:11,830
figure out, hey, what's
going on?

367
00:21:11,830 --> 00:21:13,110
What's happening here?

368
00:21:13,110 --> 00:21:15,140
Are things working?

369
00:21:15,140 --> 00:21:17,140
Did I get to that point?

370
00:21:17,140 --> 00:21:18,850
Are the values--

371
00:21:18,850 --> 00:21:22,070
you guys all know what console
log can be used for, so I

372
00:21:22,070 --> 00:21:24,590
won't continue on that
sort of thing.

373
00:21:24,590 --> 00:21:31,360
But JSConsole is a really great
tool that you add some

374
00:21:31,360 --> 00:21:36,350
code to your application, and
what it does is it captures

375
00:21:36,350 --> 00:21:41,160
all of the console log events
and it pushes them up to a web

376
00:21:41,160 --> 00:21:44,900
service, so that you can watch
up on that web service

377
00:21:44,900 --> 00:21:47,360
what's going on.

378
00:21:47,360 --> 00:21:49,640
Why don't we take a look
at that for a sec.

379
00:21:49,640 --> 00:21:53,000
I'm just going to bring
up my page here.

380
00:21:53,000 --> 00:21:56,060
And I've got a listener.

381
00:21:56,060 --> 00:21:57,390
You can see here, all right.

382
00:21:57,390 --> 00:22:03,450
And let's go to my iPad.

383
00:22:03,450 --> 00:22:06,370
You can see here I've got
a listener started.

384
00:22:06,370 --> 00:22:11,160
And on the iPad, I'm going
to start my sender.

385
00:22:11,160 --> 00:22:13,210
As soon as I send that,
it pops up with a

386
00:22:13,210 --> 00:22:14,350
little dialogue here.

387
00:22:14,350 --> 00:22:16,900
Let's just make this a
little bit bigger.

388
00:22:16,900 --> 00:22:20,100
The dialogue is a warning that
says, hey, I'm going to send

389
00:22:20,100 --> 00:22:24,010
everything off to
another service.

390
00:22:24,010 --> 00:22:26,560
Just a word of warning, remember
to remove this script

391
00:22:26,560 --> 00:22:29,940
before you deploy this.

392
00:22:29,940 --> 00:22:30,395
Go back.

393
00:22:30,395 --> 00:22:32,270
I'm going to click OK on this.

394
00:22:32,270 --> 00:22:35,520
And sure enough, you notice
a whole bunch of things

395
00:22:35,520 --> 00:22:37,160
went and fired off.

396
00:22:37,160 --> 00:22:40,660
What I did is in my application,
I actually have

397
00:22:40,660 --> 00:22:45,170
it go and show me what the
screen width is, what the

398
00:22:45,170 --> 00:22:48,800
height is, what the device pixel
ratio is, so that I can

399
00:22:48,800 --> 00:22:51,490
understand, hey, what's
going on in my page.

400
00:22:51,490 --> 00:22:53,930
And sure enough, I've got a
little loop that fires every

401
00:22:53,930 --> 00:22:56,090
about two seconds or so.

402
00:22:56,090 --> 00:22:59,450
Let me actually kill this
so that we can see

403
00:22:59,450 --> 00:23:00,790
what's going on here.

404
00:23:00,790 --> 00:23:06,010
But you can see that I've got
all of my remote console logs.

405
00:23:06,010 --> 00:23:08,370
My screen available
width is 768.

406
00:23:08,370 --> 00:23:11,810
My available height is 1004.

407
00:23:11,810 --> 00:23:15,440
It gives me that insight into
what's going on with my

408
00:23:15,440 --> 00:23:16,130
application.

409
00:23:16,130 --> 00:23:18,970
It gives me the idea that, hey,
I can go and understand

410
00:23:18,970 --> 00:23:19,970
this stuff.

411
00:23:19,970 --> 00:23:25,480
Now, one thing to just a note on
this, is that once you use

412
00:23:25,480 --> 00:23:29,030
a particular key, you
can't use it again.

413
00:23:29,030 --> 00:23:32,770
Particularly, if you're doing
some testing, you'll use the

414
00:23:32,770 --> 00:23:35,770
key, and it'll say OK,
great you've used it.

415
00:23:35,770 --> 00:23:37,860
You try and use it again,
it's not going let you.

416
00:23:37,860 --> 00:23:43,420
That's a security precaution
meant to make it easier--

417
00:23:43,420 --> 00:23:48,430
meant so that if you do
accidentally leave the library

418
00:23:48,430 --> 00:23:51,350
in there, you're not going to
leak sensitive customer data.

419
00:23:51,350 --> 00:23:54,090
One thing to note in there.

420
00:23:54,090 --> 00:23:57,130
Don't use this on anything where
you might have sensitive

421
00:23:57,130 --> 00:24:00,620
customer data, because you
are sending all of your

422
00:24:00,620 --> 00:24:03,520
console.logs over
HTTP clear text.

423
00:24:03,520 --> 00:24:06,100
You're just sending them up to
somebody else's service.

424
00:24:06,100 --> 00:24:09,920
And potentially, there's people
who could be listening

425
00:24:09,920 --> 00:24:14,060
or doing not nice things
with those things.

426
00:24:14,060 --> 00:24:15,650
Let's jump over to HammerjS.

427
00:24:15,650 --> 00:24:18,520

428
00:24:18,520 --> 00:24:22,560
Because if you're building
mobile web applications,

429
00:24:22,560 --> 00:24:25,550
you're definitely thinking about
touch, because touch is

430
00:24:25,550 --> 00:24:28,290
just one of those really cool
things that is really

431
00:24:28,290 --> 00:24:30,000
important to be able to use.

432
00:24:30,000 --> 00:24:32,360
And understanding--

433
00:24:32,360 --> 00:24:35,780
touch, you tap something,
or something like

434
00:24:35,780 --> 00:24:37,560
that, that's easy.

435
00:24:37,560 --> 00:24:41,380
But if you want to be able
to handle gestures--

436
00:24:41,380 --> 00:24:45,950
maybe you want to do drag to
delete, maybe you want to drag

437
00:24:45,950 --> 00:24:47,810
to move something around
a page, maybe

438
00:24:47,810 --> 00:24:51,690
you want to do anything--

439
00:24:51,690 --> 00:24:56,160
handling those, you could write
it yourself, absolutely.

440
00:24:56,160 --> 00:24:59,850
But why write it yourself when
someone else has already

441
00:24:59,850 --> 00:25:01,860
figured out all the
intricacies?

442
00:25:01,860 --> 00:25:04,240
They've figured out all the
little details on how to make

443
00:25:04,240 --> 00:25:08,640
things work properly, make them
behave in the right way.

444
00:25:08,640 --> 00:25:13,080
HammerjS is a great library that
you can use in order to

445
00:25:13,080 --> 00:25:15,770
simplify some of these things.

446
00:25:15,770 --> 00:25:20,500
Let's pop back to our
demo here for a sec.

447
00:25:20,500 --> 00:25:24,270
Sure enough, let's bring
up HammerjS.

448
00:25:24,270 --> 00:25:28,100
Here's my page with HammerjS,
and it says you can touch me.

449
00:25:28,100 --> 00:25:30,810
If I scroll across.

450
00:25:30,810 --> 00:25:31,880
It says dragging.

451
00:25:31,880 --> 00:25:33,680
And it tells me when we're also

452
00:25:33,680 --> 00:25:35,780
completed, so it's dragged.

453
00:25:35,780 --> 00:25:36,600
I can tap--

454
00:25:36,600 --> 00:25:37,800
single touch.

455
00:25:37,800 --> 00:25:39,660
I can double tap--

456
00:25:39,660 --> 00:25:41,680
you tapped me twice.

457
00:25:41,680 --> 00:25:50,450
I can do a pinch zoom, so that
you can maybe zoom something.

458
00:25:50,450 --> 00:25:54,410
It gives you a full set of tools
that you can quickly go

459
00:25:54,410 --> 00:25:58,390
in and be able to understand how
you want to add things to

460
00:25:58,390 --> 00:26:00,190
different elements.

461
00:26:00,190 --> 00:26:02,490
You can drag, like I said.

462
00:26:02,490 --> 00:26:05,970
It's a really powerful
library that's really

463
00:26:05,970 --> 00:26:08,930
only about 2k in size.

464
00:26:08,930 --> 00:26:12,420
It's really easy to include,
really easy to go add to your

465
00:26:12,420 --> 00:26:16,890
applications, and it really
doesn't add a lot of work or

466
00:26:16,890 --> 00:26:18,920
anything like that to go add.

467
00:26:18,920 --> 00:26:22,460
I, a couple weeks ago, decided
I was going to add swipe to

468
00:26:22,460 --> 00:26:25,240
delete gesture to one
of my applications.

469
00:26:25,240 --> 00:26:28,400
And I found it really
easy to do.

470
00:26:28,400 --> 00:26:33,420
I used the on drag
start to notice--

471
00:26:33,420 --> 00:26:34,900
actually, no I didn't
use on drag start.

472
00:26:34,900 --> 00:26:35,610
Let me rephrase that.

473
00:26:35,610 --> 00:26:40,800
I used on drag, which fires
as you move across.

474
00:26:40,800 --> 00:26:46,870
I used the on drag event firing
to change the position

475
00:26:46,870 --> 00:26:48,090
of my elements.

476
00:26:48,090 --> 00:26:49,720
That way, as you dragged
it across, it

477
00:26:49,720 --> 00:26:52,210
moved across with you.

478
00:26:52,210 --> 00:26:55,780
And then I used the on drag end
to check to see how far

479
00:26:55,780 --> 00:26:58,590
the user had dragged the
event or the element.

480
00:26:58,590 --> 00:27:03,330
If they dragged it past the 3/4
mark on their page, I said

481
00:27:03,330 --> 00:27:05,910
OK, great you want
to delete this.

482
00:27:05,910 --> 00:27:07,310
And I deleted the element.

483
00:27:07,310 --> 00:27:12,020
But if they didn't drag it past
that 3/4 mark, I said OK,

484
00:27:12,020 --> 00:27:14,480
no problem you obviously don't
want to delete this.

485
00:27:14,480 --> 00:27:17,410
And I set the left
back to zero.

486
00:27:17,410 --> 00:27:20,670
I also used a little bit
of CSS transition.

487
00:27:20,670 --> 00:27:25,360
That way, the element swung
back in a nice maneuver.

488
00:27:25,360 --> 00:27:26,580
Worked really well.

489
00:27:26,580 --> 00:27:28,380
Provided a really great
user experience.

490
00:27:28,380 --> 00:27:31,600

491
00:27:31,600 --> 00:27:36,000
Lawn Chair is another great
library that I like to use.

492
00:27:36,000 --> 00:27:39,840
It does a bunch of things
and normalizes

493
00:27:39,840 --> 00:27:42,990
storage on the client.

494
00:27:42,990 --> 00:27:45,980
One of the things that I've
often had a bit of a challenge

495
00:27:45,980 --> 00:27:51,940
with is what different index and
data stores are available

496
00:27:51,940 --> 00:27:54,540
on the user's device.

497
00:27:54,540 --> 00:27:56,210
Well, does the device
have IndexedDB?

498
00:27:56,210 --> 00:27:57,350
Does it have Web SQL?

499
00:27:57,350 --> 00:27:59,930
Does it have local storage?

500
00:27:59,930 --> 00:28:01,600
Does it have session storage?

501
00:28:01,600 --> 00:28:02,770
Which one's best?

502
00:28:02,770 --> 00:28:04,210
Should I use local storage?

503
00:28:04,210 --> 00:28:07,280
Because there's been a whole
bunch of articles recently

504
00:28:07,280 --> 00:28:10,330
saying don't use it because
it's really, really slow.

505
00:28:10,330 --> 00:28:13,050
But then earlier this week,
there were a couple articles

506
00:28:13,050 --> 00:28:14,910
that said, no use
it, absolutely.

507
00:28:14,910 --> 00:28:17,570
It's really fantastic.

508
00:28:17,570 --> 00:28:21,930
And the only time it's slow is
that very first read where

509
00:28:21,930 --> 00:28:24,300
it's a couple of milliseconds.

510
00:28:24,300 --> 00:28:28,090
Now, the one reason I would
recommend not using local

511
00:28:28,090 --> 00:28:31,490
storage or session storage for
your applications is because

512
00:28:31,490 --> 00:28:33,650
it's synchronous.

513
00:28:33,650 --> 00:28:36,620
You can make it asynchronous
by wrapping it

514
00:28:36,620 --> 00:28:38,670
in a set time out.

515
00:28:38,670 --> 00:28:43,550
But most other storage
mechanisms that are available

516
00:28:43,550 --> 00:28:46,490
for the web-- in fact, almost
every other storage mechanism

517
00:28:46,490 --> 00:28:48,810
available for the web--
is asynchronous.

518
00:28:48,810 --> 00:28:51,250
That means you're going to
go and say, get me this

519
00:28:51,250 --> 00:28:51,820
information.

520
00:28:51,820 --> 00:28:54,130
And then when you've got it,
call this call back and give

521
00:28:54,130 --> 00:28:55,830
it this information.

522
00:28:55,830 --> 00:28:59,590
By using something like Lawn
Chair, Lawn Chair's really

523
00:28:59,590 --> 00:29:04,210
smart in that it goes, OK great,
you're telling me that

524
00:29:04,210 --> 00:29:07,600
your preferred provider is
IndexedDB, but if you don't

525
00:29:07,600 --> 00:29:09,950
have that, I should
use Web SQL.

526
00:29:09,950 --> 00:29:13,320
But if I don't have that,
I can use local storage.

527
00:29:13,320 --> 00:29:15,390
And if I don't have that, I'm
going to fall back to

528
00:29:15,390 --> 00:29:17,340
something completely
different.

529
00:29:17,340 --> 00:29:20,430
It gives you a really nice
fall back, an ability to

530
00:29:20,430 --> 00:29:25,440
specify your preferred order on
which way things fall back.

531
00:29:25,440 --> 00:29:28,220
That's one of the things I
really like about it, in that

532
00:29:28,220 --> 00:29:32,700
it just gives you that real
easy fall back ability.

533
00:29:32,700 --> 00:29:35,990
And it abstracts away all of the
implementation details for

534
00:29:35,990 --> 00:29:36,810
each of the services.

535
00:29:36,810 --> 00:29:39,600
You don't have to know, oh crap,
does it do this, does do

536
00:29:39,600 --> 00:29:41,120
this, how do I do this?

537
00:29:41,120 --> 00:29:42,760
It just works.

538
00:29:42,760 --> 00:29:44,710
I don't have a demo for it
because it's not really the

539
00:29:44,710 --> 00:29:46,490
most sexy thing to go demo.

540
00:29:46,490 --> 00:29:48,150
Like ooh, look, I can
go store something.

541
00:29:48,150 --> 00:29:51,250
Oh look, I can pull it
out of a database.

542
00:29:51,250 --> 00:29:54,100
Really, that's one of those
things that, eh.

543
00:29:54,100 --> 00:29:56,770
But when you do get it to work,
it's pretty awesome.

544
00:29:56,770 --> 00:29:59,760
And it's a good way to be able
to go and grab access to some

545
00:29:59,760 --> 00:30:02,250
of these things.

546
00:30:02,250 --> 00:30:06,240
High DPI Displays is another
really useful one that I think

547
00:30:06,240 --> 00:30:08,950
is definitely worth
mentioning.

548
00:30:08,950 --> 00:30:12,860
Because there are a lot of
tools out there today, in

549
00:30:12,860 --> 00:30:16,130
terms of how to go use those,
what you should do when you

550
00:30:16,130 --> 00:30:18,630
need to use those, or
anything like that.

551
00:30:18,630 --> 00:30:20,890
So there isn't an easy
answer today.

552
00:30:20,890 --> 00:30:23,320
Lots of browsers are
working on things.

553
00:30:23,320 --> 00:30:25,580
The W3C is working
on a standard.

554
00:30:25,580 --> 00:30:27,580
But there are a couple
of options.

555
00:30:27,580 --> 00:30:32,990
The first thing I want to
mention is using the--

556
00:30:32,990 --> 00:30:35,080
sorry, excuse me--

557
00:30:35,080 --> 00:30:39,320
using media queries in order
to go specify how you want

558
00:30:39,320 --> 00:30:41,940
your images to be produced.

559
00:30:41,940 --> 00:30:45,830
In this particular case, we've
got media-only screen and

560
00:30:45,830 --> 00:30:49,520
minimum device pixel
ratio of 1.5--

561
00:30:49,520 --> 00:30:53,740
1.5 being a high DPI screen, a
reasonably high DPI screen.

562
00:30:53,740 --> 00:30:55,700
Great, go use this
as the image.

563
00:30:55,700 --> 00:30:59,000
If you're not a high DPI, it
would go use something else.

564
00:30:59,000 --> 00:31:02,050
There's a really easy way to
be able to go do those for

565
00:31:02,050 --> 00:31:05,890
background images, or images
that are placed as

566
00:31:05,890 --> 00:31:08,260
background on pages.

567
00:31:08,260 --> 00:31:11,720
Image-set is the second one
and it's only available in

568
00:31:11,720 --> 00:31:14,690
Chrome and Safari today
in WebKit browsers.

569
00:31:14,690 --> 00:31:17,130
But I expect to see it coming
in future browsers.

570
00:31:17,130 --> 00:31:23,290
That's the primary reason why
you see a vendor prefix there.

571
00:31:23,290 --> 00:31:29,350
But with image-set, what you can
do is in your CSS, you can

572
00:31:29,350 --> 00:31:35,880
specify, all right, well, here's
the URL to my image for

573
00:31:35,880 --> 00:31:39,160
one device pixel
ratio devices.

574
00:31:39,160 --> 00:31:45,390
But for other images, where
maybe it's 2x, 1.5x, whatever,

575
00:31:45,390 --> 00:31:49,050
you can specify which image you
want it to use so that you

576
00:31:49,050 --> 00:31:53,990
can say I want you to use the
1X, I want you to use the 2x.

577
00:31:53,990 --> 00:31:55,740
So that's something that's
available today.

578
00:31:55,740 --> 00:31:58,470
Again, that's specified in CSS,
so that's not going to

579
00:31:58,470 --> 00:32:03,720
work beautifully well for images
that are dynamic or

580
00:32:03,720 --> 00:32:07,010
images that are stored sort
of as actual image

581
00:32:07,010 --> 00:32:10,140
tags on your page.

582
00:32:10,140 --> 00:32:13,900
For documents that are stored
as images in your page-- let

583
00:32:13,900 --> 00:32:16,170
me hide myself here so that
we can actually see

584
00:32:16,170 --> 00:32:18,868
all the text here--

585
00:32:18,868 --> 00:32:23,930
what this would be is using
the source set.

586
00:32:23,930 --> 00:32:27,200
With source set, you can
actually specify different

587
00:32:27,200 --> 00:32:29,470
images for different
properties.

588
00:32:29,470 --> 00:32:31,960
It's kind of like using the
video tag where you have a

589
00:32:31,960 --> 00:32:36,320
source element, and you can
specify different sources for

590
00:32:36,320 --> 00:32:37,260
different properties.

591
00:32:37,260 --> 00:32:40,060
Maybe you've got different
video formats or

592
00:32:40,060 --> 00:32:41,050
something like that.

593
00:32:41,050 --> 00:32:45,990
It's the same concept behind
source set on the image tag.

594
00:32:45,990 --> 00:32:49,770
You specify here, I want-- this
is my high-def image,

595
00:32:49,770 --> 00:32:54,020
this is my low-def image, and
what's going on from there.

596
00:32:54,020 --> 00:32:59,400
A quick easy way to be able to
go and use those things.

597
00:32:59,400 --> 00:33:04,180
For best practices on this,
there's a lot of things that a

598
00:33:04,180 --> 00:33:05,960
lot of people are trying
these days.

599
00:33:05,960 --> 00:33:08,970
The number one thing that I
would call out and say, that

600
00:33:08,970 --> 00:33:10,130
image replacement--

601
00:33:10,130 --> 00:33:12,840
using some of the JavaScript
libraries that people are used

602
00:33:12,840 --> 00:33:16,220
to using to go and do image
replacement is generally

603
00:33:16,220 --> 00:33:17,380
frowned upon.

604
00:33:17,380 --> 00:33:18,990
It's a performance hit.

605
00:33:18,990 --> 00:33:21,090
You start downloading one image
and then you go and

606
00:33:21,090 --> 00:33:23,440
replace it, so you end
up downloading more.

607
00:33:23,440 --> 00:33:28,000
It's just generally not
the best practice.

608
00:33:28,000 --> 00:33:33,110
Instead, using vector images
and CSS styles for maybe

609
00:33:33,110 --> 00:33:38,270
gradients or wherever you can
specify vector images,

610
00:33:38,270 --> 00:33:41,300
definitely use that.

611
00:33:41,300 --> 00:33:45,480
If you need to put images in
your page Boris Smus, one of

612
00:33:45,480 --> 00:33:47,660
the guys on the Chrome [? dev ?]
team, has a great

613
00:33:47,660 --> 00:33:53,930
article on HTML5 Rocks that he
compared taking a high DPI

614
00:33:53,930 --> 00:34:03,110
image and compressing it a lot,
versus a high DPI image

615
00:34:03,110 --> 00:34:06,370
that wasn't compressed a lot,
and compared the file size.

616
00:34:06,370 --> 00:34:10,159
And actually found that it's
to our advantage as web

617
00:34:10,159 --> 00:34:15,010
developers to use high DPI
images and use a higher

618
00:34:15,010 --> 00:34:16,179
compression ratio.

619
00:34:16,179 --> 00:34:21,300
They more often and than not
tend to be smaller in byte

620
00:34:21,300 --> 00:34:26,850
size, but also end up being
as high quality or beyond

621
00:34:26,850 --> 00:34:32,130
perception in terms of the
degradation in quality that

622
00:34:32,130 --> 00:34:34,989
you're going to see if you take
a 1x image and you make

623
00:34:34,989 --> 00:34:37,300
it twice as big--

624
00:34:37,300 --> 00:34:41,600
as well, using some of the font
icons, or icon fonts like

625
00:34:41,600 --> 00:34:44,286
Font Awesome and other stuff,

626
00:34:44,286 --> 00:34:46,199
There's a couple of other things
I just want to point

627
00:34:46,199 --> 00:34:48,310
out for today.

628
00:34:48,310 --> 00:34:53,860
This and this are two very
different things.

629
00:34:53,860 --> 00:34:57,890
If you think about your mouse
or a touch point on a mobile

630
00:34:57,890 --> 00:35:01,200
device, they're very
different in size.

631
00:35:01,200 --> 00:35:04,420
And depending on how you look
at some of these things, it

632
00:35:04,420 --> 00:35:06,490
becomes a bit of a challenge.

633
00:35:06,490 --> 00:35:10,850
Let's just pop over to
the demo for a sec.

634
00:35:10,850 --> 00:35:13,300
When I first made this page,
if you look at some of the

635
00:35:13,300 --> 00:35:19,450
text here, I had had just text
links as ways to get over to

636
00:35:19,450 --> 00:35:20,400
different places.

637
00:35:20,400 --> 00:35:23,910
But I found that it was
too small to click on.

638
00:35:23,910 --> 00:35:27,290
Instead, I decided that, for
this particular case, it would

639
00:35:27,290 --> 00:35:30,790
be better to use buttons because
they're easier to

640
00:35:30,790 --> 00:35:36,100
click on, they're larger, and
for my mouse or for my finger,

641
00:35:36,100 --> 00:35:39,650
a much easier thing to
be able to go use.

642
00:35:39,650 --> 00:35:42,300
Avoid tables, relative
positioning, absolute

643
00:35:42,300 --> 00:35:45,410
positioning, floats.

644
00:35:45,410 --> 00:35:46,570
Headers and footers--

645
00:35:46,570 --> 00:35:51,290
use position fixed so that it
goes up at the very top.

646
00:35:51,290 --> 00:35:53,700
And if you want to do scrolling
inside an element,

647
00:35:53,700 --> 00:35:57,670
set the overflow to scroll
so that it goes

648
00:35:57,670 --> 00:35:58,870
to the right place.

649
00:35:58,870 --> 00:36:01,170
And if you want the inertial
scrolling, like the stuff that

650
00:36:01,170 --> 00:36:04,870
you're used to when you scroll
through on a native app, you

651
00:36:04,870 --> 00:36:09,890
can add this WebKit overflow
scrolling touch.

652
00:36:09,890 --> 00:36:15,030
And I believe this also works on
some Chrome Mobile as well,

653
00:36:15,030 --> 00:36:20,560
in that it provides a really
nice scrolling experience.

654
00:36:20,560 --> 00:36:22,310
I have couple of favors
to ask of you guys.

655
00:36:22,310 --> 00:36:25,810
And if you have questions,
please be sure to post them in

656
00:36:25,810 --> 00:36:27,300
the moderator.

657
00:36:27,300 --> 00:36:30,020
The link's down there
at the bottom.

658
00:36:30,020 --> 00:36:33,130
But my big request is,
help support your

659
00:36:33,130 --> 00:36:35,020
local open device labs.

660
00:36:35,020 --> 00:36:36,420
We need more of these.

661
00:36:36,420 --> 00:36:39,110
There are so many devices out
there that people are using.

662
00:36:39,110 --> 00:36:42,370
And to be able to, and need to,
test your devices across

663
00:36:42,370 --> 00:36:46,240
that plethora of different
devices around the world, we

664
00:36:46,240 --> 00:36:48,480
need more people to
help support them.

665
00:36:48,480 --> 00:36:51,080
If there's not one in your
community, start an open

666
00:36:51,080 --> 00:36:54,220
device lab or find
somebody who can.

667
00:36:54,220 --> 00:36:58,070
If you have older or unused
devices, donate those to your

668
00:36:58,070 --> 00:36:59,510
local device labs.

669
00:36:59,510 --> 00:37:01,520
Here in New York, there's
one in Brooklyn.

670
00:37:01,520 --> 00:37:04,080
Hopefully we can get one started
here in Manhattan

671
00:37:04,080 --> 00:37:05,740
sometime soon.

672
00:37:05,740 --> 00:37:09,840
But donating your devices to
these labs so that they can

673
00:37:09,840 --> 00:37:12,040
have more devices to test on.

674
00:37:12,040 --> 00:37:15,690
So that when you need to go
and test your app on a

675
00:37:15,690 --> 00:37:19,390
particular screen or a
particular device, that device

676
00:37:19,390 --> 00:37:20,570
is available to you.

677
00:37:20,570 --> 00:37:21,520
You can go get it.

678
00:37:21,520 --> 00:37:24,740
You don't have to go and
figure out ah, crap,

679
00:37:24,740 --> 00:37:25,460
where can I do this?

680
00:37:25,460 --> 00:37:26,750
How can I test this?

681
00:37:26,750 --> 00:37:31,280
You have a great set of devices
that you can use.

682
00:37:31,280 --> 00:37:33,340
Finally, we need your help.

683
00:37:33,340 --> 00:37:34,940
Don't accept the status quo.

684
00:37:34,940 --> 00:37:37,800
Don't accept that
the mobile web--

685
00:37:37,800 --> 00:37:39,510
it's OK for it to look crappy.

686
00:37:39,510 --> 00:37:42,660
It's in our hands as
web developers to

687
00:37:42,660 --> 00:37:43,870
make it look better.

688
00:37:43,870 --> 00:37:46,580
If you find bugs with Chrome--

689
00:37:46,580 --> 00:37:48,530
Chrome for Android or
Chrome for iOS--

690
00:37:48,530 --> 00:37:51,920
go to new.mcrbug.com and
tell us about it.

691
00:37:51,920 --> 00:37:53,440
Let us know.

692
00:37:53,440 --> 00:37:56,200
If there are things that bug
you about Chrome for iOS or

693
00:37:56,200 --> 00:38:00,060
Chrome for Android, go see if
there's already a bug there

694
00:38:00,060 --> 00:38:01,470
and star that bug.

695
00:38:01,470 --> 00:38:04,010
We look at those stars to know
how many people this is

696
00:38:04,010 --> 00:38:06,010
affecting and how many
people are really

697
00:38:06,010 --> 00:38:08,466
passionate about this.

698
00:38:08,466 --> 00:38:11,020
Build some mobile Chrome
experiments.

699
00:38:11,020 --> 00:38:13,700
There aren't a lot of them there
today, but this is your

700
00:38:13,700 --> 00:38:16,370
opportunity to go build
something cool that's just

701
00:38:16,370 --> 00:38:20,230
neat, that works amazingly well
on the mobile web, on

702
00:38:20,230 --> 00:38:22,190
mobile devices-- whether that's
a tablet, whether

703
00:38:22,190 --> 00:38:23,160
that's a phone.

704
00:38:23,160 --> 00:38:24,716
And submit them to
m.chromeexperiments.com.

705
00:38:24,716 --> 00:38:27,990

706
00:38:27,990 --> 00:38:31,410
Start an open device lab in your
area like I mentioned.

707
00:38:31,410 --> 00:38:35,000
But the mobile web really
is what you make of it.

708
00:38:35,000 --> 00:38:36,300
As developers, it's our

709
00:38:36,300 --> 00:38:38,760
responsibility to build beautiful.

710
00:38:38,760 --> 00:38:42,010
We can build crappy but that's
not fun and nobody's going to

711
00:38:42,010 --> 00:38:43,370
enjoy that.

712
00:38:43,370 --> 00:38:47,790
Building beautiful, it
really is up to us.

713
00:38:47,790 --> 00:38:50,640
With that, I want to thank
you guys very much.

714
00:38:50,640 --> 00:38:55,480
I'll open it up to a couple of
questions now, and see what

715
00:38:55,480 --> 00:38:59,660
you guys are thinking
and go from there.

716
00:38:59,660 --> 00:39:03,320
So one of the questions that I
saw earlier on our YouTube

717
00:39:03,320 --> 00:39:06,530
comments was somebody wanted
to know, oh hey, I

718
00:39:06,530 --> 00:39:07,660
don't have a Mac.

719
00:39:07,660 --> 00:39:10,480
Can I still do some of this
mobile web development in

720
00:39:10,480 --> 00:39:15,640
terms of using CodeKit, using
some of the other stuff?

721
00:39:15,640 --> 00:39:17,780
You can't use CodeKit
unfortunately, because it is

722
00:39:17,780 --> 00:39:18,610
Mac-specific.

723
00:39:18,610 --> 00:39:20,700
But Sublime, you can
absolutely use.

724
00:39:20,700 --> 00:39:22,890
It's available for Mac,
Windows and PC.

725
00:39:22,890 --> 00:39:25,390
You can get equivalent apps.

726
00:39:25,390 --> 00:39:30,120
I don't think I've seen any
personally that are equivalent

727
00:39:30,120 --> 00:39:33,500
to CodeKit, but I'm sure
somebody's got one somewhere.

728
00:39:33,500 --> 00:39:37,060
I'd check that out.

729
00:39:37,060 --> 00:39:40,040
All right.

730
00:39:40,040 --> 00:39:42,570
I think that's about all the
time we have for today.

731
00:39:42,570 --> 00:39:45,420
I want to say thank you very
much for joining me, and I

732
00:39:45,420 --> 00:39:47,750
hope you learned something
interesting.

733
00:39:47,750 --> 00:39:50,910
Next week, we're going
to be diving into

734
00:39:50,910 --> 00:39:52,960
testing on mobile devices.

735
00:39:52,960 --> 00:39:57,780
This is a really interesting
piece because, how do you do

736
00:39:57,780 --> 00:40:00,830
remote debugging on
a mobile device?

737
00:40:00,830 --> 00:40:03,540
How do you do debugging when
you're trying to figure out

738
00:40:03,540 --> 00:40:04,940
how does this work?

739
00:40:04,940 --> 00:40:12,470
We'll try and take a look at how
to remote debug on iOS, on

740
00:40:12,470 --> 00:40:14,430
an Android, Chrome
for Android.

741
00:40:14,430 --> 00:40:17,380
As well potentially, if we have
time, we'll try and look

742
00:40:17,380 --> 00:40:19,520
at Firefox and Opera.

743
00:40:19,520 --> 00:40:23,500
All of those guys have mobile
remote debugging available.

744
00:40:23,500 --> 00:40:25,410
We'll try to take a look
at some of those.

745
00:40:25,410 --> 00:40:28,100
And we'll dive into some
emulators and other things

746
00:40:28,100 --> 00:40:32,950
that you can do to really take
your device and mobile web

747
00:40:32,950 --> 00:40:35,100
development to the next level.

748
00:40:35,100 --> 00:40:37,150
So with that, I want to say
thank you very much.

749
00:40:37,150 --> 00:40:39,870
Hope everybody has a
wonderful day, and

750
00:40:39,870 --> 00:40:41,120
thanks for joining me.

751
00:40:41,120 --> 00:40:51,367

