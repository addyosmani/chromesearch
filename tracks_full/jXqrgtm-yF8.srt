1
00:00:00,000 --> 00:00:07,275
[MUSIC PLAYING]

2
00:00:07,275 --> 00:00:15,490

3
00:00:15,490 --> 00:00:17,920
JAKE ARCHIBALD: Hello, welcome
to Mobile Web Thursdays.

4
00:00:17,920 --> 00:00:19,680
With me in the studio
today is--

5
00:00:19,680 --> 00:00:20,660
ADDY OSMANI: Addy Osmani.

6
00:00:20,660 --> 00:00:22,770
JAKE ARCHIBALD: We normally
have Paul Kinlan

7
00:00:22,770 --> 00:00:23,760
driving these things.

8
00:00:23,760 --> 00:00:25,400
But he's not here today.

9
00:00:25,400 --> 00:00:29,295
Because unfortunately
he died, or went

10
00:00:29,295 --> 00:00:30,610
on holiday, or something.

11
00:00:30,610 --> 00:00:31,300
I'm not quite sure.

12
00:00:31,300 --> 00:00:34,020
But for whatever reason, I get
to sit in the driving seat.

13
00:00:34,020 --> 00:00:35,370
And it's a pre-record.

14
00:00:35,370 --> 00:00:37,760
So it's OK if I do an
accidental swear.

15
00:00:37,760 --> 00:00:39,190
Because we can just
edit that bit out.

16
00:00:39,190 --> 00:00:40,680
But we're going to try not to.

17
00:00:40,680 --> 00:00:41,910
ADDY OSMANI: Yeah.

18
00:00:41,910 --> 00:00:45,450
JAKE ARCHIBALD: This session is
about mobile web debugging.

19
00:00:45,450 --> 00:00:47,660
So we're going to be looking
how you can use the Web

20
00:00:47,660 --> 00:00:50,730
Inspector on your phone while
looking at Web Inspector on

21
00:00:50,730 --> 00:00:53,470
your desktop, but seeing what's
happening on your

22
00:00:53,470 --> 00:00:54,690
mobile device.

23
00:00:54,690 --> 00:00:57,240
So we may as well jump
straight into it.

24
00:00:57,240 --> 00:01:00,220
I'm learning the ropes of
this whole thing, still.

25
00:01:00,220 --> 00:01:02,600
So the tips I received from last
time is not to just keep

26
00:01:02,600 --> 00:01:04,500
glancing at the camera,
as I'm doing.

27
00:01:04,500 --> 00:01:06,385
People said that was
quite disturbing.

28
00:01:06,385 --> 00:01:07,400
ADDY OSMANI: It Is.

29
00:01:07,400 --> 00:01:08,310
It generally is.

30
00:01:08,310 --> 00:01:09,020
JAKE ARCHIBALD: Is it?

31
00:01:09,020 --> 00:01:09,960
ADDY OSMANI: A little
bit creepy.

32
00:01:09,960 --> 00:01:11,550
JAKE ARCHIBALD: People say
that to me in real life--

33
00:01:11,550 --> 00:01:12,610
ADDY OSMANI: I'm
not surprised.

34
00:01:12,610 --> 00:01:15,140
JAKE ARCHIBALD: I look at
them quite disturbing.

35
00:01:15,140 --> 00:01:17,800
Also that I look a bit like
a ghost on camera.

36
00:01:17,800 --> 00:01:19,050
We haven't managed
to fix that.

37
00:01:19,050 --> 00:01:20,600
ADDY OSMANI: He looks like a
ghost in real life, as well.

38
00:01:20,600 --> 00:01:23,290
Don't be too shocked.

39
00:01:23,290 --> 00:01:24,470
JAKE ARCHIBALD: This is a
white piece of paper.

40
00:01:24,470 --> 00:01:25,830
And this is me.

41
00:01:25,830 --> 00:01:27,060
There's nothing I can
do about that.

42
00:01:27,060 --> 00:01:28,905
People who've met me in real
life are just like, you just

43
00:01:28,905 --> 00:01:30,030
look like you on camera.

44
00:01:30,030 --> 00:01:31,360
You were haunting the studio.

45
00:01:31,360 --> 00:01:32,750
Thank you very much for
saying that, guys.

46
00:01:32,750 --> 00:01:34,890
That's brilliant.

47
00:01:34,890 --> 00:01:37,350
OK, let's do some actual stuff
with mobile phones.

48
00:01:37,350 --> 00:01:38,310
ADDY OSMANI: Sounds good.

49
00:01:38,310 --> 00:01:40,506
JAKE ARCHIBALD: So we can get
the view of the mobile device

50
00:01:40,506 --> 00:01:41,210
up and running.

51
00:01:41,210 --> 00:01:43,940
We're working with a Nexus 7.

52
00:01:43,940 --> 00:01:46,280
So I'm going to unlock that.

53
00:01:46,280 --> 00:01:48,450
So if you're going to do mobile
debugging, the first

54
00:01:48,450 --> 00:01:52,510
thing you want to do is go into
the Settings menu, and

55
00:01:52,510 --> 00:01:55,150
down to Developer Options.

56
00:01:55,150 --> 00:01:56,870
There you'll see this
USB debugging.

57
00:01:56,870 --> 00:01:58,420
You want to make sure
that's ticked.

58
00:01:58,420 --> 00:02:01,640
Because you won't be able
to access it otherwise.

59
00:02:01,640 --> 00:02:04,150
And then you need [INAUDIBLE]
setting in Chrome, as well.

60
00:02:04,150 --> 00:02:07,450
We're going to use the beta
version of Chrome.

61
00:02:07,450 --> 00:02:08,210
I think it's pronounced beta.

62
00:02:08,210 --> 00:02:09,650
Or maybe it's beta.

63
00:02:09,650 --> 00:02:11,069
It's just Chrome better.

64
00:02:11,069 --> 00:02:11,940
ADDY OSMANI: It's
Chrome better.

65
00:02:11,940 --> 00:02:12,820
JAKE ARCHIBALD: Better
than the other one.

66
00:02:12,820 --> 00:02:13,710
ADDY OSMANI: Yes, that's it.

67
00:02:13,710 --> 00:02:15,800
JAKE ARCHIBALD: So there's a few
new features in the better

68
00:02:15,800 --> 00:02:17,840
version, so we're going
to look at those.

69
00:02:17,840 --> 00:02:21,320
So you need to go into the
Settings menu here, and down

70
00:02:21,320 --> 00:02:22,640
to Developer Tools.

71
00:02:22,640 --> 00:02:24,260
And in there, as well,
you want to

72
00:02:24,260 --> 00:02:27,580
enable USB web debugging.

73
00:02:27,580 --> 00:02:31,450
And from there we can just
browse to a web page.

74
00:02:31,450 --> 00:02:34,080
So I'm going to call up "The
Guardian." Because we can use

75
00:02:34,080 --> 00:02:35,930
that as a use case.

76
00:02:35,930 --> 00:02:38,810
So if I wanted to debug this
page, what I would do is, I'm

77
00:02:38,810 --> 00:02:41,420
going to go onto my
desktop machine.

78
00:02:41,420 --> 00:02:44,930
And this is bit is
a bit of a pain.

79
00:02:44,930 --> 00:02:48,120
I tend to just Google
for Chrome Debug.

80
00:02:48,120 --> 00:02:50,860
And the first link is what
I want to look at.

81
00:02:50,860 --> 00:02:53,902

82
00:02:53,902 --> 00:02:57,020
Actually if I do Chrome Android
debug that's probably

83
00:02:57,020 --> 00:02:59,610
the right one.

84
00:02:59,610 --> 00:03:01,380
Thankfully I have this in
my batch history now.

85
00:03:01,380 --> 00:03:03,900
So I don't have to remember
about it again.

86
00:03:03,900 --> 00:03:05,820
About halfway down the page.

87
00:03:05,820 --> 00:03:07,350
ADDY OSMANI: We've recently
refreshed these docs.

88
00:03:07,350 --> 00:03:09,510
And the process of getting
to Setup is a lot more

89
00:03:09,510 --> 00:03:11,740
straightforward than
it was before.

90
00:03:11,740 --> 00:03:14,520
JAKE ARCHIBALD: What I tend to
do is just copy and paste this

91
00:03:14,520 --> 00:03:17,620
line here into my terminal.

92
00:03:17,620 --> 00:03:19,610
I'm going to do that there.

93
00:03:19,610 --> 00:03:20,630
And that sets everything up.

94
00:03:20,630 --> 00:03:22,690
What it's actually doing is it's
forwarding a port from

95
00:03:22,690 --> 00:03:24,600
the device onto my
local machine.

96
00:03:24,600 --> 00:03:26,720
So I can start accessing
things.

97
00:03:26,720 --> 00:03:30,850
This port number here, 9222,
that's what I can access just

98
00:03:30,850 --> 00:03:33,530
in my browser, just in Chrome
on the desktop.

99
00:03:33,530 --> 00:03:36,690
And you see there it's going
to show me The Guardian."

100
00:03:36,690 --> 00:03:37,370
Click that.

101
00:03:37,370 --> 00:03:39,940
And now I've just got the
developer tools, as you would

102
00:03:39,940 --> 00:03:42,550
expect to see them
anywhere else.

103
00:03:42,550 --> 00:03:44,890
Actually, if I'm going to do
some performance testing work

104
00:03:44,890 --> 00:03:46,260
here, I think I've
made a mistake.

105
00:03:46,260 --> 00:03:48,560
Because I've just opened a
standard tab on the browser.

106
00:03:48,560 --> 00:03:50,010
But Addy you were saying
it's better to use

107
00:03:50,010 --> 00:03:51,370
an incognito tab?

108
00:03:51,370 --> 00:03:51,980
ADDY OSMANI: Yeah.

109
00:03:51,980 --> 00:03:54,190
Whenever you're doing any sort
of performance profiling in

110
00:03:54,190 --> 00:03:57,110
Chrome, it's generally best to
use a brand new incognito

111
00:03:57,110 --> 00:03:59,090
window instead of using
a standard window.

112
00:03:59,090 --> 00:04:02,960
Because any apps or extensions
you might have installed can

113
00:04:02,960 --> 00:04:05,000
actually interfere with
the figures that

114
00:04:05,000 --> 00:04:06,030
you're getting back.

115
00:04:06,030 --> 00:04:08,330
So either run in incognito
mode, or start with a

116
00:04:08,330 --> 00:04:10,590
completely blank
Chrome profile.

117
00:04:10,590 --> 00:04:12,480
And that'll just make sure
that your figures are as

118
00:04:12,480 --> 00:04:14,620
accurate as possible.

119
00:04:14,620 --> 00:04:16,730
JAKE ARCHIBALD: So you get all
the tools that you're familiar

120
00:04:16,730 --> 00:04:17,820
with on the desktop.

121
00:04:17,820 --> 00:04:19,709
But you're looking at
a mobile device.

122
00:04:19,709 --> 00:04:22,310
So if I look in the Timeline
here, what I'm going to do is

123
00:04:22,310 --> 00:04:23,640
I'm going to start recording.

124
00:04:23,640 --> 00:04:24,560
I'm going to refresh the page.

125
00:04:24,560 --> 00:04:27,780
So we can capture what happens
on the first load.

126
00:04:27,780 --> 00:04:29,440
And you can see things
coming through.

127
00:04:29,440 --> 00:04:31,140
It will be just like it
is in the desktop.

128
00:04:31,140 --> 00:04:32,780
But things will take longer.

129
00:04:32,780 --> 00:04:35,200
Because it's a lower
power device.

130
00:04:35,200 --> 00:04:36,530
I'll stop that there.

131
00:04:36,530 --> 00:04:38,510
Let's have a look at some of the
stuff that "The Guardian"

132
00:04:38,510 --> 00:04:39,830
did as they loaded.

133
00:04:39,830 --> 00:04:41,940
So as you'd expect, I think
this was stuff that was

134
00:04:41,940 --> 00:04:43,120
happening on the page before.

135
00:04:43,120 --> 00:04:43,760
But here we go.

136
00:04:43,760 --> 00:04:46,820
So this is where the
response kicks in.

137
00:04:46,820 --> 00:04:48,220
You see some data.

138
00:04:48,220 --> 00:04:50,275
The page starts building
itself.

139
00:04:50,275 --> 00:04:53,690
If we have a look we'll see
eventually there is some

140
00:04:53,690 --> 00:04:56,140
script evaluation.

141
00:04:56,140 --> 00:05:00,130
So I'm not picking on "The
Guardian" because some kind of

142
00:05:00,130 --> 00:05:01,160
issue with it, or anything.

143
00:05:01,160 --> 00:05:02,800
Because it's actually
one of the

144
00:05:02,800 --> 00:05:04,590
better performing websites.

145
00:05:04,590 --> 00:05:06,470
They've done a really, really
good job of it.

146
00:05:06,470 --> 00:05:09,120
I'm just showing some of the
things that maybe they could

147
00:05:09,120 --> 00:05:10,680
improve upon if they wanted.

148
00:05:10,680 --> 00:05:14,730
So if we have a look at this
script here, what do we see?

149
00:05:14,730 --> 00:05:20,340
OK, so there's a lot of HTML
parsing happening on DOM load.

150
00:05:20,340 --> 00:05:24,830
So this bit of JavaScript here
is taking up 300 milliseconds.

151
00:05:24,830 --> 00:05:27,320
And a lot that is
HTML parsing.

152
00:05:27,320 --> 00:05:30,790
This is little chunks of
text being sent to--

153
00:05:30,790 --> 00:05:31,870
[INAUDIBLE].

154
00:05:31,870 --> 00:05:34,340
It's something jQuery like,
because it's got a lot of the

155
00:05:34,340 --> 00:05:35,390
methods you would expect
from jQuery.

156
00:05:35,390 --> 00:05:37,256
But I expect it's maybe Zepto?

157
00:05:37,256 --> 00:05:39,780
ADDY OSMANI: It's probably
something custom like Zepto.

158
00:05:39,780 --> 00:05:43,150
JAKE ARCHIBALD: So if they
delivered all of these as one

159
00:05:43,150 --> 00:05:46,330
lump to the parser, it would be
much quicker than doing it

160
00:05:46,330 --> 00:05:47,000
in small parts.

161
00:05:47,000 --> 00:05:48,460
And then they could pull out
the elements needed.

162
00:05:48,460 --> 00:05:50,840
But as I say, they don't
really have a

163
00:05:50,840 --> 00:05:51,870
huge performance problem.

164
00:05:51,870 --> 00:05:53,565
But they could claw
back a few hundred

165
00:05:53,565 --> 00:05:56,520
milliseconds by doing that.

166
00:05:56,520 --> 00:06:00,280
So one of the things in the
beta is we get some of the

167
00:06:00,280 --> 00:06:01,570
features from the desktop.

168
00:06:01,570 --> 00:06:04,650
And one of those is
paint rectangles.

169
00:06:04,650 --> 00:06:08,410
So if I click this cog in the
bottom right hand corner, I

170
00:06:08,410 --> 00:06:09,660
get this menu.

171
00:06:09,660 --> 00:06:12,200
And one of the things we'll
see in here is Show Paint

172
00:06:12,200 --> 00:06:13,290
Rectangles.

173
00:06:13,290 --> 00:06:16,330
So if we look at the device,
what happens here is anything

174
00:06:16,330 --> 00:06:17,950
that's being repainted
is going to get a red

175
00:06:17,950 --> 00:06:19,080
rectangle around it.

176
00:06:19,080 --> 00:06:21,470
As you can see, it's only
really the scroll bar.

177
00:06:21,470 --> 00:06:24,970
Because that's being drawn every
time I scroll the page.

178
00:06:24,970 --> 00:06:27,480
The reason I'm not seeing any
paints around here is because

179
00:06:27,480 --> 00:06:29,020
it's all already been painted.

180
00:06:29,020 --> 00:06:31,190
It gets painted when
it's loaded.

181
00:06:31,190 --> 00:06:32,950
And we're just sort
of panning up and

182
00:06:32,950 --> 00:06:33,650
down it as we're scrolling.

183
00:06:33,650 --> 00:06:36,360
That keep things really
nice and fast.

184
00:06:36,360 --> 00:06:39,780
If I scroll to the top here
and click this Top Stories

185
00:06:39,780 --> 00:06:41,990
button, you can see that
flash of red there.

186
00:06:41,990 --> 00:06:45,690
Because it's had to draw that
region of the screen.

187
00:06:45,690 --> 00:06:48,280
You can see that
here, as well.

188
00:06:48,280 --> 00:06:51,300
So if I get rid of those--

189
00:06:51,300 --> 00:06:53,490
I'm going to get rid of the
Paint Rectangles here.

190
00:06:53,490 --> 00:06:57,380
Another one of the things we
can see as well is the

191
00:06:57,380 --> 00:06:58,880
composited layer borders.

192
00:06:58,880 --> 00:07:01,610
And this will show us what's
being sent as an extra layer

193
00:07:01,610 --> 00:07:02,500
to the GPU.

194
00:07:02,500 --> 00:07:05,740
On the show two weeks ago we
talked about what's going to

195
00:07:05,740 --> 00:07:07,990
cause a layer, and what the
benefits of it are, what maybe

196
00:07:07,990 --> 00:07:09,330
some of the downsides are.

197
00:07:09,330 --> 00:07:12,440
So if I press that here we can
see that a grid has appeared

198
00:07:12,440 --> 00:07:13,010
on the page.

199
00:07:13,010 --> 00:07:18,650
And this is because the page
will be split into small

200
00:07:18,650 --> 00:07:21,150
sections, and sent to
textures on the GPU.

201
00:07:21,150 --> 00:07:23,810
And each one of the squares is
another part of the texture.

202
00:07:23,810 --> 00:07:26,800
And as I zoom in, that grid
will adjust itself.

203
00:07:26,800 --> 00:07:29,670
And you can see it's blurry.

204
00:07:29,670 --> 00:07:30,840
And then the grid updates.

205
00:07:30,840 --> 00:07:32,130
It becomes sharp again.

206
00:07:32,130 --> 00:07:34,310
You can see that process
happening.

207
00:07:34,310 --> 00:07:39,510
So anything that's on its
own layer gets an orange

208
00:07:39,510 --> 00:07:40,700
rectangle around it.

209
00:07:40,700 --> 00:07:41,910
And as you can see there's
nothing really on "The

210
00:07:41,910 --> 00:07:44,340
Guardian" page that does that.

211
00:07:44,340 --> 00:07:46,960
If we scroll right down
to the bottom here,

212
00:07:46,960 --> 00:07:47,680
there is one here.

213
00:07:47,680 --> 00:07:52,560
You can see this orange border
around this section here.

214
00:07:52,560 --> 00:07:55,770
So let's take a look at
why that's happening.

215
00:07:55,770 --> 00:07:58,850
If we bring the frames per
second meter up as well, this

216
00:07:58,850 --> 00:08:01,970
gives you a clue to the GPU
memory situation, which is

217
00:08:01,970 --> 00:08:02,520
really interesting.

218
00:08:02,520 --> 00:08:05,090
You can see there,
18 megabytes.

219
00:08:05,090 --> 00:08:07,330
We're not using a lot
on this page.

220
00:08:07,330 --> 00:08:09,330
Let's find out why
that element's

221
00:08:09,330 --> 00:08:12,000
formed it's own layer.

222
00:08:12,000 --> 00:08:13,880
The easiest way to do that
is in the Elements panel.

223
00:08:13,880 --> 00:08:16,950
I'm going to click this
magnifying glass here.

224
00:08:16,950 --> 00:08:17,510
I click that.

225
00:08:17,510 --> 00:08:18,580
And then I can just
tap somewhere

226
00:08:18,580 --> 00:08:19,620
on the device itself.

227
00:08:19,620 --> 00:08:20,760
So click there.

228
00:08:20,760 --> 00:08:22,660
It's showing me that element.

229
00:08:22,660 --> 00:08:25,260
If I go up to the UL, I can
see I had [? the styles ?]

230
00:08:25,260 --> 00:08:26,110
there.

231
00:08:26,110 --> 00:08:31,380
Nothing obvious in the
Nav, nothing there.

232
00:08:31,380 --> 00:08:32,150
Here we go.

233
00:08:32,150 --> 00:08:35,630
So in this section's footer,
there's this null transform.

234
00:08:35,630 --> 00:08:37,684
So that's not really changing
the appearance of the page.

235
00:08:37,684 --> 00:08:41,520
But it is triggering a layer
to be created here.

236
00:08:41,520 --> 00:08:43,390
Not quite sure why they've
done that.

237
00:08:43,390 --> 00:08:48,385
It's maybe working around a
bug in another browser.

238
00:08:48,385 --> 00:08:50,560
It's been known to sort of
change how rendering happens

239
00:08:50,560 --> 00:08:53,180
and improve things
in some browsers.

240
00:08:53,180 --> 00:08:57,090
We can see we're using
18, 19 megabytes.

241
00:08:57,090 --> 00:09:01,730
If I were to take that off and
total the page, we've just

242
00:09:01,730 --> 00:09:02,890
freed up some GPU memory.

243
00:09:02,890 --> 00:09:04,320
We're down to 16 megabytes.

244
00:09:04,320 --> 00:09:06,460
So that's something they
could do as well.

245
00:09:06,460 --> 00:09:09,840
But once again, I stress they
don't really have a huge

246
00:09:09,840 --> 00:09:11,650
performance problem.

247
00:09:11,650 --> 00:09:13,430
Even though they've got layers,
they don't need it.

248
00:09:13,430 --> 00:09:15,950
It's not a big deal.

249
00:09:15,950 --> 00:09:18,130
When we've got the frames per
second monitor here-- what I'm

250
00:09:18,130 --> 00:09:23,170
going to do is take the
compositing off.

251
00:09:23,170 --> 00:09:23,920
There we go.

252
00:09:23,920 --> 00:09:26,670
So the frames per second only
updates as I'm scrolling.

253
00:09:26,670 --> 00:09:29,545
Because nothing's being drawn
once I stop scrolling.

254
00:09:29,545 --> 00:09:32,010
So the frames per second meter
is going to stay still.

255
00:09:32,010 --> 00:09:35,920
You can see is we're scrolling
we're achieving near on 60

256
00:09:35,920 --> 00:09:37,620
frames per second, which
is the ideal.

257
00:09:37,620 --> 00:09:41,310
That's the refresh rate
of the device.

258
00:09:41,310 --> 00:09:43,840
In the last session we were
talking about some of the

259
00:09:43,840 --> 00:09:45,170
benefits of adding layers.

260
00:09:45,170 --> 00:09:47,350
Like how it speeded
up animation.

261
00:09:47,350 --> 00:09:49,080
But it's not always
a good thing.

262
00:09:49,080 --> 00:09:53,246
So I'm going to try and
break the page.

263
00:09:53,246 --> 00:09:55,680
I'm going to get rid of this
frames per second monitor.

264
00:09:55,680 --> 00:09:57,310
And I'm going to give
everything on the

265
00:09:57,310 --> 00:09:59,610
page its own layer.

266
00:09:59,610 --> 00:10:06,620
And to do that, the simplest
way, I'm going to try and

267
00:10:06,620 --> 00:10:07,870
spell the word, document.

268
00:10:07,870 --> 00:10:10,120

269
00:10:10,120 --> 00:10:12,025
I'm going to create
a style element.

270
00:10:12,025 --> 00:10:17,310

271
00:10:17,310 --> 00:10:21,110
And in a text content for
that I'm going to

272
00:10:21,110 --> 00:10:23,160
do for every element.

273
00:10:23,160 --> 00:10:26,050
And WebKit transform.

274
00:10:26,050 --> 00:10:27,590
Do watch if I spell
anything wrong.

275
00:10:27,590 --> 00:10:29,350
Because I'm dreadful at this.

276
00:10:29,350 --> 00:10:31,190
ADDY OSMANI: This is genuinely
the first piece of coding that

277
00:10:31,190 --> 00:10:32,790
Jake's done all year.

278
00:10:32,790 --> 00:10:35,060
So don't worry if it looks
a little bit crap.

279
00:10:35,060 --> 00:10:36,220
JAKE ARCHIBALD: Started
Google and that's it.

280
00:10:36,220 --> 00:10:38,960
Not allowed to code anymore.

281
00:10:38,960 --> 00:10:42,670
And I'm going to do
translate Z, 0.

282
00:10:42,670 --> 00:10:44,965
This time I'm going to put some
semicolons in just to mix

283
00:10:44,965 --> 00:10:46,710
it up a bit.

284
00:10:46,710 --> 00:10:48,990
So we're still--

285
00:10:48,990 --> 00:10:51,110
if I can stop highlighting over
an element, we should

286
00:10:51,110 --> 00:10:53,790
still have some really smooth
scrolling going on here.

287
00:10:53,790 --> 00:10:55,660
Yeah, that's still smooth.

288
00:10:55,660 --> 00:10:57,830
Because although I've created
that style element, it's not

289
00:10:57,830 --> 00:10:58,940
in the document yet.

290
00:10:58,940 --> 00:11:00,190
So I'm going to do
document.appendChild--

291
00:11:00,190 --> 00:11:04,122

292
00:11:04,122 --> 00:11:05,380
am I spelling that right?--

293
00:11:05,380 --> 00:11:07,760
C-H-I-L-D.

294
00:11:07,760 --> 00:11:09,380
This is going to add that script
to the page, and make

295
00:11:09,380 --> 00:11:10,600
everything it's own layer.

296
00:11:10,600 --> 00:11:12,130
I'm just going to keep
scrolling the page.

297
00:11:12,130 --> 00:11:13,270
You can see it's smooth.

298
00:11:13,270 --> 00:11:15,600
And now I'm going to add that
element to the page.

299
00:11:15,600 --> 00:11:18,340
And that will take effect
in a second.

300
00:11:18,340 --> 00:11:20,880
Actually, you can't do
document.appendChild.

301
00:11:20,880 --> 00:11:21,900
That's a silly thing to do.

302
00:11:21,900 --> 00:11:23,150
It's document.head.appendChild.

303
00:11:23,150 --> 00:11:25,660

304
00:11:25,660 --> 00:11:27,610
This is why I don't
do live shows.

305
00:11:27,610 --> 00:11:29,350
So buttery smooth scrolling.

306
00:11:29,350 --> 00:11:32,760
And then that goes into
the document.

307
00:11:32,760 --> 00:11:33,410
And there we go.

308
00:11:33,410 --> 00:11:36,700
We can see the scrolling, the
performance is just going

309
00:11:36,700 --> 00:11:37,760
completely down the toilet.

310
00:11:37,760 --> 00:11:39,860
It's awful.

311
00:11:39,860 --> 00:11:41,180
ADDY OSMANI: And the reason
for that is that the link

312
00:11:41,180 --> 00:11:42,880
between CPU and GPU
doesn't really

313
00:11:42,880 --> 00:11:43,930
have a lot of bandwidth.

314
00:11:43,930 --> 00:11:47,820
And so when you introduce
excessive textures there, it's

315
00:11:47,820 --> 00:11:48,810
just going to look crap.

316
00:11:48,810 --> 00:11:49,450
JAKE ARCHIBALD: Exactly that.

317
00:11:49,450 --> 00:11:51,670
If we bring the frames per
second meter, it shows us

318
00:11:51,670 --> 00:11:53,130
exactly what's going on here.

319
00:11:53,130 --> 00:11:56,830
It tells us the framework has
gone down to 25 or less.

320
00:11:56,830 --> 00:11:59,880
But the real clue here
is the GPU memory.

321
00:11:59,880 --> 00:12:02,330
We're hitting the top
of the GPU memory.

322
00:12:02,330 --> 00:12:04,490
So as you scroll down the page,
things are going out of

323
00:12:04,490 --> 00:12:05,590
GPU memory.

324
00:12:05,590 --> 00:12:06,890
Other things are coming in.

325
00:12:06,890 --> 00:12:09,060
We're losing all the performance
that we would get

326
00:12:09,060 --> 00:12:11,870
from the hardware.

327
00:12:11,870 --> 00:12:13,680
It's a terrible thing to do.

328
00:12:13,680 --> 00:12:16,270
We can see now, if we put the
composite add layer borders

329
00:12:16,270 --> 00:12:20,790
on, you see everything has that
orange border to show

330
00:12:20,790 --> 00:12:22,410
that it's in a layer.

331
00:12:22,410 --> 00:12:27,850
All we would need to do to get
our performance back is in the

332
00:12:27,850 --> 00:12:30,450
dev tools, change that
to removeChild.

333
00:12:30,450 --> 00:12:34,060

334
00:12:34,060 --> 00:12:37,330
So scrolling bad, and that
will take effect.

335
00:12:37,330 --> 00:12:41,650
And it will be a little bit of
time before it realizes I can

336
00:12:41,650 --> 00:12:44,950
actually flush the GPU memory.

337
00:12:44,950 --> 00:12:46,490
And everything should
come back to normal.

338
00:12:46,490 --> 00:12:47,440
There we go.

339
00:12:47,440 --> 00:12:48,690
So everything is smooth again.

340
00:12:48,690 --> 00:12:52,170

341
00:12:52,170 --> 00:12:53,060
Be careful with your layers.

342
00:12:53,060 --> 00:12:55,060
Make sure you're not
creating too many.

343
00:12:55,060 --> 00:12:58,260
But they can be really good for
certain bits of animation

344
00:12:58,260 --> 00:12:59,580
performance.

345
00:12:59,580 --> 00:13:00,970
Make sure you're testing
on the device.

346
00:13:00,970 --> 00:13:03,190
Make sure you're looking
at the GPU memory.

347
00:13:03,190 --> 00:13:03,830
Don't overuse it.

348
00:13:03,830 --> 00:13:07,180
Because you will lose a lot of
performance in other places.

349
00:13:07,180 --> 00:13:08,780
ADDY OSMANI: Ideally make sure
that you have a measurably

350
00:13:08,780 --> 00:13:11,150
high repaint cost on something
before you start exploring

351
00:13:11,150 --> 00:13:14,560
using these kinds of hacks.

352
00:13:14,560 --> 00:13:17,910
JAKE ARCHIBALD: Addy, what are
you going to talk about?

353
00:13:17,910 --> 00:13:18,840
ADDY OSMANI: I've
got some toys.

354
00:13:18,840 --> 00:13:23,190
So there have recently been
some really nice new tools

355
00:13:23,190 --> 00:13:25,380
that have come out for
mobile debugging.

356
00:13:25,380 --> 00:13:27,910
And I'm going show you something
called MIHTool, or

357
00:13:27,910 --> 00:13:30,990
M-I-H tool, that basically gives
you an entire WebKit

358
00:13:30,990 --> 00:13:33,530
Inspector on an iPad
or iPhone.

359
00:13:33,530 --> 00:13:34,940
So we're going to switch
around a little bit.

360
00:13:34,940 --> 00:13:37,360
We're going to do a--

361
00:13:37,360 --> 00:13:38,235
JAKE ARCHIBALD: We're
going to do a swap.

362
00:13:38,235 --> 00:13:39,030
ADDY OSMANI: We're going
to do a swap.

363
00:13:39,030 --> 00:13:40,330
JAKE ARCHIBALD: Well
this is the thing.

364
00:13:40,330 --> 00:13:43,020
This studio only has one camera
next to me with the

365
00:13:43,020 --> 00:13:44,010
mobile device on.

366
00:13:44,010 --> 00:13:46,460
And I've got this machine
all networked up.

367
00:13:46,460 --> 00:13:47,620
This is something we
couldn't do live.

368
00:13:47,620 --> 00:13:48,830
Because we're actually going
to have to swap seats.

369
00:13:48,830 --> 00:13:50,090
But we're going to
edit this in.

370
00:13:50,090 --> 00:13:50,450
ADDY OSMANI: Yes.

371
00:13:50,450 --> 00:13:51,220
JAKE ARCHIBALD: It's going
to look really smooth.

372
00:13:51,220 --> 00:13:51,830
ADDY OSMANI: It's going
to look amazing.

373
00:13:51,830 --> 00:13:52,640
JAKE ARCHIBALD: It is.

374
00:13:52,640 --> 00:13:56,850
Maybe we should have some
animation where it morphs.

375
00:13:56,850 --> 00:13:59,340
If we look at the camera, could
we have something that

376
00:13:59,340 --> 00:14:00,140
was morph our faces?

377
00:14:00,140 --> 00:14:01,980
I don't think we've got
time to do that.

378
00:14:01,980 --> 00:14:03,530
ADDY OSMANI: We might.

379
00:14:03,530 --> 00:14:06,260
JAKE ARCHIBALD: Let's just
have a awkward fumble.

380
00:14:06,260 --> 00:14:08,790

381
00:14:08,790 --> 00:14:11,310
Hello, and welcome back to
Mobile Web Thursdays.

382
00:14:11,310 --> 00:14:12,340
I'm Addy Osmani.

383
00:14:12,340 --> 00:14:13,540
And with me in the studio is--

384
00:14:13,540 --> 00:14:14,470
ADDY OSMANI: Jake Archibald.

385
00:14:14,470 --> 00:14:16,510
JAKE ARCHIBALD: So you're going
to be showing some toys

386
00:14:16,510 --> 00:14:17,200
you brought in?

387
00:14:17,200 --> 00:14:17,780
ADDY OSMANI: Yes.

388
00:14:17,780 --> 00:14:19,060
So I brought in an iPad today.

389
00:14:19,060 --> 00:14:21,280
And I'm going to be showing you
a brand new tool called

390
00:14:21,280 --> 00:14:25,240
MIHTool that helps you debug
apps and sites directly on

391
00:14:25,240 --> 00:14:26,520
your iOS devices.

392
00:14:26,520 --> 00:14:28,480
And one of the cool things about
this is that you get

393
00:14:28,480 --> 00:14:30,115
both an inspector
on the device.

394
00:14:30,115 --> 00:14:34,220
But you can also get things like
timeline for inspecting

395
00:14:34,220 --> 00:14:36,590
what your performance is like,
what your scripting is like.

396
00:14:36,590 --> 00:14:39,110
You get access to complete
cache control.

397
00:14:39,110 --> 00:14:41,220
So if you want to make sure
that your pages are being

398
00:14:41,220 --> 00:14:43,700
properly cached, and you just
see how your pages perform

399
00:14:43,700 --> 00:14:46,050
there, you can do that
on the device, too.

400
00:14:46,050 --> 00:14:49,520
So I'm going to switch over
to the iPad right now.

401
00:14:49,520 --> 00:14:51,880
And I currently have
the site called--

402
00:14:51,880 --> 00:14:55,060
this is a jQuery plug-in
site called Isotope.

403
00:14:55,060 --> 00:14:56,010
You've probably seen
this before.

404
00:14:56,010 --> 00:14:58,030
It's by Dave DeSandro.

405
00:14:58,030 --> 00:14:59,650
It just organizes things.

406
00:14:59,650 --> 00:15:02,610
It's this really nice layout
that's pretty flexible.

407
00:15:02,610 --> 00:15:04,405
Jake, you were talking
about composited

408
00:15:04,405 --> 00:15:06,450
layer borders earlier.

409
00:15:06,450 --> 00:15:06,910
I'm going to go.

410
00:15:06,910 --> 00:15:09,110
And I'm going to, first
of all, enable the Web

411
00:15:09,110 --> 00:15:11,400
Inspector on here.

412
00:15:11,400 --> 00:15:13,110
And the first thing you're going
to notice happen is that

413
00:15:13,110 --> 00:15:16,600
I now have dev tools slash
a Web Inspector on here.

414
00:15:16,600 --> 00:15:18,790
I can go and I can
inspect elements.

415
00:15:18,790 --> 00:15:19,820
I have a resources panel.

416
00:15:19,820 --> 00:15:21,150
I've got network.

417
00:15:21,150 --> 00:15:22,230
I've got timeline.

418
00:15:22,230 --> 00:15:25,320
And I can basically use these
in the same way that I do on

419
00:15:25,320 --> 00:15:27,110
desktop dev tools.

420
00:15:27,110 --> 00:15:28,560
JAKE ARCHIBALD: Is a
native app running?

421
00:15:28,560 --> 00:15:29,950
ADDY OSMANI: This is a native
app that's running.

422
00:15:29,950 --> 00:15:31,825
And it's available for
iPhone and iPad.

423
00:15:31,825 --> 00:15:35,060

424
00:15:35,060 --> 00:15:38,200
Something I'm interested in is
whether this page is actually

425
00:15:38,200 --> 00:15:41,230
using composited layer borders,
whether this will

426
00:15:41,230 --> 00:15:44,285
work with composited layer
borders on, to see if any of

427
00:15:44,285 --> 00:15:46,560
the elements on this page
are being promoted.

428
00:15:46,560 --> 00:15:49,055
And I can actually I go into
the menu for this app, and

429
00:15:49,055 --> 00:15:51,300
trigger WebKit Debug
Borders on.

430
00:15:51,300 --> 00:15:53,090
I'm going to need to restart
the app really quickly.

431
00:15:53,090 --> 00:15:55,370
So I'm just going to do that.

432
00:15:55,370 --> 00:15:57,390
Back into MIHTool.

433
00:15:57,390 --> 00:15:59,230
And now, I know it's
very, very subtle.

434
00:15:59,230 --> 00:16:01,230
You probably can't
see it, actually.

435
00:16:01,230 --> 00:16:04,680
But we do have the exact same
tiles on this page that Jake

436
00:16:04,680 --> 00:16:05,870
was showing you earlier.

437
00:16:05,870 --> 00:16:08,450
What you'll also have
are basically

438
00:16:08,450 --> 00:16:09,350
these little outlines.

439
00:16:09,350 --> 00:16:11,400
So let me zoom in
on an element.

440
00:16:11,400 --> 00:16:13,970
And what you'll see around many
of these elements on the

441
00:16:13,970 --> 00:16:17,495
page is that they have the same
highlight around them.

442
00:16:17,495 --> 00:16:18,650
It should be yellow.

443
00:16:18,650 --> 00:16:20,910
But in this case it's a
little bit more green.

444
00:16:20,910 --> 00:16:23,490
But basically that means that
all these elements that have

445
00:16:23,490 --> 00:16:25,560
that border around them
are being promoted

446
00:16:25,560 --> 00:16:26,580
to composite layer.

447
00:16:26,580 --> 00:16:28,730
JAKE ARCHIBALD: Does that have
the thing where each tile is

448
00:16:28,730 --> 00:16:31,400
given the number of times
it's being redrawn?

449
00:16:31,400 --> 00:16:32,830
ADDY OSMANI: Actually, yes.

450
00:16:32,830 --> 00:16:34,590
This is a feature that's
actually in the WebKit

451
00:16:34,590 --> 00:16:36,540
Nightlies, if I'm correct.

452
00:16:36,540 --> 00:16:37,850
And you get this right
with a MIHTool.

453
00:16:37,850 --> 00:16:40,060
So you can get this on
your mobile device.

454
00:16:40,060 --> 00:16:42,440
So I'm going to enable WebKit
Repaint Counter.

455
00:16:42,440 --> 00:16:45,380
I'm going to restart the app
once again, very quickly.

456
00:16:45,380 --> 00:16:48,270
And now what you can see-- you
probably saw it as a flash.

457
00:16:48,270 --> 00:16:52,200
But what you can see, and we
can zoom in on a specific

458
00:16:52,200 --> 00:16:55,910
block of the page, but around
every single element we now

459
00:16:55,910 --> 00:16:58,460
have this little counter in
the corner, that basically

460
00:16:58,460 --> 00:17:00,860
tells you the repaint counts
for that layer.

461
00:17:00,860 --> 00:17:04,760
And if I scroll up and down,
these numbers will go up in

462
00:17:04,760 --> 00:17:07,050
some cases, depending
on what's going on.

463
00:17:07,050 --> 00:17:08,829
I just closed out of the
app accidentally.

464
00:17:08,829 --> 00:17:10,300
But these numbers have basically
gone up in some

465
00:17:10,300 --> 00:17:11,904
cases because of repainting.

466
00:17:11,904 --> 00:17:14,500

467
00:17:14,500 --> 00:17:18,040
JAKE ARCHIBALD: I'm no fan of
Safari's Web Inspector.

468
00:17:18,040 --> 00:17:19,810
I don't understand how
the icons work.

469
00:17:19,810 --> 00:17:20,869
It confuses me.

470
00:17:20,869 --> 00:17:22,670
But check out the WebKit
Nightlies.

471
00:17:22,670 --> 00:17:23,420
And check out this tool.

472
00:17:23,420 --> 00:17:25,589
Because they've done
some really

473
00:17:25,589 --> 00:17:27,150
excellent work around it.

474
00:17:27,150 --> 00:17:29,052
There's a lot of stuff that
we're looking at with Web

475
00:17:29,052 --> 00:17:31,310
Inspector going, we could have
some of those ideas.

476
00:17:31,310 --> 00:17:31,960
ADDY OSMANI: There's
some really

477
00:17:31,960 --> 00:17:32,890
interesting ideas in there.

478
00:17:32,890 --> 00:17:34,540
And you also get access
to things like

479
00:17:34,540 --> 00:17:36,010
Full User Agent setting.

480
00:17:36,010 --> 00:17:39,960
So I can go and I can set this
to Firefox, or Chrome, or IE,

481
00:17:39,960 --> 00:17:42,680
or whatever I want, basically,
without having to go back and

482
00:17:42,680 --> 00:17:44,970
forth between my desktop
and my device.

483
00:17:44,970 --> 00:17:47,740
So it means you get to debug
stuff more so on an actual

484
00:17:47,740 --> 00:17:50,580
device, rather than having to
emulate it somewhere else,

485
00:17:50,580 --> 00:17:52,180
which is neat.

486
00:17:52,180 --> 00:17:55,000
But MIHTools has also got some
additional features you might

487
00:17:55,000 --> 00:17:56,530
find useful.

488
00:17:56,530 --> 00:17:59,400
If you go to View Source in
here, you'll actually get a

489
00:17:59,400 --> 00:18:00,210
complete editor.

490
00:18:00,210 --> 00:18:04,470
I probably want to turn off
those composited layer borders

491
00:18:04,470 --> 00:18:05,040
very quickly.

492
00:18:05,040 --> 00:18:09,210
I'm just going to
restart that.

493
00:18:09,210 --> 00:18:10,370
I still have the repaint
counts on.

494
00:18:10,370 --> 00:18:11,260
It doesn't matter.

495
00:18:11,260 --> 00:18:14,730
But if I go to View Source, this
complete view here, you

496
00:18:14,730 --> 00:18:15,880
might think that it's
just read only.

497
00:18:15,880 --> 00:18:19,570
But I can actually go and make
changes to this page.

498
00:18:19,570 --> 00:18:22,170
Which will then be previewed in
real time once I go back.

499
00:18:22,170 --> 00:18:24,545
So I can make changes to this
any way that I want, the same

500
00:18:24,545 --> 00:18:26,930
way that you probably make
changes to scripts or styles

501
00:18:26,930 --> 00:18:28,580
inside the dev tools.

502
00:18:28,580 --> 00:18:32,150
And the author of MIHTool
is a guy named Unbug, so

503
00:18:32,150 --> 00:18:34,120
twitter.com/unbug.

504
00:18:34,120 --> 00:18:36,150
And he's currently putting a
lot of work into improving

505
00:18:36,150 --> 00:18:36,680
this editor.

506
00:18:36,680 --> 00:18:39,990
So that you can basically go
wherever you want, make live

507
00:18:39,990 --> 00:18:42,270
changes to your site or your
app, and preview what it's

508
00:18:42,270 --> 00:18:43,890
like, and debug directly
on the device.

509
00:18:43,890 --> 00:18:45,450
Which I think is neat.

510
00:18:45,450 --> 00:18:48,750
JAKE ARCHIBALD: So I presume
that's using a WebView to show

511
00:18:48,750 --> 00:18:49,530
you the page.

512
00:18:49,530 --> 00:18:50,760
ADDY OSMANI: Yes, this
is using a WebView.

513
00:18:50,760 --> 00:18:52,590
JAKE ARCHIBALD: Does that
mean it's going to be--

514
00:18:52,590 --> 00:18:56,450
because Safari, they have
some kinds of JavaScript

515
00:18:56,450 --> 00:18:58,290
acceleration are only available
to the native

516
00:18:58,290 --> 00:18:59,580
browser and not WebViews.

517
00:18:59,580 --> 00:19:00,780
That's the case here?

518
00:19:00,780 --> 00:19:02,280
ADDY OSMANI: There are some
limitations here.

519
00:19:02,280 --> 00:19:04,770
When it comes to performance
profiling, that is going to be

520
00:19:04,770 --> 00:19:06,300
one thing that you have
to keep in mind.

521
00:19:06,300 --> 00:19:07,460
This is still using WebView.

522
00:19:07,460 --> 00:19:09,560
It's not going to be completely
accurate when it

523
00:19:09,560 --> 00:19:13,180
comes to using Timeline for your
performance profiling.

524
00:19:13,180 --> 00:19:16,050
But for things like getting
insights into your composite

525
00:19:16,050 --> 00:19:18,320
layer borders, getting insights
into those repaints,

526
00:19:18,320 --> 00:19:19,820
it's actually cool.

527
00:19:19,820 --> 00:19:21,620
Another useful thing you can
do with this is you can

528
00:19:21,620 --> 00:19:25,590
actually remote into this tool,
and drive it from your

529
00:19:25,590 --> 00:19:27,180
desktop if you want to.

530
00:19:27,180 --> 00:19:28,980
I don't have a full set
up for this on my

531
00:19:28,980 --> 00:19:29,620
screen at the moment.

532
00:19:29,620 --> 00:19:32,390
But if we switch back to my
screen, I do have a screen

533
00:19:32,390 --> 00:19:34,480
shot of this working earlier.

534
00:19:34,480 --> 00:19:38,220
But basically I can control this
the exact same way that

535
00:19:38,220 --> 00:19:42,590
Jake was doing earlier with
remote debugging to control

536
00:19:42,590 --> 00:19:43,600
the device.

537
00:19:43,600 --> 00:19:45,780
And you can actually send this
a bunch of commands.

538
00:19:45,780 --> 00:19:47,960
You can send this URLs that
you want it to load up.

539
00:19:47,960 --> 00:19:49,930
You can inject scripts
into there.

540
00:19:49,930 --> 00:19:51,480
You can do a bunch of stuff.

541
00:19:51,480 --> 00:19:53,370
It's definitely worth
checking out.

542
00:19:53,370 --> 00:19:56,000
We'll link you up to MIHTool
in the show notes.

543
00:19:56,000 --> 00:19:59,240
But the next thing I'm going
to be talking about is some

544
00:19:59,240 --> 00:20:02,320
mobile emulation tools that we
have inside the dev tools.

545
00:20:02,320 --> 00:20:06,050
Now for anybody that has done
any amount of mobile debugging

546
00:20:06,050 --> 00:20:08,700
and mobile development before,
one pain point is actually

547
00:20:08,700 --> 00:20:11,330
having to have these kinds
of devices around to

548
00:20:11,330 --> 00:20:12,250
properly debug on.

549
00:20:12,250 --> 00:20:14,070
And not everybody
has got those.

550
00:20:14,070 --> 00:20:15,260
We've got a Nexus around here.

551
00:20:15,260 --> 00:20:16,660
We've got Nexus 4 phones.

552
00:20:16,660 --> 00:20:17,760
We've tons of devices.

553
00:20:17,760 --> 00:20:20,590
Most people don't actually have
their own private lab for

554
00:20:20,590 --> 00:20:21,260
this stuff.

555
00:20:21,260 --> 00:20:24,250
So sometimes it can be useful to
have mobile emulation tools

556
00:20:24,250 --> 00:20:24,860
available to you.

557
00:20:24,860 --> 00:20:28,340
So you can just get this stuff
done inside your browser.

558
00:20:28,340 --> 00:20:32,250
And we've put a lot of work into
doing this in Chrome via

559
00:20:32,250 --> 00:20:33,520
the dev tools, lately.

560
00:20:33,520 --> 00:20:35,690
The first thing I'm going to
show you is, let's say that

561
00:20:35,690 --> 00:20:37,790
you're working on an
app or a site.

562
00:20:37,790 --> 00:20:39,970
And you just want to be able
to preview what your

563
00:20:39,970 --> 00:20:41,610
breakpoints look like.

564
00:20:41,610 --> 00:20:42,840
Let's say I'm using
media queries.

565
00:20:42,840 --> 00:20:45,780
And I want to see, what does my
site look like at different

566
00:20:45,780 --> 00:20:47,900
viewport sizes.

567
00:20:47,900 --> 00:20:49,020
Go into Dock-To-Right mode.

568
00:20:49,020 --> 00:20:50,330
I'm currently in Dock-To-Right
mode.

569
00:20:50,330 --> 00:20:53,870
Let's just kill the dev
tools very quickly.

570
00:20:53,870 --> 00:20:56,620
I'm going to go back
into my dev tools.

571
00:20:56,620 --> 00:20:59,170
This is probably what
you start out with.

572
00:20:59,170 --> 00:21:01,820
Just hold and toggle
in the very corner.

573
00:21:01,820 --> 00:21:04,530
And you can then switch
to Dock-To-Right mode.

574
00:21:04,530 --> 00:21:06,130
And you can then use
the splitter.

575
00:21:06,130 --> 00:21:09,550
So I'm going to be moving my
splitter more to the left.

576
00:21:09,550 --> 00:21:12,430
And what you can see as I do
that is that the layout-- this

577
00:21:12,430 --> 00:21:14,110
is "The Boston Globe"--

578
00:21:14,110 --> 00:21:16,880
the layout is actually changing
every single time I

579
00:21:16,880 --> 00:21:18,470
hit a different breakpoint.

580
00:21:18,470 --> 00:21:20,710
And that means that I can just
preview what the site looks

581
00:21:20,710 --> 00:21:21,820
like at different breakpoints.

582
00:21:21,820 --> 00:21:23,750
Normally what some people have
been doing is actually

583
00:21:23,750 --> 00:21:24,670
resizing Chrome.

584
00:21:24,670 --> 00:21:25,450
You don't have to do that.

585
00:21:25,450 --> 00:21:26,690
You can just use this.

586
00:21:26,690 --> 00:21:28,300
And it'll do the exact
same thing.

587
00:21:28,300 --> 00:21:29,950
JAKE ARCHIBALD: Because
Chrome has a minimum

588
00:21:29,950 --> 00:21:30,830
width to it, as well.

589
00:21:30,830 --> 00:21:32,750
ADDY OSMANI: It does as well.

590
00:21:32,750 --> 00:21:33,322
JAKE ARCHIBALD: It's
not a problem here

591
00:21:33,322 --> 00:21:33,410
where you can go--

592
00:21:33,410 --> 00:21:34,380
ADDY OSMANI: With this there's
not that issue.

593
00:21:34,380 --> 00:21:36,230
I can go as far back
as I want.

594
00:21:36,230 --> 00:21:39,030
I highly doubt-- at least now
until people get watches that

595
00:21:39,030 --> 00:21:40,890
are running WebKit on them--

596
00:21:40,890 --> 00:21:41,900
you'll be doing that.

597
00:21:41,900 --> 00:21:44,700
But this is pretty useful for
those workflows where you do

598
00:21:44,700 --> 00:21:46,420
want to just check out and make
sure your breakpoints are

599
00:21:46,420 --> 00:21:48,500
looking OK.

600
00:21:48,500 --> 00:21:51,030
Speaking of mobile emulation,
I'm going to go back

601
00:21:51,030 --> 00:21:52,720
into to Full View.

602
00:21:52,720 --> 00:21:55,620
We've put a lot of effort into
improving the mobile emulation

603
00:21:55,620 --> 00:21:57,010
tools inside Chrome.

604
00:21:57,010 --> 00:21:59,780
And if we go back into the
Settings cog that Jake was

605
00:21:59,780 --> 00:22:02,430
showing you earlier, you're
probably going to land in

606
00:22:02,430 --> 00:22:03,410
General by default.

607
00:22:03,410 --> 00:22:05,750
Switch on over to the
Overrides tab.

608
00:22:05,750 --> 00:22:08,480
And you'll get access to a whole
range of different tools

609
00:22:08,480 --> 00:22:10,130
for emulating things.

610
00:22:10,130 --> 00:22:12,250
At the very top what you
can see is User Agent.

611
00:22:12,250 --> 00:22:15,120
You then have Device Metrics,
Geolocation, Device

612
00:22:15,120 --> 00:22:17,820
Orientation, Touch Events,
and CSS Media.

613
00:22:17,820 --> 00:22:20,260
So I'm going to show you some
of these in action.

614
00:22:20,260 --> 00:22:22,760
So we're on "The Boston Globe."
I'm going to go, and

615
00:22:22,760 --> 00:22:25,080
I'm going to emulate
my user agent to

616
00:22:25,080 --> 00:22:28,950
something like iPhone.

617
00:22:28,950 --> 00:22:31,240
Now what you'll notice is that
automatically that's actually

618
00:22:31,240 --> 00:22:33,550
triggered my device metrics
to be changed.

619
00:22:33,550 --> 00:22:37,120
And this is really useful for
a workflow that lets you

620
00:22:37,120 --> 00:22:39,940
preview what your device
viewport might look like on

621
00:22:39,940 --> 00:22:40,830
those devices.

622
00:22:40,830 --> 00:22:42,220
So what you'll see--

623
00:22:42,220 --> 00:22:44,920
let me close out of there and
just show you this view a

624
00:22:44,920 --> 00:22:45,840
little bit more.

625
00:22:45,840 --> 00:22:50,230
Basically this is around the
same size as an iPhone might

626
00:22:50,230 --> 00:22:52,910
look like from a metrics
point of view.

627
00:22:52,910 --> 00:22:56,870
But I can easily go and change
the orientation that I'm in.

628
00:22:56,870 --> 00:23:01,470
So I can go from this
to this very easily.

629
00:23:01,470 --> 00:23:05,020
I can go, and I can set custom
settings for my screen

630
00:23:05,020 --> 00:23:06,280
resolution, if I want.

631
00:23:06,280 --> 00:23:09,110
I'm also able to change my
settings for font scale.

632
00:23:09,110 --> 00:23:11,670
So if a device has got a
particular font scale that you

633
00:23:11,670 --> 00:23:15,455
want to emulate, you can also
easily go in and change that.

634
00:23:15,455 --> 00:23:17,660
JAKE ARCHIBALD: What you'd want
to do there with working

635
00:23:17,660 --> 00:23:21,550
with the iPhone, the numbers
that are in there are the

636
00:23:21,550 --> 00:23:24,510
number of device pixels, not
the number of CSS pixels.

637
00:23:24,510 --> 00:23:24,775
ADDY OSMANI: Exactly.

638
00:23:24,775 --> 00:23:26,150
JAKE ARCHIBALD: So you probably
want to half those at

639
00:23:26,150 --> 00:23:26,560
the moment.

640
00:23:26,560 --> 00:23:28,360
ADDY OSMANI: Probably, yeah.

641
00:23:28,360 --> 00:23:29,460
JAKE ARCHIBALD: Something we're
working on at the moment

642
00:23:29,460 --> 00:23:31,610
is emulating device pixel ratio

643
00:23:31,610 --> 00:23:33,370
correctly in the browser.

644
00:23:33,370 --> 00:23:34,520
But that hasn't landed yet.

645
00:23:34,520 --> 00:23:35,500
ADDY OSMANI: That hasn't
landed yet.

646
00:23:35,500 --> 00:23:37,760
It's hopefully going to in
the next few months.

647
00:23:37,760 --> 00:23:42,010
But it's been a feature we're
getting a lot of requests for.

648
00:23:42,010 --> 00:23:43,360
As mentioned, there are
a ton of different

649
00:23:43,360 --> 00:23:44,210
options inside here.

650
00:23:44,210 --> 00:23:47,070
At the moment, you've got
BlackBerry, Android 2.3, the

651
00:23:47,070 --> 00:23:48,530
Nexus S. You've got Firefox.

652
00:23:48,530 --> 00:23:49,650
You've got IE 9.

653
00:23:49,650 --> 00:23:52,180
And this just means that rather
than having to go and

654
00:23:52,180 --> 00:23:55,580
open up a complete device or
throw open an emulator, you

655
00:23:55,580 --> 00:23:58,610
can just do this stuff inside
of dev tools, which can save

656
00:23:58,610 --> 00:24:00,140
you some time.

657
00:24:00,140 --> 00:24:03,120
The next thing I'm going to
show you is Geolocation.

658
00:24:03,120 --> 00:24:06,230
Why don't we look at that.

659
00:24:06,230 --> 00:24:09,350
Remy Sharp put together this
nice little Geolocation demo

660
00:24:09,350 --> 00:24:13,160
that basically says, if your
device supports providing you

661
00:24:13,160 --> 00:24:16,210
some sort of location, when
I load up this page it's

662
00:24:16,210 --> 00:24:17,630
basically going to
try finding me.

663
00:24:17,630 --> 00:24:19,360
And it's going to display
a Google Map

664
00:24:19,360 --> 00:24:20,400
that shows my location.

665
00:24:20,400 --> 00:24:21,300
JAKE ARCHIBALD: It's
done pretty well.

666
00:24:21,300 --> 00:24:21,830
ADDY OSMANI: Yeah, it's
done pretty well.

667
00:24:21,830 --> 00:24:26,810
So we're currently on Bonhill
Street at Campus London.

668
00:24:26,810 --> 00:24:30,100
And it seems to have roughly
found where we are correctly.

669
00:24:30,100 --> 00:24:32,240
There are, however, going to be
times when you're working

670
00:24:32,240 --> 00:24:34,590
on an international application
that's going to

671
00:24:34,590 --> 00:24:37,080
need to perhaps be able to
show some custom content,

672
00:24:37,080 --> 00:24:39,540
depending on where your
user is based.

673
00:24:39,540 --> 00:24:41,520
So how do you debug that?

674
00:24:41,520 --> 00:24:44,140
You can't take your device and
fly over to Spain just to

675
00:24:44,140 --> 00:24:45,110
preview what that looks like.

676
00:24:45,110 --> 00:24:46,710
It just wouldn't make sense.

677
00:24:46,710 --> 00:24:48,870
So we've got this nifty little
feature that actually allows

678
00:24:48,870 --> 00:24:51,810
you to override your geolocation
settings.

679
00:24:51,810 --> 00:24:54,570
So what I'm going to do now is
I'm going to go and just

680
00:24:54,570 --> 00:24:57,040
enable Geolocation.

681
00:24:57,040 --> 00:25:00,230
And I've actually preset
my latitude and

682
00:25:00,230 --> 00:25:01,780
longitude to something.

683
00:25:01,780 --> 00:25:05,240
So I'm now going to just
refresh this page.

684
00:25:05,240 --> 00:25:06,670
And it's placed me
somewhere else.

685
00:25:06,670 --> 00:25:07,900
This is a custom location.

686
00:25:07,900 --> 00:25:10,290
And why don't we just
zoom into this?

687
00:25:10,290 --> 00:25:13,260
So zoom, zoom, zoom.

688
00:25:13,260 --> 00:25:15,120
What's that?

689
00:25:15,120 --> 00:25:17,110
We're now at the Batman
Dental Practice.

690
00:25:17,110 --> 00:25:19,080
JAKE ARCHIBALD: It's not
the dentist you need.

691
00:25:19,080 --> 00:25:21,530
It's the dentist you deserve.

692
00:25:21,530 --> 00:25:22,910
This is in West London.

693
00:25:22,910 --> 00:25:23,640
It's brilliant.

694
00:25:23,640 --> 00:25:24,080
I love it.

695
00:25:24,080 --> 00:25:25,910
ADDY OSMANI: I can't believe
there's a place that has a

696
00:25:25,910 --> 00:25:27,240
Batman Dental Practice.

697
00:25:27,240 --> 00:25:28,680
JAKE ARCHIBALD: I just put
Batman into Google Maps.

698
00:25:28,680 --> 00:25:31,780
It's surprising how many places
are named after our

699
00:25:31,780 --> 00:25:33,210
caped crusader.

700
00:25:33,210 --> 00:25:35,720
If you need to find out the
lat, long of a particular

701
00:25:35,720 --> 00:25:40,510
place, easiest way to do that
is to go into Google Maps.

702
00:25:40,510 --> 00:25:42,550
Actually, can we get
my screen up?

703
00:25:42,550 --> 00:25:45,040
Is that possible for a moment?

704
00:25:45,040 --> 00:25:47,050
All you need to do is if you
right-click somewhere.

705
00:25:47,050 --> 00:25:49,850
And you click What's Here.

706
00:25:49,850 --> 00:25:52,460
And then the numbers that are
up here, that'll be the lat

707
00:25:52,460 --> 00:25:53,750
long of the place you
right-clicked.

708
00:25:53,750 --> 00:25:57,380
So if you're trying to test a
particular place in the world,

709
00:25:57,380 --> 00:26:00,490
that's the quickest way to get
the lat long of that place.

710
00:26:00,490 --> 00:26:01,130
ADDY OSMANI: Excellent.

711
00:26:01,130 --> 00:26:03,130
Now sometimes you're also going
to want to be able to

712
00:26:03,130 --> 00:26:06,170
preview what it's like if you
don't have geolocation

713
00:26:06,170 --> 00:26:06,770
available at all.

714
00:26:06,770 --> 00:26:08,610
So when I don't have my position
available, I can

715
00:26:08,610 --> 00:26:10,480
actually just go and enable
another option.

716
00:26:10,480 --> 00:26:12,940
So emulate position
unavailable.

717
00:26:12,940 --> 00:26:15,210
And if I go and I refresh this
page again, what you can see

718
00:26:15,210 --> 00:26:17,580
is that find your location
has failed.

719
00:26:17,580 --> 00:26:19,490
And that's just another nice
little debug thing that can

720
00:26:19,490 --> 00:26:22,320
help you with trying to figure
out, do I display a specific

721
00:26:22,320 --> 00:26:24,810
message to my users saying, we
couldn't find your position?

722
00:26:24,810 --> 00:26:27,070
Do we fall back on
something else?

723
00:26:27,070 --> 00:26:29,760
But that's just another little
helper that you can use for

724
00:26:29,760 --> 00:26:32,340
geolocation apps.

725
00:26:32,340 --> 00:26:34,450
The next thing I'm going
to talk about is device

726
00:26:34,450 --> 00:26:35,390
orientation.

727
00:26:35,390 --> 00:26:37,980
So device orientation is
basically what we're talking

728
00:26:37,980 --> 00:26:39,910
about when I'm moving my
device in different

729
00:26:39,910 --> 00:26:43,770
directions, tilting, forward,
backwards, all that fun stuff,

730
00:26:43,770 --> 00:26:46,730
as our model, Jake,
is showing off.

731
00:26:46,730 --> 00:26:48,340
But there's a nice little helper
for this in the dev

732
00:26:48,340 --> 00:26:49,210
tools as well.

733
00:26:49,210 --> 00:26:51,950
So I'm going to go to
a new tab with a

734
00:26:51,950 --> 00:26:52,990
different demo on it.

735
00:26:52,990 --> 00:26:57,990
So this is a HTML5 Rocks demo
that has got device

736
00:26:57,990 --> 00:26:59,720
orientation stuff set up.

737
00:26:59,720 --> 00:27:02,120
And we're just going to see what
happens when I change my

738
00:27:02,120 --> 00:27:03,120
device orientation.

739
00:27:03,120 --> 00:27:07,290
So back into overrides.

740
00:27:07,290 --> 00:27:08,970
Override device orientation.

741
00:27:08,970 --> 00:27:11,940
Now we should probably explain
right before we start playing

742
00:27:11,940 --> 00:27:13,070
around with these values.

743
00:27:13,070 --> 00:27:15,480
So here you see alpha,
beta, and gamma.

744
00:27:15,480 --> 00:27:18,470
So alpha corresponds to
the direction in which

745
00:27:18,470 --> 00:27:20,010
your device is facing.

746
00:27:20,010 --> 00:27:22,690
Beta is the front
to back tilt.

747
00:27:22,690 --> 00:27:26,120
And gamma corresponds to
the left to right tilt.

748
00:27:26,120 --> 00:27:29,240
What that means is if I go to
beta, and I perhaps change the

749
00:27:29,240 --> 00:27:32,450
value to something like 60, and
go to gamma, what you'll

750
00:27:32,450 --> 00:27:34,090
see is that it's instantly
changed.

751
00:27:34,090 --> 00:27:37,860
That basically corresponds to
me doing this on my device.

752
00:27:37,860 --> 00:27:40,620
Now I can also go to my gamma,
and I can change that.

753
00:27:40,620 --> 00:27:43,230
Let's try changing that
to 60 as well.

754
00:27:43,230 --> 00:27:45,210
What that's done it is it's
altered the device tilt, so

755
00:27:45,210 --> 00:27:47,570
basically that.

756
00:27:47,570 --> 00:27:49,720
And just being able to change
these values directly inside

757
00:27:49,720 --> 00:27:52,120
of dev tools is so much easier
than having to open up your

758
00:27:52,120 --> 00:27:54,390
app directly on the device, and
figure out, am I in the

759
00:27:54,390 --> 00:27:54,940
right direction?

760
00:27:54,940 --> 00:27:57,690
Is this working?

761
00:27:57,690 --> 00:28:01,020
It's a really, really useful
workflow helper.

762
00:28:01,020 --> 00:28:03,000
JAKE ARCHIBALD: I seem to
remember some suggestion that

763
00:28:03,000 --> 00:28:04,340
we might do something a little
bit better with that

764
00:28:04,340 --> 00:28:09,770
interface, maybe something
in 3D?

765
00:28:09,770 --> 00:28:10,690
ADDY OSMANI: None of
this is final.

766
00:28:10,690 --> 00:28:12,680
But we've been playing around
with some different mock-ups

767
00:28:12,680 --> 00:28:13,730
for how we can improve this.

768
00:28:13,730 --> 00:28:16,500
Because right off the top of my
head, I could not remember

769
00:28:16,500 --> 00:28:17,560
the alpha, beta and gamma.

770
00:28:17,560 --> 00:28:20,570
So it's just not going
to happen.

771
00:28:20,570 --> 00:28:22,930
And so we've been thinking
about, what if we had some

772
00:28:22,930 --> 00:28:26,270
sort of visual way, like a 3D
box, or something, directly

773
00:28:26,270 --> 00:28:27,000
inside the tools.

774
00:28:27,000 --> 00:28:29,226
So that when you change these
values, it's possible for you

775
00:28:29,226 --> 00:28:31,610
to easily see, this is the
direction in which

776
00:28:31,610 --> 00:28:32,950
my devices is now.

777
00:28:32,950 --> 00:28:36,000
This is how it corresponds to
what my app would be doing.

778
00:28:36,000 --> 00:28:37,950
So that's coming on.

779
00:28:37,950 --> 00:28:39,900
We'll see if we end up landing
anything like that.

780
00:28:39,900 --> 00:28:43,600
But it's just another useful
mock-up that we've been

781
00:28:43,600 --> 00:28:45,820
kicking around.

782
00:28:45,820 --> 00:28:47,250
So the next thing that
I'm going to talk

783
00:28:47,250 --> 00:28:49,240
about are touch events.

784
00:28:49,240 --> 00:28:52,360
So I've got a little demo
for that as well.

785
00:28:52,360 --> 00:28:53,050
Touch events are something

786
00:28:53,050 --> 00:28:54,540
particularly useful to emulate.

787
00:28:54,540 --> 00:28:56,940
Because again, you don't
necessarily want to be pulling

788
00:28:56,940 --> 00:28:59,500
out a device every single time
you want to just test the

789
00:28:59,500 --> 00:29:00,880
things you're working.

790
00:29:00,880 --> 00:29:02,890
And if you've got your app, and
it's supposed to working

791
00:29:02,890 --> 00:29:04,490
fine on desktops, it's supposed
to be working fine on

792
00:29:04,490 --> 00:29:07,320
mobile, something you can
actually do is just go back

793
00:29:07,320 --> 00:29:10,750
into your overrides and
emulate touch events.

794
00:29:10,750 --> 00:29:12,580
Now before I go and emulate
this, I'm going to show you a

795
00:29:12,580 --> 00:29:12,960
quick demo.

796
00:29:12,960 --> 00:29:16,030
So this is a paint demo
by Paul Irish

797
00:29:16,030 --> 00:29:17,170
and a few other folks.

798
00:29:17,170 --> 00:29:20,740
And the general idea is I go
into this canvas area.

799
00:29:20,740 --> 00:29:23,000
And I start moving
my cursor around.

800
00:29:23,000 --> 00:29:25,090
And I should be able to
draw inside here.

801
00:29:25,090 --> 00:29:27,660
Unfortunately, this demo only
works with touch events.

802
00:29:27,660 --> 00:29:30,030
It's sort of optimized
for touch.

803
00:29:30,030 --> 00:29:33,040
And I can't do anything in here,
unless I'm on an iPad or

804
00:29:33,040 --> 00:29:34,370
a Nexus device.

805
00:29:34,370 --> 00:29:36,740
So I go and I emulate
my touch events.

806
00:29:36,740 --> 00:29:39,320
And what that basically means
is that I can just use my

807
00:29:39,320 --> 00:29:41,290
cursor to emulate things
like ontouchstart,

808
00:29:41,290 --> 00:29:43,090
ontouchend, and so on.

809
00:29:43,090 --> 00:29:45,680
And I can actually, hopefully,
draw in here now.

810
00:29:45,680 --> 00:29:48,750

811
00:29:48,750 --> 00:29:49,270
There we go.

812
00:29:49,270 --> 00:29:51,570
It's working.

813
00:29:51,570 --> 00:29:52,700
This is just going
to look so bad.

814
00:29:52,700 --> 00:29:56,640
It's like the worst
thing ever.

815
00:29:56,640 --> 00:29:57,710
But it works.

816
00:29:57,710 --> 00:29:58,730
It works.

817
00:29:58,730 --> 00:30:02,170
What's also helpful is, if I
now go back to my Sources

818
00:30:02,170 --> 00:30:04,750
panel, and I go to Event
Listener Breakpoints in the

819
00:30:04,750 --> 00:30:07,140
sidebar-- let me expand
that a little bit.

820
00:30:07,140 --> 00:30:09,080
I scroll down.

821
00:30:09,080 --> 00:30:12,070
You'll see one expandable
called Touch.

822
00:30:12,070 --> 00:30:14,472
And in here you'll see Touch
Start, Touch Move, Touch End,

823
00:30:14,472 --> 00:30:15,790
and Touch Cancel.

824
00:30:15,790 --> 00:30:18,650
Now let's say that I want to set
breakpoints on Touch Start

825
00:30:18,650 --> 00:30:19,740
and Touch Move.

826
00:30:19,740 --> 00:30:22,240
What happens now is, if I try
drawing inside here, it's

827
00:30:22,240 --> 00:30:23,670
going to pause inside
of the debugger.

828
00:30:23,670 --> 00:30:25,810
Because it's detected that
I'm either running

829
00:30:25,810 --> 00:30:27,400
one of those events.

830
00:30:27,400 --> 00:30:30,720
And it's just detected that
we want to stop there.

831
00:30:30,720 --> 00:30:33,000
And this is useful because it
means that, again, rather than

832
00:30:33,000 --> 00:30:35,490
having to be on an actual
device, I can just do the

833
00:30:35,490 --> 00:30:38,090
stuff inside of dev tools, and
have a complete debugging

834
00:30:38,090 --> 00:30:40,190
workflow, using the tools
that I'm used to

835
00:30:40,190 --> 00:30:42,440
using, which is nice.

836
00:30:42,440 --> 00:30:44,080
JAKE ARCHIBALD: If we can switch
to my screen for a

837
00:30:44,080 --> 00:30:47,950
moment, a project by one of
our colleagues, Boris.

838
00:30:47,950 --> 00:30:49,620
If you're interested in hacking
around with something,

839
00:30:49,620 --> 00:30:52,260
this is a really good project
to look at, Magic Touch.

840
00:30:52,260 --> 00:30:54,450
So this is using a
variety of tools.

841
00:30:54,450 --> 00:30:57,740
And what it will let you do is
convert your touch pad on your

842
00:30:57,740 --> 00:31:00,470
Mac, if you have one.

843
00:31:00,470 --> 00:31:01,600
And it will send those
multi-touch

844
00:31:01,600 --> 00:31:02,980
events into the browser.

845
00:31:02,980 --> 00:31:05,550
So you can use the touch
pad the same way you

846
00:31:05,550 --> 00:31:06,620
would a phone service.

847
00:31:06,620 --> 00:31:10,130
And it puts those events
to the browser.

848
00:31:10,130 --> 00:31:11,710
It's a little bit of work
to get it set up.

849
00:31:11,710 --> 00:31:13,410
But if you've got to some spare
time to have a hack

850
00:31:13,410 --> 00:31:14,970
around, it's a fun
thing to do.

851
00:31:14,970 --> 00:31:17,060
And if anyone wants to do some
pull requests, you can teach

852
00:31:17,060 --> 00:31:19,800
Boris how to write some HTML.

853
00:31:19,800 --> 00:31:24,900
That would be very beneficial
to Boris and Google.

854
00:31:24,900 --> 00:31:25,800
ADDY OSMANI: Excellent.

855
00:31:25,800 --> 00:31:30,076
So while it's not necessarily
related to mobile, the second

856
00:31:30,076 --> 00:31:32,840
to last thing I'm going
to be showing you is

857
00:31:32,840 --> 00:31:34,820
CSS print style emulation.

858
00:31:34,820 --> 00:31:37,570
So I'm going to go back inside
the dev tools and overrides.

859
00:31:37,570 --> 00:31:42,140
The very last option is
Emulate CSS Media.

860
00:31:42,140 --> 00:31:43,880
I guess not a lot of people
are going to be using it.

861
00:31:43,880 --> 00:31:46,830
But it's useful for you if you
want to preview what, say,

862
00:31:46,830 --> 00:31:49,540
your print stylesheet looks like
without having to go to

863
00:31:49,540 --> 00:31:51,400
hack around the DOM and hack
around your different

864
00:31:51,400 --> 00:31:51,990
stylesheets.

865
00:31:51,990 --> 00:31:52,630
So I go here.

866
00:31:52,630 --> 00:31:54,250
And I emulate CSS Media.

867
00:31:54,250 --> 00:31:57,100
I'm on "Smashing Magazine." And
what you can now see is

868
00:31:57,100 --> 00:32:00,250
that it's completely switched
the styles in this page over

869
00:32:00,250 --> 00:32:02,790
to something that can actually
look decent in print.

870
00:32:02,790 --> 00:32:04,270
JAKE ARCHIBALD: I didn't realize
they had print styles.

871
00:32:04,270 --> 00:32:05,560
That's really nice.

872
00:32:05,560 --> 00:32:07,420
ADDY OSMANI: It's one of the few
sites I was able to find

873
00:32:07,420 --> 00:32:08,730
that actually has them.

874
00:32:08,730 --> 00:32:09,920
But this is really useful.

875
00:32:09,920 --> 00:32:11,980
"Smashing" is one of those sites
where you might want to

876
00:32:11,980 --> 00:32:14,640
actually print out articles if
you don't necessarily have a

877
00:32:14,640 --> 00:32:16,080
device you're carrying
around the place.

878
00:32:16,080 --> 00:32:21,080
But it's another little helper
that can just avoid you having

879
00:32:21,080 --> 00:32:22,554
to do too much extra
stuff just to

880
00:32:22,554 --> 00:32:23,570
preview your print styles.

881
00:32:23,570 --> 00:32:27,230
JAKE ARCHIBALD: Does our
emulation cover the way when

882
00:32:27,230 --> 00:32:28,770
things print they don't tend
to print backgrounds?

883
00:32:28,770 --> 00:32:29,560
Is that covered there?

884
00:32:29,560 --> 00:32:30,650
Or is it just switching
the stylesheet?

885
00:32:30,650 --> 00:32:33,420
ADDY OSMANI: I think this is
just switching the stylesheet.

886
00:32:33,420 --> 00:32:36,060
Again, fewer sites actually
use these.

887
00:32:36,060 --> 00:32:39,370
You can preview what a site
using Braille might do for

888
00:32:39,370 --> 00:32:41,410
that, that specific stylesheet,
or screen, or

889
00:32:41,410 --> 00:32:45,170
speech, or TV, and so on.

890
00:32:45,170 --> 00:32:47,530
It's useful.

891
00:32:47,530 --> 00:32:50,970
The last thing I'm going to
show you is a little demo

892
00:32:50,970 --> 00:32:52,200
using Browser Stack.

893
00:32:52,200 --> 00:32:53,810
So Browser Stack, I'll
just quickly pull

894
00:32:53,810 --> 00:32:54,840
it up on the screen.

895
00:32:54,840 --> 00:32:58,070
Browser Stack is this really
awesome site that lets you

896
00:32:58,070 --> 00:32:59,360
test things in the cloud.

897
00:32:59,360 --> 00:33:03,050
So if, for example, you're an
app developer that wants to

898
00:33:03,050 --> 00:33:07,320
see how their site or app
looks like in Ice Cream

899
00:33:07,320 --> 00:33:12,480
Sandwich on a specific mobile
phone, or iOS 5 on a specific

900
00:33:12,480 --> 00:33:15,770
Apple device, and you don't have
the money or the funds or

901
00:33:15,770 --> 00:33:18,060
the time to go plugging in these
different devices, and

902
00:33:18,060 --> 00:33:20,600
you don't necessarily want to
be using emulators, you can

903
00:33:20,600 --> 00:33:22,010
just use Browser
Stack for this.

904
00:33:22,010 --> 00:33:23,940
They've got a ton of different
devices hooked up, a ton of

905
00:33:23,940 --> 00:33:26,240
different emulators that are
just running in the cloud.

906
00:33:26,240 --> 00:33:28,230
And you can just spin up
different instances of those

907
00:33:28,230 --> 00:33:30,980
whenever you want.

908
00:33:30,980 --> 00:33:34,580
What I've actually done for
my dotfiles is I've

909
00:33:34,580 --> 00:33:35,350
just wired them up.

910
00:33:35,350 --> 00:33:38,870
So I can actually just easily
execute any site, whether it's

911
00:33:38,870 --> 00:33:42,360
local or external, via a
specific combination.

912
00:33:42,360 --> 00:33:45,440
In this case, which you can see,
it says Android Nexus.

913
00:33:45,440 --> 00:33:50,790
And I want to go see what "The
Boston Globe" looks like on

914
00:33:50,790 --> 00:33:54,390
latest Android version
on a Nexus device.

915
00:33:54,390 --> 00:33:58,280
And that's basically going to go
and spin up Browser Stack.

916
00:33:58,280 --> 00:33:59,560
It should roughly take
just a moment.

917
00:33:59,560 --> 00:34:05,010

918
00:34:05,010 --> 00:34:06,260
This is the part where it
just fails colossally.

919
00:34:06,260 --> 00:34:08,940

920
00:34:08,940 --> 00:34:09,949
It's working, maybe.

921
00:34:09,949 --> 00:34:11,670
Maybe it's opening something.

922
00:34:11,670 --> 00:34:13,110
JAKE ARCHIBALD: Cameras
do have a habit of

923
00:34:13,110 --> 00:34:14,270
breaking any demos.

924
00:34:14,270 --> 00:34:16,070
ADDY OSMANI: They do.

925
00:34:16,070 --> 00:34:18,409
JAKE ARCHIBALD: But I find
this tool really useful.

926
00:34:18,409 --> 00:34:21,610
A couple weeks ago I was working
from home, because it

927
00:34:21,610 --> 00:34:22,380
had snowed.

928
00:34:22,380 --> 00:34:23,862
And if you can't work
from home when

929
00:34:23,862 --> 00:34:24,719
it's snowing outside--

930
00:34:24,719 --> 00:34:26,060
ADDY OSMANI: Snow is Jake's
general excuse for

931
00:34:26,060 --> 00:34:28,290
not being at work.

932
00:34:28,290 --> 00:34:29,850
JAKE ARCHIBALD: But I was
writing an article about

933
00:34:29,850 --> 00:34:30,610
script loading.

934
00:34:30,610 --> 00:34:34,060
Ad we had the suspicion that
maybe there was a time when

935
00:34:34,060 --> 00:34:34,960
one spec came in.

936
00:34:34,960 --> 00:34:36,179
One spec was changed.

937
00:34:36,179 --> 00:34:39,810
And we were worried that maybe
there was a crossover period

938
00:34:39,810 --> 00:34:41,469
that might be on some
Android devices.

939
00:34:41,469 --> 00:34:42,429
And I was at home.

940
00:34:42,429 --> 00:34:44,600
I only have one Android
device.

941
00:34:44,600 --> 00:34:45,350
Well, I've got two.

942
00:34:45,350 --> 00:34:47,989
But they're both running ICS.

943
00:34:47,989 --> 00:34:50,739
So just being able to spin this
up, and just be able to

944
00:34:50,739 --> 00:34:52,860
go through loads of devices,
loads of different Android

945
00:34:52,860 --> 00:34:55,280
versions, iOS versions
to see what was

946
00:34:55,280 --> 00:34:58,850
going on, it was great.

947
00:34:58,850 --> 00:35:00,545
You can't test performance
sensitive things.

948
00:35:00,545 --> 00:35:02,990
ADDY OSMANI: Performance is a
tricky thing, too, to test.

949
00:35:02,990 --> 00:35:04,920
And we've been speaking to
Browser Stack about this.

950
00:35:04,920 --> 00:35:07,650
And apparently one thing that's
on their radar is being

951
00:35:07,650 --> 00:35:11,030
able to remotely use your dev
tools to inspect pages.

952
00:35:11,030 --> 00:35:14,800
So I might be using my local
dev tools, call out to a

953
00:35:14,800 --> 00:35:17,630
Browser Stack instance, and
actually be able to see

954
00:35:17,630 --> 00:35:19,980
performance profiling, real
time, on an actual device.

955
00:35:19,980 --> 00:35:21,620
JAKE ARCHIBALD: So although you
wouldn't be able to see

956
00:35:21,620 --> 00:35:23,630
what was happening with the
performance, in terms of the

957
00:35:23,630 --> 00:35:26,245
phone updating, you would get
the accurate information from

958
00:35:26,245 --> 00:35:26,580
the Timeline.

959
00:35:26,580 --> 00:35:27,390
ADDY OSMANI: Exactly yeah.

960
00:35:27,390 --> 00:35:30,180
Actual data, which is actually
really, really fascinating.

961
00:35:30,180 --> 00:35:32,320
Browser Stack also have a ton
of developer tools that can

962
00:35:32,320 --> 00:35:34,320
you can use on many
of these devices.

963
00:35:34,320 --> 00:35:36,790
I'm not sure how well
those interact

964
00:35:36,790 --> 00:35:38,390
with some of the emulators.

965
00:35:38,390 --> 00:35:41,420
But they're constantly doing
a lot of work in the mobile

966
00:35:41,420 --> 00:35:44,390
space to try improving
testing in the cloud.

967
00:35:44,390 --> 00:35:47,210
And I think it's just, again
for those people that don't

968
00:35:47,210 --> 00:35:50,370
necessarily have a local device
lab, it's genuinely

969
00:35:50,370 --> 00:35:54,080
useful for your testing
workflow.

970
00:35:54,080 --> 00:35:55,680
JAKE ARCHIBALD: Thats
really neat.

971
00:35:55,680 --> 00:35:56,610
Excellent.

972
00:35:56,610 --> 00:36:00,290
Well, thank you for joining us
in this Mobile Web Thursday

973
00:36:00,290 --> 00:36:01,110
Extravaganza.

974
00:36:01,110 --> 00:36:03,270
Do you think we can call
it extravaganza?

975
00:36:03,270 --> 00:36:03,950
ADDY OSMANI: I think
this has been a

976
00:36:03,950 --> 00:36:05,780
colossal failure, if anything.

977
00:36:05,780 --> 00:36:07,030
We can call it--

978
00:36:07,030 --> 00:36:09,630

979
00:36:09,630 --> 00:36:10,550
JAKE ARCHIBALD: Let's
reach a compromise.

980
00:36:10,550 --> 00:36:12,440
And we'll call it a Colossal
Extravaganza.

981
00:36:12,440 --> 00:36:13,750
ADDY OSMANI: There we go.

982
00:36:13,750 --> 00:36:15,870
JAKE ARCHIBALD: And so next
Thursday there will be someone

983
00:36:15,870 --> 00:36:17,580
else sitting here, talking
about something else.

984
00:36:17,580 --> 00:36:18,820
I haven't actually
looked it up.

985
00:36:18,820 --> 00:36:19,720
But you should tune
in for that.

986
00:36:19,720 --> 00:36:22,320
Because I'm sure it will
be absolutely amazing.

987
00:36:22,320 --> 00:36:23,520
Thank you very much, guys.

988
00:36:23,520 --> 00:36:24,090
Bye bye.

989
00:36:24,090 --> 00:36:25,340
ADDY OSMANI: Bye.

990
00:36:25,340 --> 00:36:25,640

