1
00:00:00,000 --> 00:00:22,678
[MUSIC PLAYING]

2
00:00:22,678 --> 00:00:30,690

3
00:00:30,690 --> 00:00:31,400
PAUL KINLAN: Hi, everyone.

4
00:00:31,400 --> 00:00:35,940
Welcome to our second mobile
web, or Thursday mobile webs,

5
00:00:35,940 --> 00:00:38,510
web mobile Thursdays, I can
never quite remember the name.

6
00:00:38,510 --> 00:00:39,590
I'm Paul Kinlan.

7
00:00:39,590 --> 00:00:41,000
I'm a developer advocate
at Google.

8
00:00:41,000 --> 00:00:43,510
I'm working on Chrome and
Chrome for Android.

9
00:00:43,510 --> 00:00:45,490
And I'd like to introduce
Pete LePage, who is--

10
00:00:45,490 --> 00:00:48,490
are you in Mountain View or
in New York at the moment?

11
00:00:48,490 --> 00:00:51,070
PETE LEPAGE: I'm in Mountain
view this week, enjoying the

12
00:00:51,070 --> 00:00:54,860
nice weather and avoiding the
lovely snow that's going on.

13
00:00:54,860 --> 00:00:55,530
PAUL KINLAN: Oh, wow.

14
00:00:55,530 --> 00:00:55,780
Cool.

15
00:00:55,780 --> 00:00:56,640
Sweet.

16
00:00:56,640 --> 00:01:00,620
So we might as well
get into it.

17
00:01:00,620 --> 00:01:03,030
So this week's episode is about
what's new in the beta

18
00:01:03,030 --> 00:01:04,010
version of Chrome.

19
00:01:04,010 --> 00:01:06,770
Chrome is now on M26
and Android.

20
00:01:06,770 --> 00:01:09,040
Recently got updated, actually
twice this last week.

21
00:01:09,040 --> 00:01:11,520
We've had a small, mind bug fix
that's actually gone out.

22
00:01:11,520 --> 00:01:13,840
So if you're using the Chrome
beta channel at the moment,

23
00:01:13,840 --> 00:01:16,570
you should actually just be
seeing the new update.

24
00:01:16,570 --> 00:01:18,290
And I think it should
be available now on

25
00:01:18,290 --> 00:01:19,840
the Nexus 7 as well.

26
00:01:19,840 --> 00:01:24,310
We had an issue whereby we
hadn't actually set the camera

27
00:01:24,310 --> 00:01:25,380
permission up properly.

28
00:01:25,380 --> 00:01:27,750
We've re-rolled that out, so now
you've got access to that.

29
00:01:27,750 --> 00:01:29,490
And you'll be able to see that
in the book tracker as well.

30
00:01:29,490 --> 00:01:30,265
So it's all pretty cool.

31
00:01:30,265 --> 00:01:31,840
It's pretty open.

32
00:01:31,840 --> 00:01:33,620
But today we're going to talk
about a couple of really

33
00:01:33,620 --> 00:01:36,220
interesting topics, some of
the new features that are

34
00:01:36,220 --> 00:01:39,900
inside Chrome for Android,
the beta M26.

35
00:01:39,900 --> 00:01:41,910
The interesting thing about this
is what we're going to

36
00:01:41,910 --> 00:01:44,990
talk about today, it's not
really available to kind of

37
00:01:44,990 --> 00:01:46,470
normal users at the moment.

38
00:01:46,470 --> 00:01:49,220
But you guys who are watching
this today, you are the

39
00:01:49,220 --> 00:01:52,090
cutting edge users and the
developers on this platform.

40
00:01:52,090 --> 00:01:54,000
So we want to give you a little
bit of a preview into

41
00:01:54,000 --> 00:01:54,810
what's actually happened.

42
00:01:54,810 --> 00:01:56,510
And the two bits that we're
going to talk about is the

43
00:01:56,510 --> 00:01:59,430
data compression proxy,
which has just

44
00:01:59,430 --> 00:02:01,040
been basically announced.

45
00:02:01,040 --> 00:02:03,060
It's all kind of
in Chrome flux.

46
00:02:03,060 --> 00:02:05,310
It's not kind of public
at the moment.

47
00:02:05,310 --> 00:02:10,400
And the second is getUserMedia
and WebRTC.

48
00:02:10,400 --> 00:02:12,210
I can't actually show you
WebRTC at the moment.

49
00:02:12,210 --> 00:02:12,980
I couldn't get it working.

50
00:02:12,980 --> 00:02:15,370
But we've got some nice
little things to

51
00:02:15,370 --> 00:02:18,080
show off like in between.

52
00:02:18,080 --> 00:02:20,170
Like getUserMedia is one of the
best ones at the moment.

53
00:02:20,170 --> 00:02:22,990
You've finally got access to the
camera inside JavaScript

54
00:02:22,990 --> 00:02:24,660
inside your phone.

55
00:02:24,660 --> 00:02:25,540
So that's pretty cool.

56
00:02:25,540 --> 00:02:27,500
And we're going to kind of
show them off today.

57
00:02:27,500 --> 00:02:30,710
So without much further ado, I'm
going to hand you across

58
00:02:30,710 --> 00:02:32,440
to Pete, and Pete's tell
you a bit about the

59
00:02:32,440 --> 00:02:34,470
data compression proxy.

60
00:02:34,470 --> 00:02:35,060
PETE LEPAGE: Cool.

61
00:02:35,060 --> 00:02:36,430
Awesome, thanks.

62
00:02:36,430 --> 00:02:39,910
So the data compression proxy is
something that's brand new

63
00:02:39,910 --> 00:02:41,680
to Chrome, and it's
something I think

64
00:02:41,680 --> 00:02:43,650
that is pretty exciting.

65
00:02:43,650 --> 00:02:46,870
Basically, the data compression
proxy reduces the

66
00:02:46,870 --> 00:02:52,430
amount of network data that's
sent between your device and

67
00:02:52,430 --> 00:02:55,040
the remote website that
you're asking for.

68
00:02:55,040 --> 00:02:58,380
Now, just one thing to call out
really fast, right off the

69
00:02:58,380 --> 00:03:03,840
bat, is that it only does
this for HTTP sites.

70
00:03:03,840 --> 00:03:06,410
If it's a secure connection,
we're not going to do

71
00:03:06,410 --> 00:03:07,280
anything with it.

72
00:03:07,280 --> 00:03:10,830
We're going to let you go
directly to the server.

73
00:03:10,830 --> 00:03:12,780
We're not going to get in
the middle of that.

74
00:03:12,780 --> 00:03:17,720
But for nonsecure connections,
basically what happens is that

75
00:03:17,720 --> 00:03:22,460
Chrome opens a speedy connection
between you and one

76
00:03:22,460 --> 00:03:23,940
of the Google data centers.

77
00:03:23,940 --> 00:03:26,980
And from there it starts going
out and making the

78
00:03:26,980 --> 00:03:28,950
requests for sites.

79
00:03:28,950 --> 00:03:32,800
So there's a couple of things
that are happening once you've

80
00:03:32,800 --> 00:03:36,720
connected to the Google
services.

81
00:03:36,720 --> 00:03:40,870
As you start going out and
making those connections,

82
00:03:40,870 --> 00:03:42,990
we're using the new--

83
00:03:42,990 --> 00:03:45,840
well, I guess it's not the
new, but the speedy

84
00:03:45,840 --> 00:03:49,660
connections, as well as the--

85
00:03:49,660 --> 00:03:52,210
I'm completely blanking on the
name for it right now.

86
00:03:52,210 --> 00:03:55,570

87
00:03:55,570 --> 00:03:56,820
Paul, do you remember?

88
00:03:56,820 --> 00:04:00,530

89
00:04:00,530 --> 00:04:01,690
That's what it is--

90
00:04:01,690 --> 00:04:03,170
page speed libraries.

91
00:04:03,170 --> 00:04:05,680
Every once in a while-- so I'm
here in Mountain View.

92
00:04:05,680 --> 00:04:08,680
It's 8 o'clock, and I was--

93
00:04:08,680 --> 00:04:09,890
yeah, it's a little early.

94
00:04:09,890 --> 00:04:11,060
I apologize.

95
00:04:11,060 --> 00:04:14,610
Anyway, it's the open source
page speed libraries.

96
00:04:14,610 --> 00:04:17,610
So by using these page speed
libraries, there's a couple of

97
00:04:17,610 --> 00:04:19,480
things that are going on.

98
00:04:19,480 --> 00:04:21,690
Images get optimized
automatically.

99
00:04:21,690 --> 00:04:24,680
So most images, when developers
push them up, they

100
00:04:24,680 --> 00:04:26,220
optimize them a little bit.

101
00:04:26,220 --> 00:04:28,950
But they don't always remember
to optimize them.

102
00:04:28,950 --> 00:04:30,470
Sometimes they completely
forget.

103
00:04:30,470 --> 00:04:32,910
Sometimes they just
do a little bit.

104
00:04:32,910 --> 00:04:36,430
Well, what the image
optimization does is it uses

105
00:04:36,430 --> 00:04:41,940
WebP to transcode the images,
which uses less bandwidth and

106
00:04:41,940 --> 00:04:44,930
shrinks them down while
maintaining

107
00:04:44,930 --> 00:04:46,240
the same image quality.

108
00:04:46,240 --> 00:04:51,860
So your images just get much
smaller than what they were

109
00:04:51,860 --> 00:04:54,280
before, and they're
always optimized.

110
00:04:54,280 --> 00:04:57,180
The second thing that happens
is there is a set of what we

111
00:04:57,180 --> 00:05:00,470
call content aware
compression.

112
00:05:00,470 --> 00:05:03,420
So that's things like
minification, white space

113
00:05:03,420 --> 00:05:05,190
removal, all of that
kind of stuff.

114
00:05:05,190 --> 00:05:07,310
So taking all of the
stuff that--

115
00:05:07,310 --> 00:05:10,270
normally, you might have a
JavaScript file that's this

116
00:05:10,270 --> 00:05:13,780
big, and it's now all of a
sudden going to be this big.

117
00:05:13,780 --> 00:05:17,850
Again, not every developer
remembers to minify things, so

118
00:05:17,850 --> 00:05:22,510
this makes a pretty big deal.

119
00:05:22,510 --> 00:05:24,750
And then the third big advantage
that you get out of

120
00:05:24,750 --> 00:05:29,240
using this is that you get
access automatically to all of

121
00:05:29,240 --> 00:05:31,410
Google's safe browsing
technology.

122
00:05:31,410 --> 00:05:34,470
So we're making sure that the
sites people are going to

123
00:05:34,470 --> 00:05:37,720
aren't sites that are spreading
malware, or phishing

124
00:05:37,720 --> 00:05:39,570
sites, and all that
kind of stuff.

125
00:05:39,570 --> 00:05:43,110
So there's really sort of three
main advantages, both to

126
00:05:43,110 --> 00:05:45,170
consumers and to users.

127
00:05:45,170 --> 00:05:48,390
Now, I was playing with this a
little bit earlier today on a

128
00:05:48,390 --> 00:05:50,960
couple of websites, and you
could pull this up.

129
00:05:50,960 --> 00:05:53,710
And I know Paul's going to
show a demo of this in a

130
00:05:53,710 --> 00:05:56,050
minute or two.

131
00:05:56,050 --> 00:05:59,160
You can see how much your
compression is turned on.

132
00:05:59,160 --> 00:06:00,470
So to turn it on--

133
00:06:00,470 --> 00:06:02,450
I guess we should start
with that first--

134
00:06:02,450 --> 00:06:04,330
you need to go into
Chrome Flag.

135
00:06:04,330 --> 00:06:08,600
So if you go into Chrome colon
whack whack flags, one of the

136
00:06:08,600 --> 00:06:12,750
first items that you'll see
there is Enable Data

137
00:06:12,750 --> 00:06:15,420
Compression, or Experimental
Data Compression.

138
00:06:15,420 --> 00:06:18,190
So you enable that,
restarts Chrome.

139
00:06:18,190 --> 00:06:22,000
And then from there, you can
start loading pages.

140
00:06:22,000 --> 00:06:26,610
Now, to see how much stuff
changes, open up a new tap and

141
00:06:26,610 --> 00:06:30,080
go to Chrome colon forward slash
forward slash, or whack

142
00:06:30,080 --> 00:06:34,430
whack, net dash internals.

143
00:06:34,430 --> 00:06:37,500
So when you go to the
net-internals, from there

144
00:06:37,500 --> 00:06:41,240
you'll see a link where you
can click on Bandwidth.

145
00:06:41,240 --> 00:06:43,670
And you click on that bandwidth,
and it shows you

146
00:06:43,670 --> 00:06:50,115
how much data has been saved
by using the speedy proxy.

147
00:06:50,115 --> 00:06:52,536
PAUL KINLAN: Shall I get that up
now on one of our screens?

148
00:06:52,536 --> 00:06:52,942
PETE LEPAGE: Yeah.

149
00:06:52,942 --> 00:06:54,970
If you can pull that up, that
would be really cool.

150
00:06:54,970 --> 00:06:57,950
So it's a really cool way to
be able to see what's going

151
00:06:57,950 --> 00:06:59,850
on, to see what's happening.

152
00:06:59,850 --> 00:07:02,460

153
00:07:02,460 --> 00:07:04,260
It's really fascinating
to see.

154
00:07:04,260 --> 00:07:07,440
So we were looking at the
Verge earlier today.

155
00:07:07,440 --> 00:07:10,300
And the Verge had about
a 35% or 40%.

156
00:07:10,300 --> 00:07:11,350
Paul, do you remember
off hand, was it--

157
00:07:11,350 --> 00:07:13,520
PAUL KINLAN: Yeah, it's actually
45%, because I turned

158
00:07:13,520 --> 00:07:15,710
it on just before this talk.

159
00:07:15,710 --> 00:07:18,390
And it's the only request
I made, so 45%

160
00:07:18,390 --> 00:07:19,770
saving for this session.

161
00:07:19,770 --> 00:07:20,220
PETE LEPAGE: Yeah.

162
00:07:20,220 --> 00:07:24,940
So like 45% of the bandwidth,
right, is down.

163
00:07:24,940 --> 00:07:28,770
So what was the total kilobyte
size on that page before?

164
00:07:28,770 --> 00:07:31,400
It should say up in that box.

165
00:07:31,400 --> 00:07:37,540
PAUL KINLAN: I think
1,900 kilobytes.

166
00:07:37,540 --> 00:07:40,040
PETE LEPAGE: Yeah,
so that's what?

167
00:07:40,040 --> 00:07:41,280
1.9 meg.

168
00:07:41,280 --> 00:07:42,730
PAUL KINLAN: Maybe 2 meg.

169
00:07:42,730 --> 00:07:47,290
PETE LEPAGE: So nearly 2 megs
has been dropped to what?

170
00:07:47,290 --> 00:07:50,610
PAUL KINLAN: So it says saving
6 watts, it's saved 663

171
00:07:50,610 --> 00:07:52,500
kilowatts of that--

172
00:07:52,500 --> 00:07:56,620
PETE LEPAGE: So like
1.2 megs or so.

173
00:07:56,620 --> 00:07:58,300
It's gone down.

174
00:07:58,300 --> 00:08:00,480
It's down to 1.2 megabytes.

175
00:08:00,480 --> 00:08:03,910
Now, when you're on a nice
Wi-Fi or on a 4G

176
00:08:03,910 --> 00:08:05,350
connection, eh, OK.

177
00:08:05,350 --> 00:08:06,430
2 megs, not a big deal.

178
00:08:06,430 --> 00:08:09,360
But when you're on an Edge
connection, or when you're on

179
00:08:09,360 --> 00:08:12,190
anything else, that's
pretty significant.

180
00:08:12,190 --> 00:08:17,640
This morning I was playing
with In Focus from "The

181
00:08:17,640 --> 00:08:19,100
Atlantic" News.

182
00:08:19,100 --> 00:08:24,870
And "In Focus" is one of my
favorite pages to read, or I

183
00:08:24,870 --> 00:08:26,600
guess I kind of call
it a blog.

184
00:08:26,600 --> 00:08:31,880
It's a collection of photos
that are recent events,

185
00:08:31,880 --> 00:08:34,730
photographs from those
particular recent events.

186
00:08:34,730 --> 00:08:36,419
And this morning when
I was looking at

187
00:08:36,419 --> 00:08:40,260
it I got a 65% savings.

188
00:08:40,260 --> 00:08:45,110
So I went from almost a 4 meg
page download to less than 2

189
00:08:45,110 --> 00:08:45,960
megs

190
00:08:45,960 --> 00:08:50,450
So you can see how much savings
you're getting because

191
00:08:50,450 --> 00:08:53,320
you're taking all of that data
and making it smaller.

192
00:08:53,320 --> 00:08:58,430
So not only are you getting
advantages in terms of speed

193
00:08:58,430 --> 00:09:00,350
increases because you're sending
less data over the

194
00:09:00,350 --> 00:09:05,110
wire, you're also potentially
reducing your mobile bill.

195
00:09:05,110 --> 00:09:09,550
Because all of a sudden you're
not costing 4 megs.

196
00:09:09,550 --> 00:09:12,560
And if you're not on an
unlimited plan, all a sudden

197
00:09:12,560 --> 00:09:15,310
that's a pretty significant
thing.

198
00:09:15,310 --> 00:09:19,000
There's a really great
document on this.

199
00:09:19,000 --> 00:09:22,360
If you just go up and do
a quick search for--

200
00:09:22,360 --> 00:09:25,220
PAUL KINLAN: We've
got the link--

201
00:09:25,220 --> 00:09:25,590
PETE LEPAGE: Oh.

202
00:09:25,590 --> 00:09:27,520
If we've got the link,
we can put that up.

203
00:09:27,520 --> 00:09:34,640
But Ilya, who's going to be
doing a much deeper Hangout on

204
00:09:34,640 --> 00:09:36,810
this in the next week
so, I believe--

205
00:09:36,810 --> 00:09:39,620
just check
developers.google.com/live and

206
00:09:39,620 --> 00:09:44,370
look for "make the web fast."
There's a great article, Data

207
00:09:44,370 --> 00:09:45,620
Compression Proxy.

208
00:09:45,620 --> 00:09:48,180
It goes into all the nitty
gritty details, and worth

209
00:09:48,180 --> 00:09:49,586
checking out.

210
00:09:49,586 --> 00:09:50,880
PAUL KINLAN: Yeah, definitely.

211
00:09:50,880 --> 00:09:52,810
So yeah, it's on the screen
at the moment.

212
00:09:52,810 --> 00:09:55,382
I suppose, can we just switch
across to my screen?

213
00:09:55,382 --> 00:09:57,620
And I want to show you some of
the stuff just so you can

214
00:09:57,620 --> 00:09:59,490
actually see it working
in action.

215
00:09:59,490 --> 00:10:03,480
So this screen at the moment
is my dev tools, which is

216
00:10:03,480 --> 00:10:05,550
actually connected to my device
which we saw on the

217
00:10:05,550 --> 00:10:06,710
camera before.

218
00:10:06,710 --> 00:10:09,080
And before we came on air, we
actually connect the Verge

219
00:10:09,080 --> 00:10:10,580
just see what it looks like.

220
00:10:10,580 --> 00:10:13,140
And the great thing about the
actual site itself is it looks

221
00:10:13,140 --> 00:10:13,715
exactly the same.

222
00:10:13,715 --> 00:10:16,450
It doesn't look any
different at all.

223
00:10:16,450 --> 00:10:18,020
But this is how you can actually
tell whether you're

224
00:10:18,020 --> 00:10:20,300
actually in the data compression
mode at the time,

225
00:10:20,300 --> 00:10:22,350
is that it's gone into
speedy mode.

226
00:10:22,350 --> 00:10:25,640
And there's the host, method,
and path in the call on scheme

227
00:10:25,640 --> 00:10:28,070
as the request header, which is
different the normal HTTP

228
00:10:28,070 --> 00:10:28,920
request header.

229
00:10:28,920 --> 00:10:32,090
That's kind of the primary
indicator to the actual fact

230
00:10:32,090 --> 00:10:33,980
that you are running
in this data

231
00:10:33,980 --> 00:10:36,380
compression mode at least.

232
00:10:36,380 --> 00:10:37,160
And that's pretty much
here, right?

233
00:10:37,160 --> 00:10:38,870
You don't really notice anything
else, other than the

234
00:10:38,870 --> 00:10:42,340
fact that it's a cache
and proxy in between.

235
00:10:42,340 --> 00:10:44,010
So the really cool thing as well
is if you go back to the

236
00:10:44,010 --> 00:10:47,360
site, the data is potentially
cached at the Google side of

237
00:10:47,360 --> 00:10:48,270
things as well.

238
00:10:48,270 --> 00:10:51,970
So the actual refresh itself
should be a lot quicker.

239
00:10:51,970 --> 00:10:54,210
I just want to show you some of
the images, because this is

240
00:10:54,210 --> 00:10:56,210
kind of the interesting thing.

241
00:10:56,210 --> 00:10:57,690
PETE LEPAGE: While you look
for those images, Paul,

242
00:10:57,690 --> 00:10:59,330
there's one thing I also
wanted to mention for

243
00:10:59,330 --> 00:11:01,770
developers.

244
00:11:01,770 --> 00:11:04,980
One of the things that I know a
number of developers want to

245
00:11:04,980 --> 00:11:09,790
know is hey, is somebody making
a request, and is it

246
00:11:09,790 --> 00:11:11,040
coming through this proxy?

247
00:11:11,040 --> 00:11:14,800
So as a developer, is that
request coming through?

248
00:11:14,800 --> 00:11:17,620
And there's one easy way that
you can tell, and that's to

249
00:11:17,620 --> 00:11:25,780
look for the X-Forwarded-For
HTTP header in your request.

250
00:11:25,780 --> 00:11:29,560
So if you see the
X-Forwarded-For, and that's

251
00:11:29,560 --> 00:11:33,580
going to have an IP address of
the original user who made the

252
00:11:33,580 --> 00:11:36,530
request, or the original users
who made the request.

253
00:11:36,530 --> 00:11:39,210
So you can check to see if
that's coming in so that you

254
00:11:39,210 --> 00:11:42,370
can find out hey, who was it
who was looking for this

255
00:11:42,370 --> 00:11:44,106
particular bit?

256
00:11:44,106 --> 00:11:45,560
PAUL KINLAN: The other thing I
was going to say, actually as

257
00:11:45,560 --> 00:11:47,490
well, is we've got a
moderator as well.

258
00:11:47,490 --> 00:11:49,523
So if you want to ask questions,
we'll pop--

259
00:11:49,523 --> 00:11:50,158
PETE LEPAGE: Oh, right.

260
00:11:50,158 --> 00:11:50,370
Yeah.

261
00:11:50,370 --> 00:11:51,890
PAUL KINLAN: We'll pop the link
up in a second, and you

262
00:11:51,890 --> 00:11:54,200
can ask questions on anything
we talked about today.

263
00:11:54,200 --> 00:11:57,930
I would say a lot of the data
compression proxy, Ilya will

264
00:11:57,930 --> 00:11:59,410
be the best person to definitely
answer a lot of

265
00:11:59,410 --> 00:12:01,270
these, if it's very technical
and detailed questions.

266
00:12:01,270 --> 00:12:02,480
We're just kind of giving
you a little

267
00:12:02,480 --> 00:12:04,110
preview at the moment.

268
00:12:04,110 --> 00:12:05,970
But whilst we're in this mode
of giving you previews at

269
00:12:05,970 --> 00:12:09,430
least, this here, this is the
first PNG that we found, the

270
00:12:09,430 --> 00:12:11,800
Verge Android logo.

271
00:12:11,800 --> 00:12:14,240
It's a PNG file, but as you can
see, the actual request

272
00:12:14,240 --> 00:12:16,390
type, image4/webp.

273
00:12:16,390 --> 00:12:18,570
And that's because the page
compression service

274
00:12:18,570 --> 00:12:20,240
essentially has actually
gone off and done that

275
00:12:20,240 --> 00:12:21,600
conversion for you.

276
00:12:21,600 --> 00:12:23,760
So it's actually very nice.

277
00:12:23,760 --> 00:12:24,610
It's pretty cool.

278
00:12:24,610 --> 00:12:26,930
I noticed on my own blog--

279
00:12:26,930 --> 00:12:28,670
and I wasn't actually quite
sure exactly what was

280
00:12:28,670 --> 00:12:32,040
happening at the time, but
I noticed that the actual

281
00:12:32,040 --> 00:12:37,590
content ready event fired half
a second earlier when I used

282
00:12:37,590 --> 00:12:39,800
the actual compression proxy
than it did when I

283
00:12:39,800 --> 00:12:40,490
wasn't using it.

284
00:12:40,490 --> 00:12:42,990
So even on Wi-Fi, it seems to be
doing a pretty good thing.

285
00:12:42,990 --> 00:12:45,490
But like Pete was saying before
in mobile, this is the

286
00:12:45,490 --> 00:12:46,930
potential to actually
improve the mobile

287
00:12:46,930 --> 00:12:49,030
experience quite a lot.

288
00:12:49,030 --> 00:12:53,490
So with that, shall we jump
onto the getUserMedia?

289
00:12:53,490 --> 00:12:54,410
And WebRTC?

290
00:12:54,410 --> 00:12:54,750
OK.

291
00:12:54,750 --> 00:12:57,040
So let's see if this works.

292
00:12:57,040 --> 00:13:00,430

293
00:13:00,430 --> 00:13:02,340
I have a file somewhere.

294
00:13:02,340 --> 00:13:04,270
Hey, there we are.

295
00:13:04,270 --> 00:13:05,940
So this is the shiny demo.

296
00:13:05,940 --> 00:13:08,650
I think it's all done, if
you can see my desktop.

297
00:13:08,650 --> 00:13:10,540
I'm going to put my hand
across it a little bit.

298
00:13:10,540 --> 00:13:11,680
You can see it.

299
00:13:11,680 --> 00:13:13,900
This is actually on an old
Galaxy Nexus at the moment, so

300
00:13:13,900 --> 00:13:15,660
it's running a little
bit slow.

301
00:13:15,660 --> 00:13:18,990
Hello, here we are.

302
00:13:18,990 --> 00:13:20,030
There's our producer there.

303
00:13:20,030 --> 00:13:22,220
Say hello.

304
00:13:22,220 --> 00:13:23,600
That's Ian.

305
00:13:23,600 --> 00:13:25,600
So the really great thing about
this actually is that

306
00:13:25,600 --> 00:13:29,620
this is basically just the
normal getUserMedia API.

307
00:13:29,620 --> 00:13:32,110
It doesn't require
anything special.

308
00:13:32,110 --> 00:13:34,000
Other than the fact it's
actually behind a flag and

309
00:13:34,000 --> 00:13:36,140
it's enabled via the WebRTC.

310
00:13:36,140 --> 00:13:39,770
So you go to about flags.

311
00:13:39,770 --> 00:13:43,380
If we show if off correctly,
up around this.

312
00:13:43,380 --> 00:13:44,630
Chrome--

313
00:13:44,630 --> 00:13:46,340

314
00:13:46,340 --> 00:13:47,460
sorry about this.

315
00:13:47,460 --> 00:13:48,710
I've got fat thumbs.

316
00:13:48,710 --> 00:13:55,440

317
00:13:55,440 --> 00:13:56,970
While it loads, this
is really cool.

318
00:13:56,970 --> 00:14:00,200

319
00:14:00,200 --> 00:14:01,520
And has it just gone white?

320
00:14:01,520 --> 00:14:02,630
It's a white screen, isn't it?

321
00:14:02,630 --> 00:14:05,750
There we are.

322
00:14:05,750 --> 00:14:07,780
So it's certainly not optimized
just yet, and this

323
00:14:07,780 --> 00:14:09,710
is why it's in a flag
at the moment.

324
00:14:09,710 --> 00:14:13,290
But if you search for WebRTC--

325
00:14:13,290 --> 00:14:17,030
there we are-- you can enable
WebRTC in the Chrome flags,

326
00:14:17,030 --> 00:14:18,170
and then you can get
access to it.

327
00:14:18,170 --> 00:14:21,210
So in this case here, this is
our just normal Galaxy Nexus.

328
00:14:21,210 --> 00:14:22,610
It's going to reload.

329
00:14:22,610 --> 00:14:25,670
As you can see, it actually says
Allow, props up, doesn't

330
00:14:25,670 --> 00:14:28,260
take access to the camera
straight away.

331
00:14:28,260 --> 00:14:30,750
And if we scroll down, it's
going to take a little while

332
00:14:30,750 --> 00:14:33,980
on this screen at least, anyway,
because it's not the

333
00:14:33,980 --> 00:14:36,680
greatest demo on this machine.

334
00:14:36,680 --> 00:14:37,970
Actually, it's a really good
demo, just on this machine

335
00:14:37,970 --> 00:14:39,180
it's a little bit slow.

336
00:14:39,180 --> 00:14:41,250
And if I leave for a couple
of seconds it'll be fine.

337
00:14:41,250 --> 00:14:46,400
But if I switch across to our
other demo app, I've actually

338
00:14:46,400 --> 00:14:46,986
got it working here.

339
00:14:46,986 --> 00:14:48,500
You should say Allow.

340
00:14:48,500 --> 00:14:48,830
Oh, there we are.

341
00:14:48,830 --> 00:14:49,810
It's actually come back.

342
00:14:49,810 --> 00:14:50,600
We're fine.

343
00:14:50,600 --> 00:14:51,790
It'll take a little while
to get used to it, but

344
00:14:51,790 --> 00:14:52,630
yeah, we have it.

345
00:14:52,630 --> 00:14:54,430
So it's pretty cool.

346
00:14:54,430 --> 00:14:57,210
We can do a special Hangout
another time on pure

347
00:14:57,210 --> 00:14:58,290
[INAUDIBLE] features.

348
00:14:58,290 --> 00:15:02,280
We just wanted to let you know
that this feature exists.

349
00:15:02,280 --> 00:15:03,780
Yeah, I think that's about it.

350
00:15:03,780 --> 00:15:04,990
Pete, do you have anything
else to say about

351
00:15:04,990 --> 00:15:07,480
getUserMedia?

352
00:15:07,480 --> 00:15:08,580
PETE LEPAGE: No.

353
00:15:08,580 --> 00:15:10,020
This is one of these
things that I

354
00:15:10,020 --> 00:15:12,231
think is really exciting.

355
00:15:12,231 --> 00:15:14,530
It's really going to
allow us to do, as

356
00:15:14,530 --> 00:15:16,210
developers, a lot more.

357
00:15:16,210 --> 00:15:18,710
We've been able to play with it
on desktop, and we've seen

358
00:15:18,710 --> 00:15:20,900
some interesting uses
on desktop.

359
00:15:20,900 --> 00:15:24,680
Now to actually put it on mobile
devices means all of a

360
00:15:24,680 --> 00:15:29,340
sudden we can now start doing
things like, oh, I don't know,

361
00:15:29,340 --> 00:15:33,010
make video and voice calls
without needing any kind of

362
00:15:33,010 --> 00:15:35,060
crazy plug-in.

363
00:15:35,060 --> 00:15:37,500
So there's a lot of stuff, and
it'll be neat to see what

364
00:15:37,500 --> 00:15:39,790
folks do with it.

365
00:15:39,790 --> 00:15:42,760
PAUL KINLAN: Sorry, I'm just
taking pictures of myself.

366
00:15:42,760 --> 00:15:43,740
I should have had
a shave, is all.

367
00:15:43,740 --> 00:15:45,300
PETE LEPAGE: Nobody says
you weren't humble, so

368
00:15:45,300 --> 00:15:46,880
[INAUDIBLE].

369
00:15:46,880 --> 00:15:48,240
PAUL KINLAN: Yeah,
I kind like this.

370
00:15:48,240 --> 00:15:50,600
I mean, we've been asking for
this for a long, long time.

371
00:15:50,600 --> 00:15:53,065
And we've had some basic
access by the camera.

372
00:15:53,065 --> 00:15:56,420
So if you have input type equals
file, accept image

373
00:15:56,420 --> 00:16:01,560
4-star, content, I think,
camcorder, it kind of works.

374
00:16:01,560 --> 00:16:03,080
But it's not an integrated
experience.

375
00:16:03,080 --> 00:16:05,860
And I think if we've learned
anything from the likes of

376
00:16:05,860 --> 00:16:08,760
Instagram, for instance, this
built in kind of integrated

377
00:16:08,760 --> 00:16:11,780
experience is what people want
from their web apps and sites.

378
00:16:11,780 --> 00:16:13,625
And this is one of those things,
even at a basic level

379
00:16:13,625 --> 00:16:15,330
for getUserMedia, it's one of
those things that's going to

380
00:16:15,330 --> 00:16:17,080
be really exciting.

381
00:16:17,080 --> 00:16:18,070
PETE LEPAGE: Yeah.

382
00:16:18,070 --> 00:16:18,580
PAUL KINLAN: Yeah.

383
00:16:18,580 --> 00:16:21,290
So I don't know whether
it does audio.

384
00:16:21,290 --> 00:16:24,290
That's the big question
at the moment.

385
00:16:24,290 --> 00:16:24,450
I

386
00:16:24,450 --> 00:16:26,005
PETE LEPAGE: I think it does.

387
00:16:26,005 --> 00:16:28,370
PAUL KINLAN: It will do audio
with WebRTC, right?

388
00:16:28,370 --> 00:16:28,650
PETE LEPAGE: Yeah.

389
00:16:28,650 --> 00:16:29,670
PAUL KINLAN: But there's
no audio API.

390
00:16:29,670 --> 00:16:31,550
PETE LEPAGE: But I wouldn't be
surprised if you can't push

391
00:16:31,550 --> 00:16:35,200
that through the Web
Audio API yet.

392
00:16:35,200 --> 00:16:35,960
PAUL KINLAN: Yeah.

393
00:16:35,960 --> 00:16:38,660
Well, we haven't got
it, have we?

394
00:16:38,660 --> 00:16:40,735
PETE LEPAGE: Touche.

395
00:16:40,735 --> 00:16:42,050
PAUL KINLAN: I think that's one
of the things that's like

396
00:16:42,050 --> 00:16:44,550
a little bit unfortunate
to some extent, but

397
00:16:44,550 --> 00:16:45,170
it's kind of cool.

398
00:16:45,170 --> 00:16:46,190
There's going to be a lot
of things that come

399
00:16:46,190 --> 00:16:47,400
off the back of this.

400
00:16:47,400 --> 00:16:49,650
And there's the rest
of our studio.

401
00:16:49,650 --> 00:16:51,840
The studio looks cool when we
dress it up, but when you look

402
00:16:51,840 --> 00:16:55,120
at the ceiling it's
pretty crazy.

403
00:16:55,120 --> 00:16:56,280
So yeah, that was it, really.

404
00:16:56,280 --> 00:16:58,610
I mean, there's not a
huge amount of extra

405
00:16:58,610 --> 00:17:01,230
features in M26 beta.

406
00:17:01,230 --> 00:17:05,170
It's more about improving the
performance again, bringing

407
00:17:05,170 --> 00:17:07,030
the platform more
up to parity.

408
00:17:07,030 --> 00:17:09,780
And we're starting to do that
with these two new APIs.

409
00:17:09,780 --> 00:17:10,190
PETE LEPAGE: Absolutely.

410
00:17:10,190 --> 00:17:13,420
And it's also really about
trying to get us on to a

411
00:17:13,420 --> 00:17:15,280
similar ship schedule.

412
00:17:15,280 --> 00:17:17,530
Because eventually we want to
be on the same schedule so

413
00:17:17,530 --> 00:17:21,090
that like, hey, Chrome
gets updated--

414
00:17:21,090 --> 00:17:23,569
Chrome gets updated
across the board.

415
00:17:23,569 --> 00:17:24,821
PAUL KINLAN: Yeah.

416
00:17:24,821 --> 00:17:27,510
So should we jump to
the moderator?

417
00:17:27,510 --> 00:17:28,310
I don't know whether
we'll have any

418
00:17:28,310 --> 00:17:29,480
questions or not, but--

419
00:17:29,480 --> 00:17:29,940
PETE LEPAGE: Sure.

420
00:17:29,940 --> 00:17:32,100
Actually, I think there's
one question in there.

421
00:17:32,100 --> 00:17:32,300
PAUL KINLAN: Oh, cool.

422
00:17:32,300 --> 00:17:34,350
Have you got it up or--

423
00:17:34,350 --> 00:17:35,880
PETE LEPAGE: Yeah, I do.

424
00:17:35,880 --> 00:17:42,160
So the question is from
Bill in Mississauga.

425
00:17:42,160 --> 00:17:46,106
And he wants to know if WebGL
is still behind a flag.

426
00:17:46,106 --> 00:17:46,980
PAUL KINLAN: Yeah.

427
00:17:46,980 --> 00:17:47,870
I think that's the
biggest thing.

428
00:17:47,870 --> 00:17:49,270
So basically this
is the thing.

429
00:17:49,270 --> 00:17:51,840
I know the team are really,
really keen at the moment to

430
00:17:51,840 --> 00:17:55,170
get a lot of feedback around
WebGL, WebRTC, if you're going

431
00:17:55,170 --> 00:17:55,640
to play with it.

432
00:17:55,640 --> 00:17:57,510
We're not trying to push
it that much at all.

433
00:17:57,510 --> 00:18:00,420
It's very experimental
at the moment.

434
00:18:00,420 --> 00:18:01,910
getUserMedia the same.

435
00:18:01,910 --> 00:18:03,470
And the data compression
proxy as well.

436
00:18:03,470 --> 00:18:04,870
So all three are super
experimental.

437
00:18:04,870 --> 00:18:08,070
We just though we'd give a
little preview right now.

438
00:18:08,070 --> 00:18:09,660
Because we want your
feedback, right?

439
00:18:09,660 --> 00:18:10,650
We're not going to
push it out.

440
00:18:10,650 --> 00:18:11,810
We're not going to tell
you to use it.

441
00:18:11,810 --> 00:18:13,930
Like, hey, this is going to be
enabled just yet, and all this

442
00:18:13,930 --> 00:18:14,430
type of stuff.

443
00:18:14,430 --> 00:18:15,630
We don't want you
guys to do that.

444
00:18:15,630 --> 00:18:18,580
But we want you to test and
give us a lot of feedback.

445
00:18:18,580 --> 00:18:20,050
And that goes for WebGL.

446
00:18:20,050 --> 00:18:22,590
I don't think we have a time
scale for when WebGL's going

447
00:18:22,590 --> 00:18:23,705
to be available.

448
00:18:23,705 --> 00:18:26,500
And I think a lot of this hinges
on the fact that we

449
00:18:26,500 --> 00:18:27,985
want a lot of feedback, right?

450
00:18:27,985 --> 00:18:29,520
PETE LEPAGE: Yeah.

451
00:18:29,520 --> 00:18:31,650
PAUL KINLAN: Do we know how this
performs across all the

452
00:18:31,650 --> 00:18:34,350
Nexus range or all the
Android range?

453
00:18:34,350 --> 00:18:37,440
I don't know whether we do, and
we need your experiences

454
00:18:37,440 --> 00:18:40,470
to basically test
it on mobile.

455
00:18:40,470 --> 00:18:41,490
Because this is like the--

456
00:18:41,490 --> 00:18:45,170
I think Firefox has had
it, basically mobile

457
00:18:45,170 --> 00:18:47,650
on WebGL and mobile.

458
00:18:47,650 --> 00:18:49,540
But the performance
characteristics are completely

459
00:18:49,540 --> 00:18:51,750
different, so the applications
that you design are not going

460
00:18:51,750 --> 00:18:54,080
to work exactly the
same on desktop.

461
00:18:54,080 --> 00:18:55,130
And we can't cater for it.

462
00:18:55,130 --> 00:18:57,220
But we want you to go and test,
and that's why it's in

463
00:18:57,220 --> 00:18:58,750
the flag, and that's why you
can go out and test it.

464
00:18:58,750 --> 00:19:02,810
And I think the same applies
for CSS filters and some of

465
00:19:02,810 --> 00:19:04,540
the hardware acceleration
as well.

466
00:19:04,540 --> 00:19:08,070
So I kind of always think
anything that's in flux is

467
00:19:08,070 --> 00:19:10,220
fair game to go and test
and file books and

468
00:19:10,220 --> 00:19:11,225
raise issues on.

469
00:19:11,225 --> 00:19:12,850
PETE LEPAGE: Yeah, I
agree with that.

470
00:19:12,850 --> 00:19:15,690
PAUL KINLAN: [INAUDIBLE]
book.com, select Android OS,

471
00:19:15,690 --> 00:19:17,990
you raise it, put a link in.

472
00:19:17,990 --> 00:19:19,780
Either copy me in,
PaulKinlan@google, or

473
00:19:19,780 --> 00:19:23,430
PaulKinlan@chromium.org, and
we'll get it triaged and we'll

474
00:19:23,430 --> 00:19:26,120
get it through for the right
people to go and test it.

475
00:19:26,120 --> 00:19:28,630
Because ultimately, we want
these features out.

476
00:19:28,630 --> 00:19:29,710
PETE LEPAGE: Yeah.

477
00:19:29,710 --> 00:19:33,090
And that's one of those things
like if you're running both

478
00:19:33,090 --> 00:19:38,310
the stable and beta, which is
what I do on my Nexus 4, I

479
00:19:38,310 --> 00:19:39,210
keep both there.

480
00:19:39,210 --> 00:19:43,160
And 99% of the time I find
myself in beta, because that's

481
00:19:43,160 --> 00:19:45,070
where I want to be testing.

482
00:19:45,070 --> 00:19:48,500
And I only go back to stable if
a page doesn't work or if

483
00:19:48,500 --> 00:19:51,070
something's a little bit broken,
a little bit weird.

484
00:19:51,070 --> 00:19:53,170
So I'd encourage people to
go to turn on the data

485
00:19:53,170 --> 00:19:57,670
compression proxy experiment,
and use beta on a regular

486
00:19:57,670 --> 00:19:58,900
basis, right?

487
00:19:58,900 --> 00:20:00,820
Figure out how things work.

488
00:20:00,820 --> 00:20:03,220
And as well, as you're going
through, you get a better

489
00:20:03,220 --> 00:20:08,150
opportunity to test your sites
to see hey, how are things

490
00:20:08,150 --> 00:20:14,200
going to look when we
get our next drop?

491
00:20:14,200 --> 00:20:14,760
PAUL KINLAN: Cool.

492
00:20:14,760 --> 00:20:16,215
So I think that's probably it.

493
00:20:16,215 --> 00:20:17,450
I think we're kind
of wrapped up.

494
00:20:17,450 --> 00:20:20,600
There was two major features
that we wanted to show you.

495
00:20:20,600 --> 00:20:22,500
They kind of worked
pretty well.

496
00:20:22,500 --> 00:20:25,430
WebRTC, I didn't want to kind
of risk it just yet.

497
00:20:25,430 --> 00:20:27,185
Just wanted to show
you getUserMedia.

498
00:20:27,185 --> 00:20:29,910
But we want to hear exactly what
you guys are working on.

499
00:20:29,910 --> 00:20:31,890
We want your feedback on
a lot of this stuff.

500
00:20:31,890 --> 00:20:33,890
We also want to know what you
want to hear about as well in

501
00:20:33,890 --> 00:20:36,560
more of these weekly meetings.

502
00:20:36,560 --> 00:20:38,750
I believe we've got Jake
Archibald on next week.

503
00:20:38,750 --> 00:20:39,410
PETE LEPAGE: Cool.

504
00:20:39,410 --> 00:20:41,530
PAUL KINLAN: And
if we haven't--

505
00:20:41,530 --> 00:20:42,380
he's on next week.

506
00:20:42,380 --> 00:20:45,455
I've just kind of nominated
him for it.

507
00:20:45,455 --> 00:20:46,720
PETE LEPAGE: Awesome.

508
00:20:46,720 --> 00:20:47,930
PAUL KINLAN: I think we're
going to try and

509
00:20:47,930 --> 00:20:48,640
talk about dev tools.

510
00:20:48,640 --> 00:20:49,860
Dev tools and performance
at least.

511
00:20:49,860 --> 00:20:52,480
I know Jake's big on
those two areas.

512
00:20:52,480 --> 00:20:53,980
And it's completely different.

513
00:20:53,980 --> 00:20:56,320
It's a completely different
game on mobile

514
00:20:56,320 --> 00:20:57,300
than it is to desktop.

515
00:20:57,300 --> 00:20:59,270
So we're going to show you some
nice stuff, and show you

516
00:20:59,270 --> 00:21:02,360
how to make faster web apps
and web sites on mobile.

517
00:21:02,360 --> 00:21:03,460
PETE LEPAGE: Very cool.

518
00:21:03,460 --> 00:21:04,560
PAUL KINLAN: Cool.

519
00:21:04,560 --> 00:21:06,450
So well, thank you,
Pete, for joining.

520
00:21:06,450 --> 00:21:07,950
I know it was early.

521
00:21:07,950 --> 00:21:09,270
Thank you for everything.

522
00:21:09,270 --> 00:21:10,170
PETE LEPAGE: OK.

523
00:21:10,170 --> 00:21:11,720
PAUL KINLAN: And thank you, Ian,
for being our producer

524
00:21:11,720 --> 00:21:14,346
and kind of waving at the camera
when it all happened.

525
00:21:14,346 --> 00:21:16,140
Oh, and--

526
00:21:16,140 --> 00:21:17,360
PETE LEPAGE: Oh, oh
another question.

527
00:21:17,360 --> 00:21:17,640
PAUL KINLAN: Right.

528
00:21:17,640 --> 00:21:18,880
There is another question.

529
00:21:18,880 --> 00:21:20,670
Not sure if you're reading
the YouTube comments.

530
00:21:20,670 --> 00:21:23,630
You're right, I'm not reading
the YouTube comments, sorry.

531
00:21:23,630 --> 00:21:26,020
Do you know what version the Web
Audio API will be shipped

532
00:21:26,020 --> 00:21:28,930
to beta, and a rough
date, too?

533
00:21:28,930 --> 00:21:31,930
On both those questions,
it's Tom Arden in

534
00:21:31,930 --> 00:21:34,500
Portsmouth in the UK.

535
00:21:34,500 --> 00:21:35,740
I don't have an answer
for that.

536
00:21:35,740 --> 00:21:37,610
I can speak to Chris Wilson and
a couple of other people

537
00:21:37,610 --> 00:21:39,495
to see what we might
be targeting.

538
00:21:39,495 --> 00:21:42,650
But even then, it's not even in
about flags at the moment,

539
00:21:42,650 --> 00:21:45,550
so if it's out six months down
the line or a year down the

540
00:21:45,550 --> 00:21:47,390
line, it's completely changed.

541
00:21:47,390 --> 00:21:49,250
I think the important thing to
say is that we want to get the

542
00:21:49,250 --> 00:21:51,980
same version that's in
Chrome for desktop

543
00:21:51,980 --> 00:21:53,540
in Chrome for Android.

544
00:21:53,540 --> 00:21:55,620
But it's not even in about flags
just yet, so I can't

545
00:21:55,620 --> 00:21:58,522
even say that we'll get
it any time soon.

546
00:21:58,522 --> 00:21:59,290
PETE LEPAGE: Yeah.

547
00:21:59,290 --> 00:22:03,520
The one thing I would
say, Tom, go to the

548
00:22:03,520 --> 00:22:04,880
Chromium bug list.

549
00:22:04,880 --> 00:22:07,330
See if you can find that in
there, because I'm pretty sure

550
00:22:07,330 --> 00:22:09,030
somebody's got that
filed as a bug.

551
00:22:09,030 --> 00:22:14,210
If they haven't, go file it as
a bug, even though I know

552
00:22:14,210 --> 00:22:16,680
we're working on it
at some point.

553
00:22:16,680 --> 00:22:21,090
And then ask other people to
star it, because seeing that

554
00:22:21,090 --> 00:22:25,110
sort of drive for things, and
understanding how important it

555
00:22:25,110 --> 00:22:28,270
is to the developers, is
really important to us.

556
00:22:28,270 --> 00:22:31,290
Because we really want to
prioritize based on what you

557
00:22:31,290 --> 00:22:33,020
find most important.

558
00:22:33,020 --> 00:22:34,630
PAUL KINLAN: Yep.

559
00:22:34,630 --> 00:22:35,320
Cool.

560
00:22:35,320 --> 00:22:37,740
And I think with that,
I think we're done.

561
00:22:37,740 --> 00:22:38,970
Thank you very much again.

562
00:22:38,970 --> 00:22:40,060
Thank you for watching.

563
00:22:40,060 --> 00:22:43,180
We'll see you next week when
I rope Jake into this.

564
00:22:43,180 --> 00:22:44,040
I know it will be fun.

565
00:22:44,040 --> 00:22:45,820
I've just got to teach him
not to swear on camera.

566
00:22:45,820 --> 00:22:48,320

567
00:22:48,320 --> 00:22:50,400
PETE LEPAGE: Or we just need to
put him on a good 30-second

568
00:22:50,400 --> 00:22:53,480
delay with a bleep out button.

569
00:22:53,480 --> 00:22:54,830
PAUL KINLAN: Yeah.

570
00:22:54,830 --> 00:22:55,310
Cool.

571
00:22:55,310 --> 00:22:59,270
Well, thank you very much,
and we'll see next week.

572
00:22:59,270 --> 00:23:00,010
PETE LEPAGE: Bye, guys.

573
00:23:00,010 --> 00:23:01,260
PAUL KINLAN: Bye-bye.

574
00:23:01,260 --> 00:23:48,445

